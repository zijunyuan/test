// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.3
// source: admin/promotion.proto

package admin

import (
	context "context"
	backend "git.garena.com/shopee/loan-service/airpay_backend/airpay_counter/apc_refactory/apc_protobuf/protobuf3.pb/group/backend"
	common "git.garena.com/shopee/loan-service/airpay_backend/airpay_counter/apc_refactory/apc_protobuf/protobuf3.pb/group/common"
	admin "git.garena.com/shopee/loan-service/airpay_backend/airpay_counter/apc_refactory/apc_protobuf/protobuf3.pb/product/admin"
	common2 "git.garena.com/shopee/loan-service/airpay_backend/airpay_counter/apc_refactory/apc_protobuf/protobuf3.pb/product/common"
	common1 "git.garena.com/shopee/loan-service/airpay_backend/airpay_counter/apc_refactory/apc_protobuf/protobuf3.pb/promotion/common"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type SortOrder int32

const (
	SortOrder_S_Default SortOrder = 0
	SortOrder_S_DESC    SortOrder = 1 // 降序
	SortOrder_S_ASC     SortOrder = 2 // 升序
)

// Enum value maps for SortOrder.
var (
	SortOrder_name = map[int32]string{
		0: "S_Default",
		1: "S_DESC",
		2: "S_ASC",
	}
	SortOrder_value = map[string]int32{
		"S_Default": 0,
		"S_DESC":    1,
		"S_ASC":     2,
	}
)

func (x SortOrder) Enum() *SortOrder {
	p := new(SortOrder)
	*p = x
	return p
}

func (x SortOrder) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortOrder) Descriptor() protoreflect.EnumDescriptor {
	return file_admin_promotion_proto_enumTypes[0].Descriptor()
}

func (SortOrder) Type() protoreflect.EnumType {
	return &file_admin_promotion_proto_enumTypes[0]
}

func (x SortOrder) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortOrder.Descriptor instead.
func (SortOrder) EnumDescriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{0}
}

type GetGroupsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId            uint32 `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	GroupName          string `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`                               //模糊搜索
	GroupDesc          string `protobuf:"bytes,3,opt,name=group_desc,json=groupDesc,proto3" json:"group_desc,omitempty"`                               //模糊搜索
	Creator            string `protobuf:"bytes,4,opt,name=creator,proto3" json:"creator,omitempty"`                                                    //模糊搜索
	SortDiscountAmount uint32 `protobuf:"varint,5,opt,name=sort_discount_amount,json=sortDiscountAmount,proto3" json:"sort_discount_amount,omitempty"` // SortOrder
	SortCashbackAmount uint32 `protobuf:"varint,6,opt,name=sort_cashback_amount,json=sortCashbackAmount,proto3" json:"sort_cashback_amount,omitempty"`
	SortCreateTime     uint32 `protobuf:"varint,7,opt,name=sort_create_time,json=sortCreateTime,proto3" json:"sort_create_time,omitempty"`
	PageSize           uint32 `protobuf:"varint,8,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageNo             uint32 `protobuf:"varint,9,opt,name=page_no,json=pageNo,proto3" json:"page_no,omitempty"`
}

func (x *GetGroupsReq) Reset() {
	*x = GetGroupsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupsReq) ProtoMessage() {}

func (x *GetGroupsReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupsReq.ProtoReflect.Descriptor instead.
func (*GetGroupsReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{0}
}

func (x *GetGroupsReq) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *GetGroupsReq) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *GetGroupsReq) GetGroupDesc() string {
	if x != nil {
		return x.GroupDesc
	}
	return ""
}

func (x *GetGroupsReq) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *GetGroupsReq) GetSortDiscountAmount() uint32 {
	if x != nil {
		return x.SortDiscountAmount
	}
	return 0
}

func (x *GetGroupsReq) GetSortCashbackAmount() uint32 {
	if x != nil {
		return x.SortCashbackAmount
	}
	return 0
}

func (x *GetGroupsReq) GetSortCreateTime() uint32 {
	if x != nil {
		return x.SortCreateTime
	}
	return 0
}

func (x *GetGroupsReq) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetGroupsReq) GetPageNo() uint32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

type GetGroupsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items      []*GetGroupsResp_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalCount uint32                `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *GetGroupsResp) Reset() {
	*x = GetGroupsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupsResp) ProtoMessage() {}

func (x *GetGroupsResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupsResp.ProtoReflect.Descriptor instead.
func (*GetGroupsResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{1}
}

func (x *GetGroupsResp) GetItems() []*GetGroupsResp_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GetGroupsResp) GetTotalCount() uint32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type GetGroupDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId uint32 `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *GetGroupDetailReq) Reset() {
	*x = GetGroupDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupDetailReq) ProtoMessage() {}

func (x *GetGroupDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupDetailReq.ProtoReflect.Descriptor instead.
func (*GetGroupDetailReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{2}
}

func (x *GetGroupDetailReq) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

type GetGroupDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupInfo      *common.Group `protobuf:"bytes,1,opt,name=group_info,json=groupInfo,proto3" json:"group_info,omitempty"`
	DiscountAmount uint32        `protobuf:"varint,2,opt,name=discount_amount,json=discountAmount,proto3" json:"discount_amount,omitempty"`
	CashbackAmount uint32        `protobuf:"varint,3,opt,name=cashback_amount,json=cashbackAmount,proto3" json:"cashback_amount,omitempty"`
}

func (x *GetGroupDetailResp) Reset() {
	*x = GetGroupDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupDetailResp) ProtoMessage() {}

func (x *GetGroupDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupDetailResp.ProtoReflect.Descriptor instead.
func (*GetGroupDetailResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{3}
}

func (x *GetGroupDetailResp) GetGroupInfo() *common.Group {
	if x != nil {
		return x.GroupInfo
	}
	return nil
}

func (x *GetGroupDetailResp) GetDiscountAmount() uint32 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *GetGroupDetailResp) GetCashbackAmount() uint32 {
	if x != nil {
		return x.CashbackAmount
	}
	return 0
}

type EditDefaultDiscountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultRule *common1.DiscountRule `protobuf:"bytes,1,opt,name=default_rule,json=defaultRule,proto3" json:"default_rule,omitempty"`
}

func (x *EditDefaultDiscountReq) Reset() {
	*x = EditDefaultDiscountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditDefaultDiscountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditDefaultDiscountReq) ProtoMessage() {}

func (x *EditDefaultDiscountReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditDefaultDiscountReq.ProtoReflect.Descriptor instead.
func (*EditDefaultDiscountReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{4}
}

func (x *EditDefaultDiscountReq) GetDefaultRule() *common1.DiscountRule {
	if x != nil {
		return x.DefaultRule
	}
	return nil
}

type EditDefaultDiscountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EditDefaultDiscountResp) Reset() {
	*x = EditDefaultDiscountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditDefaultDiscountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditDefaultDiscountResp) ProtoMessage() {}

func (x *EditDefaultDiscountResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditDefaultDiscountResp.ProtoReflect.Descriptor instead.
func (*EditDefaultDiscountResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{5}
}

type BatchEditDefaultDiscountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultRules []*BatchEditDefaultDiscountReq_Item `protobuf:"bytes,1,rep,name=default_rules,json=defaultRules,proto3" json:"default_rules,omitempty"`
}

func (x *BatchEditDefaultDiscountReq) Reset() {
	*x = BatchEditDefaultDiscountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchEditDefaultDiscountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchEditDefaultDiscountReq) ProtoMessage() {}

func (x *BatchEditDefaultDiscountReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchEditDefaultDiscountReq.ProtoReflect.Descriptor instead.
func (*BatchEditDefaultDiscountReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{6}
}

func (x *BatchEditDefaultDiscountReq) GetDefaultRules() []*BatchEditDefaultDiscountReq_Item {
	if x != nil {
		return x.DefaultRules
	}
	return nil
}

type BatchEditDefaultDiscountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BatchEditDefaultDiscountResp) Reset() {
	*x = BatchEditDefaultDiscountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchEditDefaultDiscountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchEditDefaultDiscountResp) ProtoMessage() {}

func (x *BatchEditDefaultDiscountResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchEditDefaultDiscountResp.ProtoReflect.Descriptor instead.
func (*BatchEditDefaultDiscountResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{7}
}

type ClearDefaultDiscountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId  uint32 `protobuf:"varint,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	DiscountId uint32 `protobuf:"varint,2,opt,name=discount_id,json=discountId,proto3" json:"discount_id,omitempty"`
}

func (x *ClearDefaultDiscountReq) Reset() {
	*x = ClearDefaultDiscountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearDefaultDiscountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearDefaultDiscountReq) ProtoMessage() {}

func (x *ClearDefaultDiscountReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearDefaultDiscountReq.ProtoReflect.Descriptor instead.
func (*ClearDefaultDiscountReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{8}
}

func (x *ClearDefaultDiscountReq) GetProductId() uint32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *ClearDefaultDiscountReq) GetDiscountId() uint32 {
	if x != nil {
		return x.DiscountId
	}
	return 0
}

type ClearDefaultDiscountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClearDefaultDiscountResp) Reset() {
	*x = ClearDefaultDiscountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearDefaultDiscountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearDefaultDiscountResp) ProtoMessage() {}

func (x *ClearDefaultDiscountResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearDefaultDiscountResp.ProtoReflect.Descriptor instead.
func (*ClearDefaultDiscountResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{9}
}

type AddDiscountRuleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rule *common1.DiscountRule `protobuf:"bytes,1,opt,name=rule,proto3" json:"rule,omitempty"`
}

func (x *AddDiscountRuleReq) Reset() {
	*x = AddDiscountRuleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDiscountRuleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDiscountRuleReq) ProtoMessage() {}

func (x *AddDiscountRuleReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDiscountRuleReq.ProtoReflect.Descriptor instead.
func (*AddDiscountRuleReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{10}
}

func (x *AddDiscountRuleReq) GetRule() *common1.DiscountRule {
	if x != nil {
		return x.Rule
	}
	return nil
}

type AddDiscountRuleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddDiscountRuleResp) Reset() {
	*x = AddDiscountRuleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDiscountRuleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDiscountRuleResp) ProtoMessage() {}

func (x *AddDiscountRuleResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDiscountRuleResp.ProtoReflect.Descriptor instead.
func (*AddDiscountRuleResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{11}
}

type BatchAddDiscountRuleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Discounts []*BatchAddDiscountRuleReq_Item `protobuf:"bytes,1,rep,name=discounts,proto3" json:"discounts,omitempty"`
}

func (x *BatchAddDiscountRuleReq) Reset() {
	*x = BatchAddDiscountRuleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchAddDiscountRuleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAddDiscountRuleReq) ProtoMessage() {}

func (x *BatchAddDiscountRuleReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAddDiscountRuleReq.ProtoReflect.Descriptor instead.
func (*BatchAddDiscountRuleReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{12}
}

func (x *BatchAddDiscountRuleReq) GetDiscounts() []*BatchAddDiscountRuleReq_Item {
	if x != nil {
		return x.Discounts
	}
	return nil
}

type BatchAddDiscountRuleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BatchAddDiscountRuleResp) Reset() {
	*x = BatchAddDiscountRuleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchAddDiscountRuleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAddDiscountRuleResp) ProtoMessage() {}

func (x *BatchAddDiscountRuleResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAddDiscountRuleResp.ProtoReflect.Descriptor instead.
func (*BatchAddDiscountRuleResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{13}
}

type EditDiscountRuleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rule *common1.DiscountRule `protobuf:"bytes,1,opt,name=rule,proto3" json:"rule,omitempty"`
}

func (x *EditDiscountRuleReq) Reset() {
	*x = EditDiscountRuleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditDiscountRuleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditDiscountRuleReq) ProtoMessage() {}

func (x *EditDiscountRuleReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditDiscountRuleReq.ProtoReflect.Descriptor instead.
func (*EditDiscountRuleReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{14}
}

func (x *EditDiscountRuleReq) GetRule() *common1.DiscountRule {
	if x != nil {
		return x.Rule
	}
	return nil
}

type EditDiscountRuleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EditDiscountRuleResp) Reset() {
	*x = EditDiscountRuleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditDiscountRuleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditDiscountRuleResp) ProtoMessage() {}

func (x *EditDiscountRuleResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditDiscountRuleResp.ProtoReflect.Descriptor instead.
func (*EditDiscountRuleResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{15}
}

type GetDiscountRulesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId    uint32 `protobuf:"varint,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	DiscountId   uint32 `protobuf:"varint,2,opt,name=discount_id,json=discountId,proto3" json:"discount_id,omitempty"`
	GroupId      uint32 `protobuf:"varint,3,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	GroupName    string `protobuf:"bytes,4,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"` //模糊搜索
	RuleStatus   int32  `protobuf:"varint,5,opt,name=rule_status,json=ruleStatus,proto3" json:"rule_status,omitempty"`
	SortPriority uint32 `protobuf:"varint,6,opt,name=sort_priority,json=sortPriority,proto3" json:"sort_priority,omitempty"` // SortOrder
	PageSize     uint32 `protobuf:"varint,7,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageNo       uint32 `protobuf:"varint,8,opt,name=page_no,json=pageNo,proto3" json:"page_no,omitempty"`
}

func (x *GetDiscountRulesReq) Reset() {
	*x = GetDiscountRulesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDiscountRulesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiscountRulesReq) ProtoMessage() {}

func (x *GetDiscountRulesReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiscountRulesReq.ProtoReflect.Descriptor instead.
func (*GetDiscountRulesReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{16}
}

func (x *GetDiscountRulesReq) GetProductId() uint32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *GetDiscountRulesReq) GetDiscountId() uint32 {
	if x != nil {
		return x.DiscountId
	}
	return 0
}

func (x *GetDiscountRulesReq) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *GetDiscountRulesReq) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *GetDiscountRulesReq) GetRuleStatus() int32 {
	if x != nil {
		return x.RuleStatus
	}
	return 0
}

func (x *GetDiscountRulesReq) GetSortPriority() uint32 {
	if x != nil {
		return x.SortPriority
	}
	return 0
}

func (x *GetDiscountRulesReq) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetDiscountRulesReq) GetPageNo() uint32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

type GetDiscountRulesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiscountRules []*common1.DiscountRuleRichInfo `protobuf:"bytes,1,rep,name=discount_rules,json=discountRules,proto3" json:"discount_rules,omitempty"`
	TotalCount    uint32                          `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *GetDiscountRulesResp) Reset() {
	*x = GetDiscountRulesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDiscountRulesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiscountRulesResp) ProtoMessage() {}

func (x *GetDiscountRulesResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiscountRulesResp.ProtoReflect.Descriptor instead.
func (*GetDiscountRulesResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{17}
}

func (x *GetDiscountRulesResp) GetDiscountRules() []*common1.DiscountRuleRichInfo {
	if x != nil {
		return x.DiscountRules
	}
	return nil
}

func (x *GetDiscountRulesResp) GetTotalCount() uint32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type InactivateDiscountRuleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiscountId uint32 `protobuf:"varint,1,opt,name=discount_id,json=discountId,proto3" json:"discount_id,omitempty"`
}

func (x *InactivateDiscountRuleReq) Reset() {
	*x = InactivateDiscountRuleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InactivateDiscountRuleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InactivateDiscountRuleReq) ProtoMessage() {}

func (x *InactivateDiscountRuleReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InactivateDiscountRuleReq.ProtoReflect.Descriptor instead.
func (*InactivateDiscountRuleReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{18}
}

func (x *InactivateDiscountRuleReq) GetDiscountId() uint32 {
	if x != nil {
		return x.DiscountId
	}
	return 0
}

type InactivateDiscountRuleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InactivateDiscountRuleResp) Reset() {
	*x = InactivateDiscountRuleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InactivateDiscountRuleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InactivateDiscountRuleResp) ProtoMessage() {}

func (x *InactivateDiscountRuleResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InactivateDiscountRuleResp.ProtoReflect.Descriptor instead.
func (*InactivateDiscountRuleResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{19}
}

type PublishDiscountRuleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId  uint32 `protobuf:"varint,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	DiscountId uint32 `protobuf:"varint,2,opt,name=discount_id,json=discountId,proto3" json:"discount_id,omitempty"`
}

func (x *PublishDiscountRuleReq) Reset() {
	*x = PublishDiscountRuleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishDiscountRuleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishDiscountRuleReq) ProtoMessage() {}

func (x *PublishDiscountRuleReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishDiscountRuleReq.ProtoReflect.Descriptor instead.
func (*PublishDiscountRuleReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{20}
}

func (x *PublishDiscountRuleReq) GetProductId() uint32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *PublishDiscountRuleReq) GetDiscountId() uint32 {
	if x != nil {
		return x.DiscountId
	}
	return 0
}

type PublishDiscountRuleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PublishDiscountRuleResp) Reset() {
	*x = PublishDiscountRuleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishDiscountRuleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishDiscountRuleResp) ProtoMessage() {}

func (x *PublishDiscountRuleResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishDiscountRuleResp.ProtoReflect.Descriptor instead.
func (*PublishDiscountRuleResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{21}
}

type GetDiscountRuleDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiscountId uint32 `protobuf:"varint,1,opt,name=discount_id,json=discountId,proto3" json:"discount_id,omitempty"`
}

func (x *GetDiscountRuleDetailReq) Reset() {
	*x = GetDiscountRuleDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDiscountRuleDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiscountRuleDetailReq) ProtoMessage() {}

func (x *GetDiscountRuleDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiscountRuleDetailReq.ProtoReflect.Descriptor instead.
func (*GetDiscountRuleDetailReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{22}
}

func (x *GetDiscountRuleDetailReq) GetDiscountId() uint32 {
	if x != nil {
		return x.DiscountId
	}
	return 0
}

type GetDiscountRuleDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rule *common1.DiscountRuleRichInfo `protobuf:"bytes,1,opt,name=rule,proto3" json:"rule,omitempty"`
}

func (x *GetDiscountRuleDetailResp) Reset() {
	*x = GetDiscountRuleDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDiscountRuleDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiscountRuleDetailResp) ProtoMessage() {}

func (x *GetDiscountRuleDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiscountRuleDetailResp.ProtoReflect.Descriptor instead.
func (*GetDiscountRuleDetailResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{23}
}

func (x *GetDiscountRuleDetailResp) GetRule() *common1.DiscountRuleRichInfo {
	if x != nil {
		return x.Rule
	}
	return nil
}

type BatchEditDiscountRulePriorityReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId uint32                                   `protobuf:"varint,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Items     []*BatchEditDiscountRulePriorityReq_Item `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *BatchEditDiscountRulePriorityReq) Reset() {
	*x = BatchEditDiscountRulePriorityReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchEditDiscountRulePriorityReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchEditDiscountRulePriorityReq) ProtoMessage() {}

func (x *BatchEditDiscountRulePriorityReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchEditDiscountRulePriorityReq.ProtoReflect.Descriptor instead.
func (*BatchEditDiscountRulePriorityReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{24}
}

func (x *BatchEditDiscountRulePriorityReq) GetProductId() uint32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *BatchEditDiscountRulePriorityReq) GetItems() []*BatchEditDiscountRulePriorityReq_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type BatchEditDiscountRulePriorityResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BatchEditDiscountRulePriorityResp) Reset() {
	*x = BatchEditDiscountRulePriorityResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchEditDiscountRulePriorityResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchEditDiscountRulePriorityResp) ProtoMessage() {}

func (x *BatchEditDiscountRulePriorityResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchEditDiscountRulePriorityResp.ProtoReflect.Descriptor instead.
func (*BatchEditDiscountRulePriorityResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{25}
}

type SearchProductDiscountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Condition *admin.SearchProductReq `protobuf:"bytes,1,opt,name=condition,proto3" json:"condition,omitempty"`
}

func (x *SearchProductDiscountReq) Reset() {
	*x = SearchProductDiscountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchProductDiscountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchProductDiscountReq) ProtoMessage() {}

func (x *SearchProductDiscountReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchProductDiscountReq.ProtoReflect.Descriptor instead.
func (*SearchProductDiscountReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{26}
}

func (x *SearchProductDiscountReq) GetCondition() *admin.SearchProductReq {
	if x != nil {
		return x.Condition
	}
	return nil
}

type SearchProductDiscountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Products   []*SearchProductDiscountResp_Item `protobuf:"bytes,1,rep,name=products,proto3" json:"products,omitempty"`
	ProductNum uint32                            `protobuf:"varint,2,opt,name=product_num,json=productNum,proto3" json:"product_num,omitempty"`
}

func (x *SearchProductDiscountResp) Reset() {
	*x = SearchProductDiscountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchProductDiscountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchProductDiscountResp) ProtoMessage() {}

func (x *SearchProductDiscountResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchProductDiscountResp.ProtoReflect.Descriptor instead.
func (*SearchProductDiscountResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{27}
}

func (x *SearchProductDiscountResp) GetProducts() []*SearchProductDiscountResp_Item {
	if x != nil {
		return x.Products
	}
	return nil
}

func (x *SearchProductDiscountResp) GetProductNum() uint32 {
	if x != nil {
		return x.ProductNum
	}
	return 0
}

type GetDiscountRulesByGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId uint32 `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *GetDiscountRulesByGroupReq) Reset() {
	*x = GetDiscountRulesByGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDiscountRulesByGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiscountRulesByGroupReq) ProtoMessage() {}

func (x *GetDiscountRulesByGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiscountRulesByGroupReq.ProtoReflect.Descriptor instead.
func (*GetDiscountRulesByGroupReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{28}
}

func (x *GetDiscountRulesByGroupReq) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

type GetDiscountRulesByGroupResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items     []*GetDiscountRulesByGroupResp_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	GroupName string                              `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
}

func (x *GetDiscountRulesByGroupResp) Reset() {
	*x = GetDiscountRulesByGroupResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDiscountRulesByGroupResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiscountRulesByGroupResp) ProtoMessage() {}

func (x *GetDiscountRulesByGroupResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiscountRulesByGroupResp.ProtoReflect.Descriptor instead.
func (*GetDiscountRulesByGroupResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{29}
}

func (x *GetDiscountRulesByGroupResp) GetItems() []*GetDiscountRulesByGroupResp_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GetDiscountRulesByGroupResp) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

type ExportDiscountRulesByGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId uint32 `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *ExportDiscountRulesByGroupReq) Reset() {
	*x = ExportDiscountRulesByGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportDiscountRulesByGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportDiscountRulesByGroupReq) ProtoMessage() {}

func (x *ExportDiscountRulesByGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportDiscountRulesByGroupReq.ProtoReflect.Descriptor instead.
func (*ExportDiscountRulesByGroupReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{30}
}

func (x *ExportDiscountRulesByGroupReq) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

type ExportDiscountRulesByGroupResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExportDiscountRulesByGroupResp) Reset() {
	*x = ExportDiscountRulesByGroupResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportDiscountRulesByGroupResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportDiscountRulesByGroupResp) ProtoMessage() {}

func (x *ExportDiscountRulesByGroupResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportDiscountRulesByGroupResp.ProtoReflect.Descriptor instead.
func (*ExportDiscountRulesByGroupResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{31}
}

type GetDiscountUploadHistoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageNo   int32 `protobuf:"varint,2,opt,name=page_no,json=pageNo,proto3" json:"page_no,omitempty"`
	//see TimeOrder enum in common
	UploadTimeOrder int64 `protobuf:"varint,3,opt,name=upload_time_order,json=uploadTimeOrder,proto3" json:"upload_time_order,omitempty"`
}

func (x *GetDiscountUploadHistoryReq) Reset() {
	*x = GetDiscountUploadHistoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDiscountUploadHistoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiscountUploadHistoryReq) ProtoMessage() {}

func (x *GetDiscountUploadHistoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiscountUploadHistoryReq.ProtoReflect.Descriptor instead.
func (*GetDiscountUploadHistoryReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{32}
}

func (x *GetDiscountUploadHistoryReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetDiscountUploadHistoryReq) GetPageNo() int32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *GetDiscountUploadHistoryReq) GetUploadTimeOrder() int64 {
	if x != nil {
		return x.UploadTimeOrder
	}
	return 0
}

type GetDiscountUploadHistoryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GetDiscountUploadHistoryResp_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Total uint32                               `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GetDiscountUploadHistoryResp) Reset() {
	*x = GetDiscountUploadHistoryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDiscountUploadHistoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiscountUploadHistoryResp) ProtoMessage() {}

func (x *GetDiscountUploadHistoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiscountUploadHistoryResp.ProtoReflect.Descriptor instead.
func (*GetDiscountUploadHistoryResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{33}
}

func (x *GetDiscountUploadHistoryResp) GetItems() []*GetDiscountUploadHistoryResp_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GetDiscountUploadHistoryResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetDiscountRulesByProductReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId []uint32 `protobuf:"varint,1,rep,packed,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *GetDiscountRulesByProductReq) Reset() {
	*x = GetDiscountRulesByProductReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDiscountRulesByProductReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiscountRulesByProductReq) ProtoMessage() {}

func (x *GetDiscountRulesByProductReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiscountRulesByProductReq.ProtoReflect.Descriptor instead.
func (*GetDiscountRulesByProductReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{34}
}

func (x *GetDiscountRulesByProductReq) GetProductId() []uint32 {
	if x != nil {
		return x.ProductId
	}
	return nil
}

type GetDiscountRulesByProductResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductMap map[uint32]*GetDiscountRulesByProductResp_Item `protobuf:"bytes,1,rep,name=product_map,json=productMap,proto3" json:"product_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetDiscountRulesByProductResp) Reset() {
	*x = GetDiscountRulesByProductResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDiscountRulesByProductResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiscountRulesByProductResp) ProtoMessage() {}

func (x *GetDiscountRulesByProductResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiscountRulesByProductResp.ProtoReflect.Descriptor instead.
func (*GetDiscountRulesByProductResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{35}
}

func (x *GetDiscountRulesByProductResp) GetProductMap() map[uint32]*GetDiscountRulesByProductResp_Item {
	if x != nil {
		return x.ProductMap
	}
	return nil
}

type GetAllDiscountRuleDetailByProductReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId uint32 `protobuf:"varint,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	PageSize  uint32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageNo    uint32 `protobuf:"varint,3,opt,name=page_no,json=pageNo,proto3" json:"page_no,omitempty"`
}

func (x *GetAllDiscountRuleDetailByProductReq) Reset() {
	*x = GetAllDiscountRuleDetailByProductReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllDiscountRuleDetailByProductReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllDiscountRuleDetailByProductReq) ProtoMessage() {}

func (x *GetAllDiscountRuleDetailByProductReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllDiscountRuleDetailByProductReq.ProtoReflect.Descriptor instead.
func (*GetAllDiscountRuleDetailByProductReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{36}
}

func (x *GetAllDiscountRuleDetailByProductReq) GetProductId() uint32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *GetAllDiscountRuleDetailByProductReq) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetAllDiscountRuleDetailByProductReq) GetPageNo() uint32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

type GetAllDiscountRuleDetailByProductResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rules       []*common1.DiscountRuleRichInfo `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
	DefaultRule *common1.DiscountRuleRichInfo   `protobuf:"bytes,2,opt,name=default_rule,json=defaultRule,proto3" json:"default_rule,omitempty"`
	TotalCount  uint32                          `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *GetAllDiscountRuleDetailByProductResp) Reset() {
	*x = GetAllDiscountRuleDetailByProductResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllDiscountRuleDetailByProductResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllDiscountRuleDetailByProductResp) ProtoMessage() {}

func (x *GetAllDiscountRuleDetailByProductResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllDiscountRuleDetailByProductResp.ProtoReflect.Descriptor instead.
func (*GetAllDiscountRuleDetailByProductResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{37}
}

func (x *GetAllDiscountRuleDetailByProductResp) GetRules() []*common1.DiscountRuleRichInfo {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *GetAllDiscountRuleDetailByProductResp) GetDefaultRule() *common1.DiscountRuleRichInfo {
	if x != nil {
		return x.DefaultRule
	}
	return nil
}

func (x *GetAllDiscountRuleDetailByProductResp) GetTotalCount() uint32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type EditDefaultCashbackReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultRule *common1.CashbackRule `protobuf:"bytes,1,opt,name=default_rule,json=defaultRule,proto3" json:"default_rule,omitempty"`
}

func (x *EditDefaultCashbackReq) Reset() {
	*x = EditDefaultCashbackReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditDefaultCashbackReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditDefaultCashbackReq) ProtoMessage() {}

func (x *EditDefaultCashbackReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditDefaultCashbackReq.ProtoReflect.Descriptor instead.
func (*EditDefaultCashbackReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{38}
}

func (x *EditDefaultCashbackReq) GetDefaultRule() *common1.CashbackRule {
	if x != nil {
		return x.DefaultRule
	}
	return nil
}

type EditDefaultCashbackResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EditDefaultCashbackResp) Reset() {
	*x = EditDefaultCashbackResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditDefaultCashbackResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditDefaultCashbackResp) ProtoMessage() {}

func (x *EditDefaultCashbackResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditDefaultCashbackResp.ProtoReflect.Descriptor instead.
func (*EditDefaultCashbackResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{39}
}

type ClearDefaultCashbackReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId  uint32 `protobuf:"varint,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	CashbackId uint32 `protobuf:"varint,2,opt,name=cashback_id,json=cashbackId,proto3" json:"cashback_id,omitempty"`
}

func (x *ClearDefaultCashbackReq) Reset() {
	*x = ClearDefaultCashbackReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearDefaultCashbackReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearDefaultCashbackReq) ProtoMessage() {}

func (x *ClearDefaultCashbackReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearDefaultCashbackReq.ProtoReflect.Descriptor instead.
func (*ClearDefaultCashbackReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{40}
}

func (x *ClearDefaultCashbackReq) GetProductId() uint32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *ClearDefaultCashbackReq) GetCashbackId() uint32 {
	if x != nil {
		return x.CashbackId
	}
	return 0
}

type ClearDefaultCashbackResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClearDefaultCashbackResp) Reset() {
	*x = ClearDefaultCashbackResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearDefaultCashbackResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearDefaultCashbackResp) ProtoMessage() {}

func (x *ClearDefaultCashbackResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearDefaultCashbackResp.ProtoReflect.Descriptor instead.
func (*ClearDefaultCashbackResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{41}
}

type AddCashbackRuleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rule *common1.CashbackRule `protobuf:"bytes,1,opt,name=rule,proto3" json:"rule,omitempty"`
}

func (x *AddCashbackRuleReq) Reset() {
	*x = AddCashbackRuleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCashbackRuleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCashbackRuleReq) ProtoMessage() {}

func (x *AddCashbackRuleReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCashbackRuleReq.ProtoReflect.Descriptor instead.
func (*AddCashbackRuleReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{42}
}

func (x *AddCashbackRuleReq) GetRule() *common1.CashbackRule {
	if x != nil {
		return x.Rule
	}
	return nil
}

type AddCashbackRuleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddCashbackRuleResp) Reset() {
	*x = AddCashbackRuleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCashbackRuleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCashbackRuleResp) ProtoMessage() {}

func (x *AddCashbackRuleResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCashbackRuleResp.ProtoReflect.Descriptor instead.
func (*AddCashbackRuleResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{43}
}

type EditCashbackRuleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rule *common1.CashbackRule `protobuf:"bytes,1,opt,name=rule,proto3" json:"rule,omitempty"`
}

func (x *EditCashbackRuleReq) Reset() {
	*x = EditCashbackRuleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditCashbackRuleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditCashbackRuleReq) ProtoMessage() {}

func (x *EditCashbackRuleReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditCashbackRuleReq.ProtoReflect.Descriptor instead.
func (*EditCashbackRuleReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{44}
}

func (x *EditCashbackRuleReq) GetRule() *common1.CashbackRule {
	if x != nil {
		return x.Rule
	}
	return nil
}

type EditCashbackRuleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EditCashbackRuleResp) Reset() {
	*x = EditCashbackRuleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditCashbackRuleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditCashbackRuleResp) ProtoMessage() {}

func (x *EditCashbackRuleResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditCashbackRuleResp.ProtoReflect.Descriptor instead.
func (*EditCashbackRuleResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{45}
}

type GetCashbackRulesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId    uint32 `protobuf:"varint,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	CashbackId   uint32 `protobuf:"varint,2,opt,name=cashback_id,json=cashbackId,proto3" json:"cashback_id,omitempty"`
	GroupId      uint32 `protobuf:"varint,3,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	GroupName    string `protobuf:"bytes,4,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"` //模糊搜索
	RuleStatus   int32  `protobuf:"varint,5,opt,name=rule_status,json=ruleStatus,proto3" json:"rule_status,omitempty"`
	Mode         int32  `protobuf:"varint,6,opt,name=mode,proto3" json:"mode,omitempty"`                                     // CashbackRule_Mode
	SortPriority int32  `protobuf:"varint,7,opt,name=sort_priority,json=sortPriority,proto3" json:"sort_priority,omitempty"` // SortOrder
	PageSize     uint32 `protobuf:"varint,8,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageNo       uint32 `protobuf:"varint,9,opt,name=page_no,json=pageNo,proto3" json:"page_no,omitempty"`
}

func (x *GetCashbackRulesReq) Reset() {
	*x = GetCashbackRulesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCashbackRulesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCashbackRulesReq) ProtoMessage() {}

func (x *GetCashbackRulesReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCashbackRulesReq.ProtoReflect.Descriptor instead.
func (*GetCashbackRulesReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{46}
}

func (x *GetCashbackRulesReq) GetProductId() uint32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *GetCashbackRulesReq) GetCashbackId() uint32 {
	if x != nil {
		return x.CashbackId
	}
	return 0
}

func (x *GetCashbackRulesReq) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *GetCashbackRulesReq) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *GetCashbackRulesReq) GetRuleStatus() int32 {
	if x != nil {
		return x.RuleStatus
	}
	return 0
}

func (x *GetCashbackRulesReq) GetMode() int32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *GetCashbackRulesReq) GetSortPriority() int32 {
	if x != nil {
		return x.SortPriority
	}
	return 0
}

func (x *GetCashbackRulesReq) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetCashbackRulesReq) GetPageNo() uint32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

type GetCashbackRulesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CashbackRules []*common1.CashbackRuleRichInfo `protobuf:"bytes,1,rep,name=cashback_rules,json=cashbackRules,proto3" json:"cashback_rules,omitempty"`
	TotalCount    uint32                          `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *GetCashbackRulesResp) Reset() {
	*x = GetCashbackRulesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCashbackRulesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCashbackRulesResp) ProtoMessage() {}

func (x *GetCashbackRulesResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCashbackRulesResp.ProtoReflect.Descriptor instead.
func (*GetCashbackRulesResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{47}
}

func (x *GetCashbackRulesResp) GetCashbackRules() []*common1.CashbackRuleRichInfo {
	if x != nil {
		return x.CashbackRules
	}
	return nil
}

func (x *GetCashbackRulesResp) GetTotalCount() uint32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type InactivateCashbackRuleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CashbackId uint32 `protobuf:"varint,1,opt,name=cashback_id,json=cashbackId,proto3" json:"cashback_id,omitempty"`
}

func (x *InactivateCashbackRuleReq) Reset() {
	*x = InactivateCashbackRuleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InactivateCashbackRuleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InactivateCashbackRuleReq) ProtoMessage() {}

func (x *InactivateCashbackRuleReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InactivateCashbackRuleReq.ProtoReflect.Descriptor instead.
func (*InactivateCashbackRuleReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{48}
}

func (x *InactivateCashbackRuleReq) GetCashbackId() uint32 {
	if x != nil {
		return x.CashbackId
	}
	return 0
}

type InactivateCashbackRuleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InactivateCashbackRuleResp) Reset() {
	*x = InactivateCashbackRuleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InactivateCashbackRuleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InactivateCashbackRuleResp) ProtoMessage() {}

func (x *InactivateCashbackRuleResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InactivateCashbackRuleResp.ProtoReflect.Descriptor instead.
func (*InactivateCashbackRuleResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{49}
}

type PublishCashbackRuleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rule *common1.CashbackRule `protobuf:"bytes,1,opt,name=rule,proto3" json:"rule,omitempty"`
}

func (x *PublishCashbackRuleReq) Reset() {
	*x = PublishCashbackRuleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishCashbackRuleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishCashbackRuleReq) ProtoMessage() {}

func (x *PublishCashbackRuleReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishCashbackRuleReq.ProtoReflect.Descriptor instead.
func (*PublishCashbackRuleReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{50}
}

func (x *PublishCashbackRuleReq) GetRule() *common1.CashbackRule {
	if x != nil {
		return x.Rule
	}
	return nil
}

type PublishCashbackRuleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PublishCashbackRuleResp) Reset() {
	*x = PublishCashbackRuleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishCashbackRuleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishCashbackRuleResp) ProtoMessage() {}

func (x *PublishCashbackRuleResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishCashbackRuleResp.ProtoReflect.Descriptor instead.
func (*PublishCashbackRuleResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{51}
}

type GetCashbackRuleDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CashbackId uint32 `protobuf:"varint,1,opt,name=cashback_id,json=cashbackId,proto3" json:"cashback_id,omitempty"`
}

func (x *GetCashbackRuleDetailReq) Reset() {
	*x = GetCashbackRuleDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCashbackRuleDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCashbackRuleDetailReq) ProtoMessage() {}

func (x *GetCashbackRuleDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCashbackRuleDetailReq.ProtoReflect.Descriptor instead.
func (*GetCashbackRuleDetailReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{52}
}

func (x *GetCashbackRuleDetailReq) GetCashbackId() uint32 {
	if x != nil {
		return x.CashbackId
	}
	return 0
}

type GetCashbackRuleDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rule *common1.CashbackRuleRichInfo `protobuf:"bytes,1,opt,name=rule,proto3" json:"rule,omitempty"`
}

func (x *GetCashbackRuleDetailResp) Reset() {
	*x = GetCashbackRuleDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCashbackRuleDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCashbackRuleDetailResp) ProtoMessage() {}

func (x *GetCashbackRuleDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCashbackRuleDetailResp.ProtoReflect.Descriptor instead.
func (*GetCashbackRuleDetailResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{53}
}

func (x *GetCashbackRuleDetailResp) GetRule() *common1.CashbackRuleRichInfo {
	if x != nil {
		return x.Rule
	}
	return nil
}

type BatchEditCashbackRulePriorityReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId uint32                                   `protobuf:"varint,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Items     []*BatchEditCashbackRulePriorityReq_Item `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *BatchEditCashbackRulePriorityReq) Reset() {
	*x = BatchEditCashbackRulePriorityReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchEditCashbackRulePriorityReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchEditCashbackRulePriorityReq) ProtoMessage() {}

func (x *BatchEditCashbackRulePriorityReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchEditCashbackRulePriorityReq.ProtoReflect.Descriptor instead.
func (*BatchEditCashbackRulePriorityReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{54}
}

func (x *BatchEditCashbackRulePriorityReq) GetProductId() uint32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *BatchEditCashbackRulePriorityReq) GetItems() []*BatchEditCashbackRulePriorityReq_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type BatchEditCashbackRulePriorityResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BatchEditCashbackRulePriorityResp) Reset() {
	*x = BatchEditCashbackRulePriorityResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchEditCashbackRulePriorityResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchEditCashbackRulePriorityResp) ProtoMessage() {}

func (x *BatchEditCashbackRulePriorityResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchEditCashbackRulePriorityResp.ProtoReflect.Descriptor instead.
func (*BatchEditCashbackRulePriorityResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{55}
}

type SearchProductCashbacksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Condition                 *admin.SearchProductReq `protobuf:"bytes,1,opt,name=condition,proto3" json:"condition,omitempty"`
	FilterDefaultCashbackMode []uint32                `protobuf:"varint,2,rep,packed,name=filter_default_cashback_mode,json=filterDefaultCashbackMode,proto3" json:"filter_default_cashback_mode,omitempty"` // 见cashback mode定义
}

func (x *SearchProductCashbacksReq) Reset() {
	*x = SearchProductCashbacksReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchProductCashbacksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchProductCashbacksReq) ProtoMessage() {}

func (x *SearchProductCashbacksReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchProductCashbacksReq.ProtoReflect.Descriptor instead.
func (*SearchProductCashbacksReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{56}
}

func (x *SearchProductCashbacksReq) GetCondition() *admin.SearchProductReq {
	if x != nil {
		return x.Condition
	}
	return nil
}

func (x *SearchProductCashbacksReq) GetFilterDefaultCashbackMode() []uint32 {
	if x != nil {
		return x.FilterDefaultCashbackMode
	}
	return nil
}

type SearchProductCashbacksResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Products   []*SearchProductCashbacksResp_Item `protobuf:"bytes,1,rep,name=products,proto3" json:"products,omitempty"`
	ProductNum uint32                             `protobuf:"varint,2,opt,name=product_num,json=productNum,proto3" json:"product_num,omitempty"`
}

func (x *SearchProductCashbacksResp) Reset() {
	*x = SearchProductCashbacksResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchProductCashbacksResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchProductCashbacksResp) ProtoMessage() {}

func (x *SearchProductCashbacksResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchProductCashbacksResp.ProtoReflect.Descriptor instead.
func (*SearchProductCashbacksResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{57}
}

func (x *SearchProductCashbacksResp) GetProducts() []*SearchProductCashbacksResp_Item {
	if x != nil {
		return x.Products
	}
	return nil
}

func (x *SearchProductCashbacksResp) GetProductNum() uint32 {
	if x != nil {
		return x.ProductNum
	}
	return 0
}

type GetCashbackRulesByGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId uint32 `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *GetCashbackRulesByGroupReq) Reset() {
	*x = GetCashbackRulesByGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCashbackRulesByGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCashbackRulesByGroupReq) ProtoMessage() {}

func (x *GetCashbackRulesByGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCashbackRulesByGroupReq.ProtoReflect.Descriptor instead.
func (*GetCashbackRulesByGroupReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{58}
}

func (x *GetCashbackRulesByGroupReq) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

type GetCashbackRulesByGroupResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items     []*GetCashbackRulesByGroupResp_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	GroupName string                              `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
}

func (x *GetCashbackRulesByGroupResp) Reset() {
	*x = GetCashbackRulesByGroupResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCashbackRulesByGroupResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCashbackRulesByGroupResp) ProtoMessage() {}

func (x *GetCashbackRulesByGroupResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCashbackRulesByGroupResp.ProtoReflect.Descriptor instead.
func (*GetCashbackRulesByGroupResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{59}
}

func (x *GetCashbackRulesByGroupResp) GetItems() []*GetCashbackRulesByGroupResp_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GetCashbackRulesByGroupResp) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

type ExportCashbackRulesByGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId uint32 `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *ExportCashbackRulesByGroupReq) Reset() {
	*x = ExportCashbackRulesByGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportCashbackRulesByGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportCashbackRulesByGroupReq) ProtoMessage() {}

func (x *ExportCashbackRulesByGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportCashbackRulesByGroupReq.ProtoReflect.Descriptor instead.
func (*ExportCashbackRulesByGroupReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{60}
}

func (x *ExportCashbackRulesByGroupReq) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

type ExportCashbackRulesByGroupResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExportCashbackRulesByGroupResp) Reset() {
	*x = ExportCashbackRulesByGroupResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportCashbackRulesByGroupResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportCashbackRulesByGroupResp) ProtoMessage() {}

func (x *ExportCashbackRulesByGroupResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportCashbackRulesByGroupResp.ProtoReflect.Descriptor instead.
func (*ExportCashbackRulesByGroupResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{61}
}

type GetCashbackRulesByProductReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId []uint32 `protobuf:"varint,1,rep,packed,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *GetCashbackRulesByProductReq) Reset() {
	*x = GetCashbackRulesByProductReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCashbackRulesByProductReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCashbackRulesByProductReq) ProtoMessage() {}

func (x *GetCashbackRulesByProductReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCashbackRulesByProductReq.ProtoReflect.Descriptor instead.
func (*GetCashbackRulesByProductReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{62}
}

func (x *GetCashbackRulesByProductReq) GetProductId() []uint32 {
	if x != nil {
		return x.ProductId
	}
	return nil
}

type GetCashbackRulesByProductResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductMap map[uint32]*GetCashbackRulesByProductResp_Item `protobuf:"bytes,1,rep,name=product_map,json=productMap,proto3" json:"product_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetCashbackRulesByProductResp) Reset() {
	*x = GetCashbackRulesByProductResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCashbackRulesByProductResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCashbackRulesByProductResp) ProtoMessage() {}

func (x *GetCashbackRulesByProductResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCashbackRulesByProductResp.ProtoReflect.Descriptor instead.
func (*GetCashbackRulesByProductResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{63}
}

func (x *GetCashbackRulesByProductResp) GetProductMap() map[uint32]*GetCashbackRulesByProductResp_Item {
	if x != nil {
		return x.ProductMap
	}
	return nil
}

type GetAllCashbackRuleDetailByProductReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId uint32 `protobuf:"varint,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	PageSize  uint32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageNo    uint32 `protobuf:"varint,3,opt,name=page_no,json=pageNo,proto3" json:"page_no,omitempty"`
}

func (x *GetAllCashbackRuleDetailByProductReq) Reset() {
	*x = GetAllCashbackRuleDetailByProductReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllCashbackRuleDetailByProductReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllCashbackRuleDetailByProductReq) ProtoMessage() {}

func (x *GetAllCashbackRuleDetailByProductReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllCashbackRuleDetailByProductReq.ProtoReflect.Descriptor instead.
func (*GetAllCashbackRuleDetailByProductReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{64}
}

func (x *GetAllCashbackRuleDetailByProductReq) GetProductId() uint32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *GetAllCashbackRuleDetailByProductReq) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetAllCashbackRuleDetailByProductReq) GetPageNo() uint32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

type GetAllCashbackRuleDetailByProductResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rules       []*common1.CashbackRuleRichInfo `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
	DefaultRule *common1.CashbackRuleRichInfo   `protobuf:"bytes,2,opt,name=default_rule,json=defaultRule,proto3" json:"default_rule,omitempty"`
	TotalCount  uint32                          `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *GetAllCashbackRuleDetailByProductResp) Reset() {
	*x = GetAllCashbackRuleDetailByProductResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllCashbackRuleDetailByProductResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllCashbackRuleDetailByProductResp) ProtoMessage() {}

func (x *GetAllCashbackRuleDetailByProductResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllCashbackRuleDetailByProductResp.ProtoReflect.Descriptor instead.
func (*GetAllCashbackRuleDetailByProductResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{65}
}

func (x *GetAllCashbackRuleDetailByProductResp) GetRules() []*common1.CashbackRuleRichInfo {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *GetAllCashbackRuleDetailByProductResp) GetDefaultRule() *common1.CashbackRuleRichInfo {
	if x != nil {
		return x.DefaultRule
	}
	return nil
}

func (x *GetAllCashbackRuleDetailByProductResp) GetTotalCount() uint32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type AddBonusRuleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rule *common1.BonusRule `protobuf:"bytes,1,opt,name=rule,proto3" json:"rule,omitempty"`
}

func (x *AddBonusRuleReq) Reset() {
	*x = AddBonusRuleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBonusRuleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBonusRuleReq) ProtoMessage() {}

func (x *AddBonusRuleReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBonusRuleReq.ProtoReflect.Descriptor instead.
func (*AddBonusRuleReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{66}
}

func (x *AddBonusRuleReq) GetRule() *common1.BonusRule {
	if x != nil {
		return x.Rule
	}
	return nil
}

type AddBonusRuleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddBonusRuleResp) Reset() {
	*x = AddBonusRuleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBonusRuleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBonusRuleResp) ProtoMessage() {}

func (x *AddBonusRuleResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBonusRuleResp.ProtoReflect.Descriptor instead.
func (*AddBonusRuleResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{67}
}

type EditBonusRuleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rule *common1.BonusRule `protobuf:"bytes,1,opt,name=rule,proto3" json:"rule,omitempty"`
}

func (x *EditBonusRuleReq) Reset() {
	*x = EditBonusRuleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditBonusRuleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditBonusRuleReq) ProtoMessage() {}

func (x *EditBonusRuleReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditBonusRuleReq.ProtoReflect.Descriptor instead.
func (*EditBonusRuleReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{68}
}

func (x *EditBonusRuleReq) GetRule() *common1.BonusRule {
	if x != nil {
		return x.Rule
	}
	return nil
}

type EditBonusRuleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EditBonusRuleResp) Reset() {
	*x = EditBonusRuleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditBonusRuleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditBonusRuleResp) ProtoMessage() {}

func (x *EditBonusRuleResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditBonusRuleResp.ProtoReflect.Descriptor instead.
func (*EditBonusRuleResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{69}
}

type PublishBonusRuleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rule *common1.BonusRule `protobuf:"bytes,1,opt,name=rule,proto3" json:"rule,omitempty"`
}

func (x *PublishBonusRuleReq) Reset() {
	*x = PublishBonusRuleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishBonusRuleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishBonusRuleReq) ProtoMessage() {}

func (x *PublishBonusRuleReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishBonusRuleReq.ProtoReflect.Descriptor instead.
func (*PublishBonusRuleReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{70}
}

func (x *PublishBonusRuleReq) GetRule() *common1.BonusRule {
	if x != nil {
		return x.Rule
	}
	return nil
}

type PublishBonusRuleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PublishBonusRuleResp) Reset() {
	*x = PublishBonusRuleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishBonusRuleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishBonusRuleResp) ProtoMessage() {}

func (x *PublishBonusRuleResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishBonusRuleResp.ProtoReflect.Descriptor instead.
func (*PublishBonusRuleResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{71}
}

type InvalidBonusRuleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BonusId uint32 `protobuf:"varint,1,opt,name=bonus_id,json=bonusId,proto3" json:"bonus_id,omitempty"`
}

func (x *InvalidBonusRuleReq) Reset() {
	*x = InvalidBonusRuleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvalidBonusRuleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidBonusRuleReq) ProtoMessage() {}

func (x *InvalidBonusRuleReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvalidBonusRuleReq.ProtoReflect.Descriptor instead.
func (*InvalidBonusRuleReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{72}
}

func (x *InvalidBonusRuleReq) GetBonusId() uint32 {
	if x != nil {
		return x.BonusId
	}
	return 0
}

type InvalidBonusRuleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InvalidBonusRuleResp) Reset() {
	*x = InvalidBonusRuleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvalidBonusRuleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidBonusRuleResp) ProtoMessage() {}

func (x *InvalidBonusRuleResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvalidBonusRuleResp.ProtoReflect.Descriptor instead.
func (*InvalidBonusRuleResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{73}
}

type BatchOrderBonusRuleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BonusIds []uint32 `protobuf:"varint,1,rep,packed,name=bonus_ids,json=bonusIds,proto3" json:"bonus_ids,omitempty"`
}

func (x *BatchOrderBonusRuleReq) Reset() {
	*x = BatchOrderBonusRuleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchOrderBonusRuleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchOrderBonusRuleReq) ProtoMessage() {}

func (x *BatchOrderBonusRuleReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchOrderBonusRuleReq.ProtoReflect.Descriptor instead.
func (*BatchOrderBonusRuleReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{74}
}

func (x *BatchOrderBonusRuleReq) GetBonusIds() []uint32 {
	if x != nil {
		return x.BonusIds
	}
	return nil
}

type BatchOrderBonusRuleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BatchOrderBonusRuleResp) Reset() {
	*x = BatchOrderBonusRuleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchOrderBonusRuleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchOrderBonusRuleResp) ProtoMessage() {}

func (x *BatchOrderBonusRuleResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchOrderBonusRuleResp.ProtoReflect.Descriptor instead.
func (*BatchOrderBonusRuleResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{75}
}

type GetBonusRulesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId  uint32 `protobuf:"varint,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	BonusId    uint32 `protobuf:"varint,2,opt,name=bonus_id,json=bonusId,proto3" json:"bonus_id,omitempty"`
	GroupId    uint32 `protobuf:"varint,3,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	GroupName  string `protobuf:"bytes,4,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"` //模糊搜索
	RuleStatus int32  `protobuf:"varint,5,opt,name=rule_status,json=ruleStatus,proto3" json:"rule_status,omitempty"`
	Mode       int32  `protobuf:"varint,6,opt,name=mode,proto3" json:"mode,omitempty"`                            //see common/BonusRule_Mode
	UserRange  int32  `protobuf:"varint,7,opt,name=user_range,json=userRange,proto3" json:"user_range,omitempty"` //see common/UserRange
	PageSize   uint32 `protobuf:"varint,8,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageNo     uint32 `protobuf:"varint,9,opt,name=page_no,json=pageNo,proto3" json:"page_no,omitempty"`
}

func (x *GetBonusRulesReq) Reset() {
	*x = GetBonusRulesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBonusRulesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBonusRulesReq) ProtoMessage() {}

func (x *GetBonusRulesReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBonusRulesReq.ProtoReflect.Descriptor instead.
func (*GetBonusRulesReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{76}
}

func (x *GetBonusRulesReq) GetProductId() uint32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *GetBonusRulesReq) GetBonusId() uint32 {
	if x != nil {
		return x.BonusId
	}
	return 0
}

func (x *GetBonusRulesReq) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *GetBonusRulesReq) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *GetBonusRulesReq) GetRuleStatus() int32 {
	if x != nil {
		return x.RuleStatus
	}
	return 0
}

func (x *GetBonusRulesReq) GetMode() int32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *GetBonusRulesReq) GetUserRange() int32 {
	if x != nil {
		return x.UserRange
	}
	return 0
}

func (x *GetBonusRulesReq) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetBonusRulesReq) GetPageNo() uint32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

type GetBonusRulesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items      []*common1.BonusRuleRichInfo `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalCount uint32                       `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *GetBonusRulesResp) Reset() {
	*x = GetBonusRulesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBonusRulesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBonusRulesResp) ProtoMessage() {}

func (x *GetBonusRulesResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBonusRulesResp.ProtoReflect.Descriptor instead.
func (*GetBonusRulesResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{77}
}

func (x *GetBonusRulesResp) GetItems() []*common1.BonusRuleRichInfo {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GetBonusRulesResp) GetTotalCount() uint32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

//bonus_id == 0 means add; else means edit
type EditDefaultBonusRuleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rule *common1.BonusRule `protobuf:"bytes,1,opt,name=rule,proto3" json:"rule,omitempty"`
}

func (x *EditDefaultBonusRuleReq) Reset() {
	*x = EditDefaultBonusRuleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditDefaultBonusRuleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditDefaultBonusRuleReq) ProtoMessage() {}

func (x *EditDefaultBonusRuleReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditDefaultBonusRuleReq.ProtoReflect.Descriptor instead.
func (*EditDefaultBonusRuleReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{78}
}

func (x *EditDefaultBonusRuleReq) GetRule() *common1.BonusRule {
	if x != nil {
		return x.Rule
	}
	return nil
}

type EditDefaultBonusRuleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EditDefaultBonusRuleResp) Reset() {
	*x = EditDefaultBonusRuleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditDefaultBonusRuleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditDefaultBonusRuleResp) ProtoMessage() {}

func (x *EditDefaultBonusRuleResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditDefaultBonusRuleResp.ProtoReflect.Descriptor instead.
func (*EditDefaultBonusRuleResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{79}
}

type ClearDefaultBonusRuleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BonusId   uint32 `protobuf:"varint,1,opt,name=bonus_id,json=bonusId,proto3" json:"bonus_id,omitempty"`
	ProductId uint64 `protobuf:"varint,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *ClearDefaultBonusRuleReq) Reset() {
	*x = ClearDefaultBonusRuleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearDefaultBonusRuleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearDefaultBonusRuleReq) ProtoMessage() {}

func (x *ClearDefaultBonusRuleReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearDefaultBonusRuleReq.ProtoReflect.Descriptor instead.
func (*ClearDefaultBonusRuleReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{80}
}

func (x *ClearDefaultBonusRuleReq) GetBonusId() uint32 {
	if x != nil {
		return x.BonusId
	}
	return 0
}

func (x *ClearDefaultBonusRuleReq) GetProductId() uint64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

type ClearDefaultBonusRuleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClearDefaultBonusRuleResp) Reset() {
	*x = ClearDefaultBonusRuleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearDefaultBonusRuleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearDefaultBonusRuleResp) ProtoMessage() {}

func (x *ClearDefaultBonusRuleResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearDefaultBonusRuleResp.ProtoReflect.Descriptor instead.
func (*ClearDefaultBonusRuleResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{81}
}

type GetProductAndBonusRuleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Condition *admin.SearchProductReq `protobuf:"bytes,1,opt,name=condition,proto3" json:"condition,omitempty"`
	Mode      int32                   `protobuf:"varint,2,opt,name=mode,proto3" json:"mode,omitempty"`
}

func (x *GetProductAndBonusRuleReq) Reset() {
	*x = GetProductAndBonusRuleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductAndBonusRuleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductAndBonusRuleReq) ProtoMessage() {}

func (x *GetProductAndBonusRuleReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductAndBonusRuleReq.ProtoReflect.Descriptor instead.
func (*GetProductAndBonusRuleReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{82}
}

func (x *GetProductAndBonusRuleReq) GetCondition() *admin.SearchProductReq {
	if x != nil {
		return x.Condition
	}
	return nil
}

func (x *GetProductAndBonusRuleReq) GetMode() int32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

type GetProductAndBonusRuleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GetProductAndBonusRuleResp_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Count uint32                             `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetProductAndBonusRuleResp) Reset() {
	*x = GetProductAndBonusRuleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductAndBonusRuleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductAndBonusRuleResp) ProtoMessage() {}

func (x *GetProductAndBonusRuleResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductAndBonusRuleResp.ProtoReflect.Descriptor instead.
func (*GetProductAndBonusRuleResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{83}
}

func (x *GetProductAndBonusRuleResp) GetItems() []*GetProductAndBonusRuleResp_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GetProductAndBonusRuleResp) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetBonusProductsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarrierId      uint64 `protobuf:"varint,1,opt,name=carrier_id,json=carrierId,proto3" json:"carrier_id,omitempty"`
	SubCategory1Id uint64 `protobuf:"varint,2,opt,name=sub_category1_id,json=subCategory1Id,proto3" json:"sub_category1_id,omitempty"`
	SubCategory2Id uint64 `protobuf:"varint,3,opt,name=sub_category2_id,json=subCategory2Id,proto3" json:"sub_category2_id,omitempty"`
}

func (x *GetBonusProductsReq) Reset() {
	*x = GetBonusProductsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBonusProductsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBonusProductsReq) ProtoMessage() {}

func (x *GetBonusProductsReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBonusProductsReq.ProtoReflect.Descriptor instead.
func (*GetBonusProductsReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{84}
}

func (x *GetBonusProductsReq) GetCarrierId() uint64 {
	if x != nil {
		return x.CarrierId
	}
	return 0
}

func (x *GetBonusProductsReq) GetSubCategory1Id() uint64 {
	if x != nil {
		return x.SubCategory1Id
	}
	return 0
}

func (x *GetBonusProductsReq) GetSubCategory2Id() uint64 {
	if x != nil {
		return x.SubCategory2Id
	}
	return 0
}

type GetBonusProductsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Product []*common2.Product `protobuf:"bytes,1,rep,name=product,proto3" json:"product,omitempty"`
}

func (x *GetBonusProductsResp) Reset() {
	*x = GetBonusProductsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBonusProductsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBonusProductsResp) ProtoMessage() {}

func (x *GetBonusProductsResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBonusProductsResp.ProtoReflect.Descriptor instead.
func (*GetBonusProductsResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{85}
}

func (x *GetBonusProductsResp) GetProduct() []*common2.Product {
	if x != nil {
		return x.Product
	}
	return nil
}

type GetAffectedStoresReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupIdList []uint32 `protobuf:"varint,1,rep,packed,name=group_id_list,json=groupIdList,proto3" json:"group_id_list,omitempty"`
}

func (x *GetAffectedStoresReq) Reset() {
	*x = GetAffectedStoresReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAffectedStoresReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAffectedStoresReq) ProtoMessage() {}

func (x *GetAffectedStoresReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAffectedStoresReq.ProtoReflect.Descriptor instead.
func (*GetAffectedStoresReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{86}
}

func (x *GetAffectedStoresReq) GetGroupIdList() []uint32 {
	if x != nil {
		return x.GroupIdList
	}
	return nil
}

type GetAffectedStoresResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreCount int32 `protobuf:"varint,1,opt,name=store_count,json=storeCount,proto3" json:"store_count,omitempty"`
}

func (x *GetAffectedStoresResp) Reset() {
	*x = GetAffectedStoresResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAffectedStoresResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAffectedStoresResp) ProtoMessage() {}

func (x *GetAffectedStoresResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAffectedStoresResp.ProtoReflect.Descriptor instead.
func (*GetAffectedStoresResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{87}
}

func (x *GetAffectedStoresResp) GetStoreCount() int32 {
	if x != nil {
		return x.StoreCount
	}
	return 0
}

type GetAffectedStoresAheadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dimensions []*common.Dimension `protobuf:"bytes,1,rep,name=dimensions,proto3" json:"dimensions,omitempty"`
}

func (x *GetAffectedStoresAheadReq) Reset() {
	*x = GetAffectedStoresAheadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAffectedStoresAheadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAffectedStoresAheadReq) ProtoMessage() {}

func (x *GetAffectedStoresAheadReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAffectedStoresAheadReq.ProtoReflect.Descriptor instead.
func (*GetAffectedStoresAheadReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{88}
}

func (x *GetAffectedStoresAheadReq) GetDimensions() []*common.Dimension {
	if x != nil {
		return x.Dimensions
	}
	return nil
}

type GetAffectedStoresAheadResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreCount int32 `protobuf:"varint,1,opt,name=store_count,json=storeCount,proto3" json:"store_count,omitempty"`
}

func (x *GetAffectedStoresAheadResp) Reset() {
	*x = GetAffectedStoresAheadResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAffectedStoresAheadResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAffectedStoresAheadResp) ProtoMessage() {}

func (x *GetAffectedStoresAheadResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAffectedStoresAheadResp.ProtoReflect.Descriptor instead.
func (*GetAffectedStoresAheadResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{89}
}

func (x *GetAffectedStoresAheadResp) GetStoreCount() int32 {
	if x != nil {
		return x.StoreCount
	}
	return 0
}

type ExportDiscountUploadFileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HistoryId uint64 `protobuf:"varint,1,opt,name=history_id,json=historyId,proto3" json:"history_id,omitempty"`
}

func (x *ExportDiscountUploadFileReq) Reset() {
	*x = ExportDiscountUploadFileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportDiscountUploadFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportDiscountUploadFileReq) ProtoMessage() {}

func (x *ExportDiscountUploadFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportDiscountUploadFileReq.ProtoReflect.Descriptor instead.
func (*ExportDiscountUploadFileReq) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{90}
}

func (x *ExportDiscountUploadFileReq) GetHistoryId() uint64 {
	if x != nil {
		return x.HistoryId
	}
	return 0
}

type ExportDiscountUploadFileResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExportDiscountUploadFileResp) Reset() {
	*x = ExportDiscountUploadFileResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportDiscountUploadFileResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportDiscountUploadFileResp) ProtoMessage() {}

func (x *ExportDiscountUploadFileResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportDiscountUploadFileResp.ProtoReflect.Descriptor instead.
func (*ExportDiscountUploadFileResp) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{91}
}

type GetGroupsResp_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupInfo      *common.Group `protobuf:"bytes,1,opt,name=group_info,json=groupInfo,proto3" json:"group_info,omitempty"`
	DiscountAmount uint32        `protobuf:"varint,2,opt,name=discount_amount,json=discountAmount,proto3" json:"discount_amount,omitempty"`
	CashbackAmount uint32        `protobuf:"varint,3,opt,name=cashback_amount,json=cashbackAmount,proto3" json:"cashback_amount,omitempty"`
}

func (x *GetGroupsResp_Item) Reset() {
	*x = GetGroupsResp_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupsResp_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupsResp_Item) ProtoMessage() {}

func (x *GetGroupsResp_Item) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupsResp_Item.ProtoReflect.Descriptor instead.
func (*GetGroupsResp_Item) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{1, 0}
}

func (x *GetGroupsResp_Item) GetGroupInfo() *common.Group {
	if x != nil {
		return x.GroupInfo
	}
	return nil
}

func (x *GetGroupsResp_Item) GetDiscountAmount() uint32 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *GetGroupsResp_Item) GetCashbackAmount() uint32 {
	if x != nil {
		return x.CashbackAmount
	}
	return 0
}

type BatchEditDefaultDiscountReq_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId            string `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	DefaultDiscountPrice string `protobuf:"bytes,2,opt,name=default_discount_price,json=defaultDiscountPrice,proto3" json:"default_discount_price,omitempty"`
}

func (x *BatchEditDefaultDiscountReq_Item) Reset() {
	*x = BatchEditDefaultDiscountReq_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchEditDefaultDiscountReq_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchEditDefaultDiscountReq_Item) ProtoMessage() {}

func (x *BatchEditDefaultDiscountReq_Item) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchEditDefaultDiscountReq_Item.ProtoReflect.Descriptor instead.
func (*BatchEditDefaultDiscountReq_Item) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{6, 0}
}

func (x *BatchEditDefaultDiscountReq_Item) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *BatchEditDefaultDiscountReq_Item) GetDefaultDiscountPrice() string {
	if x != nil {
		return x.DefaultDiscountPrice
	}
	return ""
}

type BatchAddDiscountRuleReq_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId     string `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	DiscountPrice string `protobuf:"bytes,2,opt,name=discount_price,json=discountPrice,proto3" json:"discount_price,omitempty"`
	ValidFrom     string `protobuf:"bytes,3,opt,name=valid_from,json=validFrom,proto3" json:"valid_from,omitempty"`
	ValidTo       string `protobuf:"bytes,4,opt,name=valid_to,json=validTo,proto3" json:"valid_to,omitempty"`
	GroupIds      string `protobuf:"bytes,5,opt,name=group_ids,json=groupIds,proto3" json:"group_ids,omitempty"`
}

func (x *BatchAddDiscountRuleReq_Item) Reset() {
	*x = BatchAddDiscountRuleReq_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchAddDiscountRuleReq_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAddDiscountRuleReq_Item) ProtoMessage() {}

func (x *BatchAddDiscountRuleReq_Item) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAddDiscountRuleReq_Item.ProtoReflect.Descriptor instead.
func (*BatchAddDiscountRuleReq_Item) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{12, 0}
}

func (x *BatchAddDiscountRuleReq_Item) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *BatchAddDiscountRuleReq_Item) GetDiscountPrice() string {
	if x != nil {
		return x.DiscountPrice
	}
	return ""
}

func (x *BatchAddDiscountRuleReq_Item) GetValidFrom() string {
	if x != nil {
		return x.ValidFrom
	}
	return ""
}

func (x *BatchAddDiscountRuleReq_Item) GetValidTo() string {
	if x != nil {
		return x.ValidTo
	}
	return ""
}

func (x *BatchAddDiscountRuleReq_Item) GetGroupIds() string {
	if x != nil {
		return x.GroupIds
	}
	return ""
}

type BatchEditDiscountRulePriorityReq_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiscountId uint32 `protobuf:"varint,1,opt,name=discount_id,json=discountId,proto3" json:"discount_id,omitempty"`
}

func (x *BatchEditDiscountRulePriorityReq_Item) Reset() {
	*x = BatchEditDiscountRulePriorityReq_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchEditDiscountRulePriorityReq_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchEditDiscountRulePriorityReq_Item) ProtoMessage() {}

func (x *BatchEditDiscountRulePriorityReq_Item) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchEditDiscountRulePriorityReq_Item.ProtoReflect.Descriptor instead.
func (*BatchEditDiscountRulePriorityReq_Item) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{24, 0}
}

func (x *BatchEditDiscountRulePriorityReq_Item) GetDiscountId() uint32 {
	if x != nil {
		return x.DiscountId
	}
	return 0
}

type SearchProductDiscountResp_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Product              *admin.ProductInfo `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
	DiscountId           uint32             `protobuf:"varint,2,opt,name=discount_id,json=discountId,proto3" json:"discount_id,omitempty"`
	DefaultDiscountPrice uint64             `protobuf:"varint,3,opt,name=default_discount_price,json=defaultDiscountPrice,proto3" json:"default_discount_price,omitempty"`
}

func (x *SearchProductDiscountResp_Item) Reset() {
	*x = SearchProductDiscountResp_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchProductDiscountResp_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchProductDiscountResp_Item) ProtoMessage() {}

func (x *SearchProductDiscountResp_Item) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchProductDiscountResp_Item.ProtoReflect.Descriptor instead.
func (*SearchProductDiscountResp_Item) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{27, 0}
}

func (x *SearchProductDiscountResp_Item) GetProduct() *admin.ProductInfo {
	if x != nil {
		return x.Product
	}
	return nil
}

func (x *SearchProductDiscountResp_Item) GetDiscountId() uint32 {
	if x != nil {
		return x.DiscountId
	}
	return 0
}

func (x *SearchProductDiscountResp_Item) GetDefaultDiscountPrice() uint64 {
	if x != nil {
		return x.DefaultDiscountPrice
	}
	return 0
}

type GetDiscountRulesByGroupResp_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rule                 *common1.DiscountRule `protobuf:"bytes,1,opt,name=rule,proto3" json:"rule,omitempty"`
	ProductName          string                `protobuf:"bytes,2,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`
	MarcketPrice         uint64                `protobuf:"varint,3,opt,name=marcket_price,json=marcketPrice,proto3" json:"marcket_price,omitempty"`
	DefaultDiscountPrice uint64                `protobuf:"varint,4,opt,name=default_discount_price,json=defaultDiscountPrice,proto3" json:"default_discount_price,omitempty"`
}

func (x *GetDiscountRulesByGroupResp_Item) Reset() {
	*x = GetDiscountRulesByGroupResp_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDiscountRulesByGroupResp_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiscountRulesByGroupResp_Item) ProtoMessage() {}

func (x *GetDiscountRulesByGroupResp_Item) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiscountRulesByGroupResp_Item.ProtoReflect.Descriptor instead.
func (*GetDiscountRulesByGroupResp_Item) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{29, 0}
}

func (x *GetDiscountRulesByGroupResp_Item) GetRule() *common1.DiscountRule {
	if x != nil {
		return x.Rule
	}
	return nil
}

func (x *GetDiscountRulesByGroupResp_Item) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *GetDiscountRulesByGroupResp_Item) GetMarcketPrice() uint64 {
	if x != nil {
		return x.MarcketPrice
	}
	return 0
}

func (x *GetDiscountRulesByGroupResp_Item) GetDefaultDiscountPrice() uint64 {
	if x != nil {
		return x.DefaultDiscountPrice
	}
	return 0
}

type GetDiscountUploadHistoryResp_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Operator     string `protobuf:"bytes,2,opt,name=operator,proto3" json:"operator,omitempty"`
	UploadTime   int64  `protobuf:"varint,3,opt,name=upload_time,json=uploadTime,proto3" json:"upload_time,omitempty"`
	SuccessCount uint32 `protobuf:"varint,4,opt,name=success_count,json=successCount,proto3" json:"success_count,omitempty"`
}

func (x *GetDiscountUploadHistoryResp_Item) Reset() {
	*x = GetDiscountUploadHistoryResp_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDiscountUploadHistoryResp_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiscountUploadHistoryResp_Item) ProtoMessage() {}

func (x *GetDiscountUploadHistoryResp_Item) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiscountUploadHistoryResp_Item.ProtoReflect.Descriptor instead.
func (*GetDiscountUploadHistoryResp_Item) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{33, 0}
}

func (x *GetDiscountUploadHistoryResp_Item) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetDiscountUploadHistoryResp_Item) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *GetDiscountUploadHistoryResp_Item) GetUploadTime() int64 {
	if x != nil {
		return x.UploadTime
	}
	return 0
}

func (x *GetDiscountUploadHistoryResp_Item) GetSuccessCount() uint32 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

type GetDiscountRulesByProductResp_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId      uint32 `protobuf:"varint,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	DiscountAmount uint32 `protobuf:"varint,2,opt,name=discount_amount,json=discountAmount,proto3" json:"discount_amount,omitempty"`
}

func (x *GetDiscountRulesByProductResp_Item) Reset() {
	*x = GetDiscountRulesByProductResp_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDiscountRulesByProductResp_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiscountRulesByProductResp_Item) ProtoMessage() {}

func (x *GetDiscountRulesByProductResp_Item) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiscountRulesByProductResp_Item.ProtoReflect.Descriptor instead.
func (*GetDiscountRulesByProductResp_Item) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{35, 0}
}

func (x *GetDiscountRulesByProductResp_Item) GetProductId() uint32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *GetDiscountRulesByProductResp_Item) GetDiscountAmount() uint32 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

type BatchEditCashbackRulePriorityReq_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CashbackId uint32 `protobuf:"varint,1,opt,name=cashback_id,json=cashbackId,proto3" json:"cashback_id,omitempty"`
}

func (x *BatchEditCashbackRulePriorityReq_Item) Reset() {
	*x = BatchEditCashbackRulePriorityReq_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchEditCashbackRulePriorityReq_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchEditCashbackRulePriorityReq_Item) ProtoMessage() {}

func (x *BatchEditCashbackRulePriorityReq_Item) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchEditCashbackRulePriorityReq_Item.ProtoReflect.Descriptor instead.
func (*BatchEditCashbackRulePriorityReq_Item) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{54, 0}
}

func (x *BatchEditCashbackRulePriorityReq_Item) GetCashbackId() uint32 {
	if x != nil {
		return x.CashbackId
	}
	return 0
}

type SearchProductCashbacksResp_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Product              *admin.ProductInfo `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
	CashbackId           uint32             `protobuf:"varint,2,opt,name=cashback_id,json=cashbackId,proto3" json:"cashback_id,omitempty"`
	DefaultMod           int32              `protobuf:"varint,3,opt,name=default_mod,json=defaultMod,proto3" json:"default_mod,omitempty"`
	DefaultPercentage    int32              `protobuf:"varint,4,opt,name=default_percentage,json=defaultPercentage,proto3" json:"default_percentage,omitempty"`
	DefaultMaxCashback   int64              `protobuf:"varint,5,opt,name=default_max_cashback,json=defaultMaxCashback,proto3" json:"default_max_cashback,omitempty"`
	DefaultMinCashback   int64              `protobuf:"varint,6,opt,name=default_min_cashback,json=defaultMinCashback,proto3" json:"default_min_cashback,omitempty"`
	DefaultFixedAmount   int64              `protobuf:"varint,7,opt,name=default_fixed_amount,json=defaultFixedAmount,proto3" json:"default_fixed_amount,omitempty"`
	DefaultPercentageStr string             `protobuf:"bytes,8,opt,name=default_percentage_str,json=defaultPercentageStr,proto3" json:"default_percentage_str,omitempty"`
	DefaultRange         []*common1.Range   `protobuf:"bytes,9,rep,name=default_range,json=defaultRange,proto3" json:"default_range,omitempty"`
}

func (x *SearchProductCashbacksResp_Item) Reset() {
	*x = SearchProductCashbacksResp_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchProductCashbacksResp_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchProductCashbacksResp_Item) ProtoMessage() {}

func (x *SearchProductCashbacksResp_Item) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchProductCashbacksResp_Item.ProtoReflect.Descriptor instead.
func (*SearchProductCashbacksResp_Item) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{57, 0}
}

func (x *SearchProductCashbacksResp_Item) GetProduct() *admin.ProductInfo {
	if x != nil {
		return x.Product
	}
	return nil
}

func (x *SearchProductCashbacksResp_Item) GetCashbackId() uint32 {
	if x != nil {
		return x.CashbackId
	}
	return 0
}

func (x *SearchProductCashbacksResp_Item) GetDefaultMod() int32 {
	if x != nil {
		return x.DefaultMod
	}
	return 0
}

func (x *SearchProductCashbacksResp_Item) GetDefaultPercentage() int32 {
	if x != nil {
		return x.DefaultPercentage
	}
	return 0
}

func (x *SearchProductCashbacksResp_Item) GetDefaultMaxCashback() int64 {
	if x != nil {
		return x.DefaultMaxCashback
	}
	return 0
}

func (x *SearchProductCashbacksResp_Item) GetDefaultMinCashback() int64 {
	if x != nil {
		return x.DefaultMinCashback
	}
	return 0
}

func (x *SearchProductCashbacksResp_Item) GetDefaultFixedAmount() int64 {
	if x != nil {
		return x.DefaultFixedAmount
	}
	return 0
}

func (x *SearchProductCashbacksResp_Item) GetDefaultPercentageStr() string {
	if x != nil {
		return x.DefaultPercentageStr
	}
	return ""
}

func (x *SearchProductCashbacksResp_Item) GetDefaultRange() []*common1.Range {
	if x != nil {
		return x.DefaultRange
	}
	return nil
}

type GetCashbackRulesByGroupResp_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rule        *common1.CashbackRule `protobuf:"bytes,1,opt,name=rule,proto3" json:"rule,omitempty"`
	ProductName string                `protobuf:"bytes,2,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`
}

func (x *GetCashbackRulesByGroupResp_Item) Reset() {
	*x = GetCashbackRulesByGroupResp_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCashbackRulesByGroupResp_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCashbackRulesByGroupResp_Item) ProtoMessage() {}

func (x *GetCashbackRulesByGroupResp_Item) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCashbackRulesByGroupResp_Item.ProtoReflect.Descriptor instead.
func (*GetCashbackRulesByGroupResp_Item) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{59, 0}
}

func (x *GetCashbackRulesByGroupResp_Item) GetRule() *common1.CashbackRule {
	if x != nil {
		return x.Rule
	}
	return nil
}

func (x *GetCashbackRulesByGroupResp_Item) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

type GetCashbackRulesByProductResp_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId      uint32 `protobuf:"varint,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	CashbackAmount uint32 `protobuf:"varint,2,opt,name=cashback_amount,json=cashbackAmount,proto3" json:"cashback_amount,omitempty"`
}

func (x *GetCashbackRulesByProductResp_Item) Reset() {
	*x = GetCashbackRulesByProductResp_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCashbackRulesByProductResp_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCashbackRulesByProductResp_Item) ProtoMessage() {}

func (x *GetCashbackRulesByProductResp_Item) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCashbackRulesByProductResp_Item.ProtoReflect.Descriptor instead.
func (*GetCashbackRulesByProductResp_Item) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{63, 0}
}

func (x *GetCashbackRulesByProductResp_Item) GetProductId() uint32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *GetCashbackRulesByProductResp_Item) GetCashbackAmount() uint32 {
	if x != nil {
		return x.CashbackAmount
	}
	return 0
}

type GetProductAndBonusRuleResp_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Product     *admin.ProductInfo `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
	DefaultRule *common1.BonusRule `protobuf:"bytes,2,opt,name=default_rule,json=defaultRule,proto3" json:"default_rule,omitempty"`
}

func (x *GetProductAndBonusRuleResp_Item) Reset() {
	*x = GetProductAndBonusRuleResp_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_promotion_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductAndBonusRuleResp_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductAndBonusRuleResp_Item) ProtoMessage() {}

func (x *GetProductAndBonusRuleResp_Item) ProtoReflect() protoreflect.Message {
	mi := &file_admin_promotion_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductAndBonusRuleResp_Item.ProtoReflect.Descriptor instead.
func (*GetProductAndBonusRuleResp_Item) Descriptor() ([]byte, []int) {
	return file_admin_promotion_proto_rawDescGZIP(), []int{83, 0}
}

func (x *GetProductAndBonusRuleResp_Item) GetProduct() *admin.ProductInfo {
	if x != nil {
		return x.Product
	}
	return nil
}

func (x *GetProductAndBonusRuleResp_Item) GetDefaultRule() *common1.BonusRule {
	if x != nil {
		return x.DefaultRule
	}
	return nil
}

var File_admin_promotion_proto protoreflect.FileDescriptor

var file_admin_promotion_proto_rawDesc = []byte{
	0x0a, 0x15, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x13, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xc5, 0x02, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x73, 0x63, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x73, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x6f, 0x72, 0x74,
	0x5f, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x73, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x73, 0x68,
	0x62, 0x61, 0x63, 0x6b, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x6f,
	0x72, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x73, 0x6f, 0x72, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x22, 0xf5, 0x01, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70,
	0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x89, 0x01, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x2f, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x27, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x61, 0x73,
	0x68, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x2e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x22, 0x97, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x0a, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x61, 0x70, 0x63, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x61,
	0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x58, 0x0a, 0x16,
	0x45, 0x64, 0x69, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x3e, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61,
	0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x0b, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x22, 0x19, 0x0a, 0x17, 0x45, 0x64, 0x69, 0x74, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x22, 0xd0, 0x01, 0x0a, 0x1b, 0x42, 0x61, 0x74, 0x63, 0x68, 0x45, 0x64, 0x69, 0x74, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x54, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x72, 0x75, 0x6c,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x45, 0x64,
	0x69, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x1a, 0x5b, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x34,
	0x0a, 0x16, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x22, 0x1e, 0x0a, 0x1c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x45, 0x64, 0x69,
	0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x59, 0x0a, 0x17, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0x1a, 0x0a, 0x18, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x45, 0x0a, 0x12, 0x41,
	0x64, 0x64, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x2f, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x75,
	0x6c, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x8a, 0x02, 0x0a, 0x17, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x41, 0x64, 0x64, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x49, 0x0a, 0x09, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64,
	0x64, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x1a, 0xa3, 0x01, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x19,
	0x0a, 0x08, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41,
	0x64, 0x64, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x46, 0x0a, 0x13, 0x45, 0x64, 0x69, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2f, 0x0a, 0x04, 0x72, 0x75, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x45, 0x64,
	0x69, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x8b, 0x02, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x75, 0x6c, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x6f,
	0x72, 0x74, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x6e, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f,
	0x22, 0x83, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x0e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x69,
	0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3c, 0x0a, 0x19, 0x49, 0x6e, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0x1c, 0x0a, 0x1a, 0x49, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x58, 0x0a, 0x16, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x19, 0x0a, 0x17,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x3b, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x37, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x69, 0x63, 0x68,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x22, 0xb6, 0x01, 0x0a, 0x20, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x45, 0x64, 0x69, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x4a,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e,
	0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x45, 0x64, 0x69, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x75, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x27, 0x0a, 0x04, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0x23, 0x0a, 0x21, 0x42, 0x61, 0x74, 0x63, 0x68, 0x45, 0x64, 0x69, 0x74,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x57, 0x0a, 0x18, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x3b, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x9b, 0x02, 0x0a, 0x19, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x49, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x75, 0x6d, 0x1a, 0x91, 0x01, 0x0a, 0x04,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x32, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22,
	0x37, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75,
	0x6c, 0x65, 0x73, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0xbb, 0x02, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0xb5,
	0x01, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2f, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75,
	0x6c, 0x65, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6d,
	0x61, 0x72, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x6d, 0x61, 0x72, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x34, 0x0a, 0x16, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x14, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x3a, 0x0a, 0x1d, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x22, 0x20, 0x0a, 0x1e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x7f, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x2a, 0x0a, 0x11, 0x75, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0xf6, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x1a, 0x78, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3d,
	0x0a, 0x1c, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c,
	0x65, 0x73, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0xc0, 0x02,
	0x0a, 0x1d, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c,
	0x65, 0x73, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x5d, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x61, 0x70, 0x1a, 0x4e,
	0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x70,
	0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x47, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75,
	0x6c, 0x65, 0x73, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x7b, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x22, 0xcb, 0x01,
	0x0a, 0x25, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x75, 0x6c, 0x65, 0x52, 0x69, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x72, 0x75, 0x6c,
	0x65, 0x73, 0x12, 0x46, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x72, 0x75,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x69, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x58, 0x0a, 0x16, 0x45,
	0x64, 0x69, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x3e, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70,
	0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x73, 0x68,
	0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x0b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x52, 0x75, 0x6c, 0x65, 0x22, 0x19, 0x0a, 0x17, 0x45, 0x64, 0x69, 0x74, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x59, 0x0a, 0x17, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61,
	0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x22, 0x1a, 0x0a, 0x18, 0x43,
	0x6c, 0x65, 0x61, 0x72, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x61, 0x73, 0x68, 0x62,
	0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x22, 0x45, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x43, 0x61,
	0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2f, 0x0a,
	0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70,
	0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x73, 0x68,
	0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x22, 0x15,
	0x0a, 0x13, 0x41, 0x64, 0x64, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x46, 0x0a, 0x13, 0x45, 0x64, 0x69, 0x74, 0x43, 0x61, 0x73,
	0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2f, 0x0a, 0x04,
	0x72, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x63,
	0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x62,
	0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x22, 0x16, 0x0a,
	0x14, 0x45, 0x64, 0x69, 0x74, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x9f, 0x02, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73,
	0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x75, 0x6c, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x75,
	0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x73, 0x6f, 0x72, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x22, 0x83, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43,
	0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x4a, 0x0a, 0x0e, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x72, 0x75, 0x6c,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63,
	0x6b, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x69, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x63,
	0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3c, 0x0a,
	0x19, 0x49, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x61, 0x73, 0x68, 0x62,
	0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61,
	0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x22, 0x1c, 0x0a, 0x1a, 0x49,
	0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63,
	0x6b, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x49, 0x0a, 0x16, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x2f, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x04,
	0x72, 0x75, 0x6c, 0x65, 0x22, 0x19, 0x0a, 0x17, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x43,
	0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x3b, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75,
	0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x04, 0x72, 0x75, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x69, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x72, 0x75,
	0x6c, 0x65, 0x22, 0xb6, 0x01, 0x0a, 0x20, 0x42, 0x61, 0x74, 0x63, 0x68, 0x45, 0x64, 0x69, 0x74,
	0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x4a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x45, 0x64, 0x69, 0x74, 0x43,
	0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x1a, 0x27, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61,
	0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x22, 0x23, 0x0a, 0x21, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x45, 0x64, 0x69, 0x74, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b,
	0x52, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x99, 0x01, 0x0a, 0x19, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x12, 0x3b,
	0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x1c, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x61,
	0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x19, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0xbe, 0x04, 0x0a,
	0x1a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61,
	0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x73, 0x68, 0x62,
	0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x75, 0x6d, 0x1a, 0xb2, 0x03, 0x0a, 0x04, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x32, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x61, 0x73, 0x68,
	0x62, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x4d, 0x6f, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x11, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4d, 0x61, 0x78,
	0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4d,
	0x69, 0x6e, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x66, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x46, 0x69, 0x78, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x16,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x53,
	0x74, 0x72, 0x12, 0x39, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x63, 0x2e,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x37, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65,
	0x73, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0xdf, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x61,
	0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63,
	0x6b, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x5a, 0x0a, 0x04,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x2f, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x52,
	0x04, 0x72, 0x75, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x0a, 0x1d, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x42,
	0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x22, 0x20, 0x0a, 0x1e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61,
	0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x22, 0x3d, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73,
	0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0xc0, 0x02, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73,
	0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x61,
	0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4d, 0x61, 0x70, 0x1a, 0x4e, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a,
	0x0f, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x70, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x47, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61, 0x70, 0x63,
	0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61,
	0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x7b, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70,
	0x61, 0x67, 0x65, 0x4e, 0x6f, 0x22, 0xcb, 0x01, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x39, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43,
	0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x69, 0x63, 0x68, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x0c, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x69, 0x63,
	0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x75,
	0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x3f, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x04,
	0x72, 0x75, 0x6c, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x42, 0x6f, 0x6e, 0x75, 0x73,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x40, 0x0a, 0x10, 0x45, 0x64, 0x69, 0x74,
	0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x04,
	0x72, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x63,
	0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x6f, 0x6e, 0x75, 0x73,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x45, 0x64,
	0x69, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x43, 0x0a, 0x13, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x04,
	0x72, 0x75, 0x6c, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x42,
	0x6f, 0x6e, 0x75, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x30, 0x0a, 0x13,
	0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x49, 0x64, 0x22, 0x16,
	0x0a, 0x14, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x75,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x35, 0x0a, 0x16, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x08, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x49, 0x64, 0x73, 0x22, 0x19, 0x0a,
	0x17, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x6f, 0x6e, 0x75, 0x73,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x90, 0x02, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x62, 0x6f, 0x6e, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x62, 0x6f, 0x6e, 0x75, 0x73, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x22, 0x6c, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x36, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x69, 0x63, 0x68, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x47, 0x0a, 0x17, 0x45, 0x64, 0x69,
	0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x75,
	0x6c, 0x65, 0x22, 0x1a, 0x0a, 0x18, 0x45, 0x64, 0x69, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x54,
	0x0a, 0x18, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x6f,
	0x6e, 0x75, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f,
	0x6e, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x6f,
	0x6e, 0x75, 0x73, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x22, 0x1b, 0x0a, 0x19, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x6c, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41,
	0x6e, 0x64, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x3b,
	0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x22,
	0xf1, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x6e,
	0x64, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x6e, 0x64, 0x42, 0x6f, 0x6e, 0x75, 0x73,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x77, 0x0a, 0x04, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x32, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x3b, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61,
	0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x6f, 0x6e,
	0x75, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x0b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52,
	0x75, 0x6c, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x75,
	0x62, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x31, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x31, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x75, 0x62, 0x5f, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x32, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e,
	0x73, 0x75, 0x62, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x32, 0x49, 0x64, 0x22, 0x46,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x07, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x3a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x22,
	0x0a, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x38, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x51, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x73, 0x41, 0x68, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x12, 0x34, 0x0a, 0x0a, 0x64, 0x69, 0x6d,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x61, 0x70, 0x63, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x3d, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x73, 0x41, 0x68, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3c,
	0x0a, 0x1b, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a,
	0x0a, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x1e, 0x0a, 0x1c,
	0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x2a, 0x31, 0x0a, 0x09,
	0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x5f, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x5f, 0x44, 0x45,
	0x53, 0x43, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x5f, 0x41, 0x53, 0x43, 0x10, 0x02, 0x32,
	0xc0, 0x28, 0x0a, 0x0c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x48, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x1b, 0x2e,
	0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x63,
	0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x20, 0x2e, 0x61,
	0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x21,
	0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c,
	0x6f, 0x67, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1b,
	0x2e, 0x61, 0x70, 0x63, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3d, 0x0a,
	0x08, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x16, 0x2e, 0x61, 0x70, 0x63, 0x2e,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x41, 0x64,
	0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x09,
	0x45, 0x64, 0x69, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x63, 0x2e,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x45, 0x64, 0x69, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x60, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x63,
	0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x6f, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x41, 0x68, 0x65, 0x61, 0x64, 0x12, 0x28, 0x2e, 0x61,
	0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x41, 0x68,
	0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x41, 0x68, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x13, 0x45, 0x64, 0x69, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x63,
	0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x26, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x18, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x45, 0x64, 0x69, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x45, 0x64, 0x69,
	0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x45, 0x64, 0x69, 0x74, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x69, 0x0a, 0x14, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x63,
	0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x27, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5d, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65,
	0x73, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x16,
	0x49, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x29, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x49, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x66, 0x0a,
	0x13, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x75, 0x6c, 0x65, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x61, 0x70,
	0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x61, 0x70,
	0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x69, 0x0a, 0x14, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x63, 0x2e,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41,
	0x64, 0x64, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x27, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x10,
	0x45, 0x64, 0x69, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65,
	0x12, 0x22, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x45, 0x64, 0x69, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x84, 0x01, 0x0a, 0x1d,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x45, 0x64, 0x69, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x2f, 0x2e,
	0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x45, 0x64, 0x69, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x75, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x30,
	0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x45, 0x64, 0x69, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x6c, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x27, 0x2e, 0x61, 0x70,
	0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x6c, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x63, 0x2e,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x28, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x72,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c,
	0x65, 0x73, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x29, 0x2e, 0x61, 0x70, 0x63, 0x2e,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x7b, 0x0a, 0x1a, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x2c, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x75, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x2d,
	0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c,
	0x65, 0x73, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x75, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x2a, 0x2e, 0x61, 0x70,
	0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x18, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69,
	0x6c, 0x65, 0x12, 0x2a, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2b,
	0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x78, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65,
	0x73, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x2b, 0x2e, 0x61, 0x70, 0x63,
	0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x90, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x33, 0x2e,
	0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x34, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x13, 0x45, 0x64,
	0x69, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63,
	0x6b, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x61, 0x73,
	0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x69, 0x0a, 0x14, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x63,
	0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x1a, 0x27, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43,
	0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5d, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65,
	0x73, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63,
	0x6b, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x16,
	0x49, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61,
	0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x29, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x49, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x61, 0x73, 0x68, 0x62,
	0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5a, 0x0a,
	0x0f, 0x41, 0x64, 0x64, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65,
	0x12, 0x21, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x41, 0x64, 0x64, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x10, 0x45, 0x64, 0x69,
	0x74, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x22, 0x2e,
	0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x64,
	0x69, 0x74, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x13, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x12,
	0x25, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x43, 0x61,
	0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x84, 0x01, 0x0a, 0x1d, 0x42, 0x61, 0x74, 0x63, 0x68, 0x45, 0x64, 0x69, 0x74, 0x43, 0x61,
	0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x2f, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x45, 0x64, 0x69, 0x74, 0x43, 0x61, 0x73, 0x68,
	0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x1a, 0x30, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x45, 0x64, 0x69, 0x74, 0x43, 0x61, 0x73,
	0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x61,
	0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x27, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x61, 0x70, 0x63, 0x2e,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73,
	0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x16, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x12,
	0x28, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x73,
	0x68, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x63, 0x2e,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x72, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73,
	0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x29, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c,
	0x65, 0x73, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x61,
	0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x7b, 0x0a, 0x1a, 0x45, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65,
	0x73, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2c, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x43,
	0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x73,
	0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x78, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x61,
	0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x12, 0x2b, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b,
	0x52, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x2c, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c,
	0x65, 0x73, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x90, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x73, 0x68,
	0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x33, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x61,
	0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x34, 0x2e, 0x61,
	0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x41, 0x6e, 0x64, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x28,
	0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x6e, 0x64, 0x42, 0x6f, 0x6e, 0x75,
	0x73, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x41, 0x6e, 0x64, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x14, 0x45, 0x64, 0x69, 0x74, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x26, 0x2e,
	0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x64,
	0x69, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x75,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x6c, 0x0a, 0x15, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x63, 0x2e,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x28, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42,
	0x6f, 0x6e, 0x75, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x54,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12,
	0x1f, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x20, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x42, 0x6f, 0x6e, 0x75, 0x73,
	0x52, 0x75, 0x6c, 0x65, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0d, 0x45, 0x64, 0x69, 0x74, 0x42,
	0x6f, 0x6e, 0x75, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x42, 0x6f, 0x6e,
	0x75, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x63, 0x2e,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x42, 0x6f,
	0x6e, 0x75, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5d, 0x0a,
	0x10, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x75, 0x6c,
	0x65, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x75,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x42, 0x6f, 0x6e,
	0x75, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x10,
	0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x75, 0x6c, 0x65,
	0x12, 0x22, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x42, 0x6f, 0x6e, 0x75,
	0x73, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x13, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x75,
	0x6c, 0x65, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x6f, 0x6e,
	0x75, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x61, 0x70, 0x63, 0x2e,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x61, 0x70,
	0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x6f, 0x6e, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x42, 0x7a, 0x5a, 0x78, 0x67, 0x69, 0x74, 0x2e, 0x67, 0x61, 0x72, 0x65, 0x6e, 0x61,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x65, 0x65, 0x2f, 0x6c, 0x6f, 0x61, 0x6e,
	0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x61, 0x69, 0x72, 0x70, 0x61, 0x79, 0x5f,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x61, 0x69, 0x72, 0x70, 0x61, 0x79, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x63, 0x5f, 0x72, 0x65, 0x66, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x2f, 0x61, 0x70, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x33, 0x2e, 0x70, 0x62, 0x2f, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_admin_promotion_proto_rawDescOnce sync.Once
	file_admin_promotion_proto_rawDescData = file_admin_promotion_proto_rawDesc
)

func file_admin_promotion_proto_rawDescGZIP() []byte {
	file_admin_promotion_proto_rawDescOnce.Do(func() {
		file_admin_promotion_proto_rawDescData = protoimpl.X.CompressGZIP(file_admin_promotion_proto_rawDescData)
	})
	return file_admin_promotion_proto_rawDescData
}

var file_admin_promotion_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_admin_promotion_proto_msgTypes = make([]protoimpl.MessageInfo, 107)
var file_admin_promotion_proto_goTypes = []interface{}{
	(SortOrder)(0),                                // 0: apc.promotion.SortOrder
	(*GetGroupsReq)(nil),                          // 1: apc.promotion.GetGroupsReq
	(*GetGroupsResp)(nil),                         // 2: apc.promotion.GetGroupsResp
	(*GetGroupDetailReq)(nil),                     // 3: apc.promotion.GetGroupDetailReq
	(*GetGroupDetailResp)(nil),                    // 4: apc.promotion.GetGroupDetailResp
	(*EditDefaultDiscountReq)(nil),                // 5: apc.promotion.EditDefaultDiscountReq
	(*EditDefaultDiscountResp)(nil),               // 6: apc.promotion.EditDefaultDiscountResp
	(*BatchEditDefaultDiscountReq)(nil),           // 7: apc.promotion.BatchEditDefaultDiscountReq
	(*BatchEditDefaultDiscountResp)(nil),          // 8: apc.promotion.BatchEditDefaultDiscountResp
	(*ClearDefaultDiscountReq)(nil),               // 9: apc.promotion.ClearDefaultDiscountReq
	(*ClearDefaultDiscountResp)(nil),              // 10: apc.promotion.ClearDefaultDiscountResp
	(*AddDiscountRuleReq)(nil),                    // 11: apc.promotion.AddDiscountRuleReq
	(*AddDiscountRuleResp)(nil),                   // 12: apc.promotion.AddDiscountRuleResp
	(*BatchAddDiscountRuleReq)(nil),               // 13: apc.promotion.BatchAddDiscountRuleReq
	(*BatchAddDiscountRuleResp)(nil),              // 14: apc.promotion.BatchAddDiscountRuleResp
	(*EditDiscountRuleReq)(nil),                   // 15: apc.promotion.EditDiscountRuleReq
	(*EditDiscountRuleResp)(nil),                  // 16: apc.promotion.EditDiscountRuleResp
	(*GetDiscountRulesReq)(nil),                   // 17: apc.promotion.GetDiscountRulesReq
	(*GetDiscountRulesResp)(nil),                  // 18: apc.promotion.GetDiscountRulesResp
	(*InactivateDiscountRuleReq)(nil),             // 19: apc.promotion.InactivateDiscountRuleReq
	(*InactivateDiscountRuleResp)(nil),            // 20: apc.promotion.InactivateDiscountRuleResp
	(*PublishDiscountRuleReq)(nil),                // 21: apc.promotion.PublishDiscountRuleReq
	(*PublishDiscountRuleResp)(nil),               // 22: apc.promotion.PublishDiscountRuleResp
	(*GetDiscountRuleDetailReq)(nil),              // 23: apc.promotion.GetDiscountRuleDetailReq
	(*GetDiscountRuleDetailResp)(nil),             // 24: apc.promotion.GetDiscountRuleDetailResp
	(*BatchEditDiscountRulePriorityReq)(nil),      // 25: apc.promotion.BatchEditDiscountRulePriorityReq
	(*BatchEditDiscountRulePriorityResp)(nil),     // 26: apc.promotion.BatchEditDiscountRulePriorityResp
	(*SearchProductDiscountReq)(nil),              // 27: apc.promotion.SearchProductDiscountReq
	(*SearchProductDiscountResp)(nil),             // 28: apc.promotion.SearchProductDiscountResp
	(*GetDiscountRulesByGroupReq)(nil),            // 29: apc.promotion.GetDiscountRulesByGroupReq
	(*GetDiscountRulesByGroupResp)(nil),           // 30: apc.promotion.GetDiscountRulesByGroupResp
	(*ExportDiscountRulesByGroupReq)(nil),         // 31: apc.promotion.ExportDiscountRulesByGroupReq
	(*ExportDiscountRulesByGroupResp)(nil),        // 32: apc.promotion.ExportDiscountRulesByGroupResp
	(*GetDiscountUploadHistoryReq)(nil),           // 33: apc.promotion.GetDiscountUploadHistoryReq
	(*GetDiscountUploadHistoryResp)(nil),          // 34: apc.promotion.GetDiscountUploadHistoryResp
	(*GetDiscountRulesByProductReq)(nil),          // 35: apc.promotion.GetDiscountRulesByProductReq
	(*GetDiscountRulesByProductResp)(nil),         // 36: apc.promotion.GetDiscountRulesByProductResp
	(*GetAllDiscountRuleDetailByProductReq)(nil),  // 37: apc.promotion.GetAllDiscountRuleDetailByProductReq
	(*GetAllDiscountRuleDetailByProductResp)(nil), // 38: apc.promotion.GetAllDiscountRuleDetailByProductResp
	(*EditDefaultCashbackReq)(nil),                // 39: apc.promotion.EditDefaultCashbackReq
	(*EditDefaultCashbackResp)(nil),               // 40: apc.promotion.EditDefaultCashbackResp
	(*ClearDefaultCashbackReq)(nil),               // 41: apc.promotion.ClearDefaultCashbackReq
	(*ClearDefaultCashbackResp)(nil),              // 42: apc.promotion.ClearDefaultCashbackResp
	(*AddCashbackRuleReq)(nil),                    // 43: apc.promotion.AddCashbackRuleReq
	(*AddCashbackRuleResp)(nil),                   // 44: apc.promotion.AddCashbackRuleResp
	(*EditCashbackRuleReq)(nil),                   // 45: apc.promotion.EditCashbackRuleReq
	(*EditCashbackRuleResp)(nil),                  // 46: apc.promotion.EditCashbackRuleResp
	(*GetCashbackRulesReq)(nil),                   // 47: apc.promotion.GetCashbackRulesReq
	(*GetCashbackRulesResp)(nil),                  // 48: apc.promotion.GetCashbackRulesResp
	(*InactivateCashbackRuleReq)(nil),             // 49: apc.promotion.InactivateCashbackRuleReq
	(*InactivateCashbackRuleResp)(nil),            // 50: apc.promotion.InactivateCashbackRuleResp
	(*PublishCashbackRuleReq)(nil),                // 51: apc.promotion.PublishCashbackRuleReq
	(*PublishCashbackRuleResp)(nil),               // 52: apc.promotion.PublishCashbackRuleResp
	(*GetCashbackRuleDetailReq)(nil),              // 53: apc.promotion.GetCashbackRuleDetailReq
	(*GetCashbackRuleDetailResp)(nil),             // 54: apc.promotion.GetCashbackRuleDetailResp
	(*BatchEditCashbackRulePriorityReq)(nil),      // 55: apc.promotion.BatchEditCashbackRulePriorityReq
	(*BatchEditCashbackRulePriorityResp)(nil),     // 56: apc.promotion.BatchEditCashbackRulePriorityResp
	(*SearchProductCashbacksReq)(nil),             // 57: apc.promotion.SearchProductCashbacksReq
	(*SearchProductCashbacksResp)(nil),            // 58: apc.promotion.SearchProductCashbacksResp
	(*GetCashbackRulesByGroupReq)(nil),            // 59: apc.promotion.GetCashbackRulesByGroupReq
	(*GetCashbackRulesByGroupResp)(nil),           // 60: apc.promotion.GetCashbackRulesByGroupResp
	(*ExportCashbackRulesByGroupReq)(nil),         // 61: apc.promotion.ExportCashbackRulesByGroupReq
	(*ExportCashbackRulesByGroupResp)(nil),        // 62: apc.promotion.ExportCashbackRulesByGroupResp
	(*GetCashbackRulesByProductReq)(nil),          // 63: apc.promotion.GetCashbackRulesByProductReq
	(*GetCashbackRulesByProductResp)(nil),         // 64: apc.promotion.GetCashbackRulesByProductResp
	(*GetAllCashbackRuleDetailByProductReq)(nil),  // 65: apc.promotion.GetAllCashbackRuleDetailByProductReq
	(*GetAllCashbackRuleDetailByProductResp)(nil), // 66: apc.promotion.GetAllCashbackRuleDetailByProductResp
	(*AddBonusRuleReq)(nil),                       // 67: apc.promotion.AddBonusRuleReq
	(*AddBonusRuleResp)(nil),                      // 68: apc.promotion.AddBonusRuleResp
	(*EditBonusRuleReq)(nil),                      // 69: apc.promotion.EditBonusRuleReq
	(*EditBonusRuleResp)(nil),                     // 70: apc.promotion.EditBonusRuleResp
	(*PublishBonusRuleReq)(nil),                   // 71: apc.promotion.PublishBonusRuleReq
	(*PublishBonusRuleResp)(nil),                  // 72: apc.promotion.PublishBonusRuleResp
	(*InvalidBonusRuleReq)(nil),                   // 73: apc.promotion.InvalidBonusRuleReq
	(*InvalidBonusRuleResp)(nil),                  // 74: apc.promotion.InvalidBonusRuleResp
	(*BatchOrderBonusRuleReq)(nil),                // 75: apc.promotion.BatchOrderBonusRuleReq
	(*BatchOrderBonusRuleResp)(nil),               // 76: apc.promotion.BatchOrderBonusRuleResp
	(*GetBonusRulesReq)(nil),                      // 77: apc.promotion.GetBonusRulesReq
	(*GetBonusRulesResp)(nil),                     // 78: apc.promotion.GetBonusRulesResp
	(*EditDefaultBonusRuleReq)(nil),               // 79: apc.promotion.EditDefaultBonusRuleReq
	(*EditDefaultBonusRuleResp)(nil),              // 80: apc.promotion.EditDefaultBonusRuleResp
	(*ClearDefaultBonusRuleReq)(nil),              // 81: apc.promotion.ClearDefaultBonusRuleReq
	(*ClearDefaultBonusRuleResp)(nil),             // 82: apc.promotion.ClearDefaultBonusRuleResp
	(*GetProductAndBonusRuleReq)(nil),             // 83: apc.promotion.GetProductAndBonusRuleReq
	(*GetProductAndBonusRuleResp)(nil),            // 84: apc.promotion.GetProductAndBonusRuleResp
	(*GetBonusProductsReq)(nil),                   // 85: apc.promotion.GetBonusProductsReq
	(*GetBonusProductsResp)(nil),                  // 86: apc.promotion.GetBonusProductsResp
	(*GetAffectedStoresReq)(nil),                  // 87: apc.promotion.GetAffectedStoresReq
	(*GetAffectedStoresResp)(nil),                 // 88: apc.promotion.GetAffectedStoresResp
	(*GetAffectedStoresAheadReq)(nil),             // 89: apc.promotion.GetAffectedStoresAheadReq
	(*GetAffectedStoresAheadResp)(nil),            // 90: apc.promotion.GetAffectedStoresAheadResp
	(*ExportDiscountUploadFileReq)(nil),           // 91: apc.promotion.ExportDiscountUploadFileReq
	(*ExportDiscountUploadFileResp)(nil),          // 92: apc.promotion.ExportDiscountUploadFileResp
	(*GetGroupsResp_Item)(nil),                    // 93: apc.promotion.GetGroupsResp.Item
	(*BatchEditDefaultDiscountReq_Item)(nil),      // 94: apc.promotion.BatchEditDefaultDiscountReq.Item
	(*BatchAddDiscountRuleReq_Item)(nil),          // 95: apc.promotion.BatchAddDiscountRuleReq.Item
	(*BatchEditDiscountRulePriorityReq_Item)(nil), // 96: apc.promotion.BatchEditDiscountRulePriorityReq.Item
	(*SearchProductDiscountResp_Item)(nil),        // 97: apc.promotion.SearchProductDiscountResp.Item
	(*GetDiscountRulesByGroupResp_Item)(nil),      // 98: apc.promotion.GetDiscountRulesByGroupResp.Item
	(*GetDiscountUploadHistoryResp_Item)(nil),     // 99: apc.promotion.GetDiscountUploadHistoryResp.Item
	(*GetDiscountRulesByProductResp_Item)(nil),    // 100: apc.promotion.GetDiscountRulesByProductResp.Item
	nil, // 101: apc.promotion.GetDiscountRulesByProductResp.ProductMapEntry
	(*BatchEditCashbackRulePriorityReq_Item)(nil), // 102: apc.promotion.BatchEditCashbackRulePriorityReq.Item
	(*SearchProductCashbacksResp_Item)(nil),       // 103: apc.promotion.SearchProductCashbacksResp.Item
	(*GetCashbackRulesByGroupResp_Item)(nil),      // 104: apc.promotion.GetCashbackRulesByGroupResp.Item
	(*GetCashbackRulesByProductResp_Item)(nil),    // 105: apc.promotion.GetCashbackRulesByProductResp.Item
	nil,                                     // 106: apc.promotion.GetCashbackRulesByProductResp.ProductMapEntry
	(*GetProductAndBonusRuleResp_Item)(nil), // 107: apc.promotion.GetProductAndBonusRuleResp.Item
	(*common.Group)(nil),                    // 108: apc.group.Group
	(*common1.DiscountRule)(nil),            // 109: apc.promotion.DiscountRule
	(*common1.DiscountRuleRichInfo)(nil),    // 110: apc.promotion.DiscountRuleRichInfo
	(*admin.SearchProductReq)(nil),          // 111: apc.product.SearchProductReq
	(*common1.CashbackRule)(nil),            // 112: apc.promotion.CashbackRule
	(*common1.CashbackRuleRichInfo)(nil),    // 113: apc.promotion.CashbackRuleRichInfo
	(*common1.BonusRule)(nil),               // 114: apc.promotion.BonusRule
	(*common1.BonusRuleRichInfo)(nil),       // 115: apc.promotion.BonusRuleRichInfo
	(*common2.Product)(nil),                 // 116: apc.product.Product
	(*common.Dimension)(nil),                // 117: apc.group.Dimension
	(*admin.ProductInfo)(nil),               // 118: apc.product.ProductInfo
	(*common1.Range)(nil),                   // 119: apc.promotion.Range
	(*backend.GetGroupLogsReq)(nil),         // 120: apc.group.GetGroupLogsReq
	(*backend.AddGroupReq)(nil),             // 121: apc.group.AddGroupReq
	(*backend.EditGroupsReq)(nil),           // 122: apc.group.EditGroupsReq
	(*backend.GetGroupLogsResp)(nil),        // 123: apc.group.GetGroupLogsResp
	(*backend.AddGroupResp)(nil),            // 124: apc.group.AddGroupResp
	(*backend.EditGroupsResp)(nil),          // 125: apc.group.EditGroupsResp
}
var file_admin_promotion_proto_depIdxs = []int32{
	93,  // 0: apc.promotion.GetGroupsResp.items:type_name -> apc.promotion.GetGroupsResp.Item
	108, // 1: apc.promotion.GetGroupDetailResp.group_info:type_name -> apc.group.Group
	109, // 2: apc.promotion.EditDefaultDiscountReq.default_rule:type_name -> apc.promotion.DiscountRule
	94,  // 3: apc.promotion.BatchEditDefaultDiscountReq.default_rules:type_name -> apc.promotion.BatchEditDefaultDiscountReq.Item
	109, // 4: apc.promotion.AddDiscountRuleReq.rule:type_name -> apc.promotion.DiscountRule
	95,  // 5: apc.promotion.BatchAddDiscountRuleReq.discounts:type_name -> apc.promotion.BatchAddDiscountRuleReq.Item
	109, // 6: apc.promotion.EditDiscountRuleReq.rule:type_name -> apc.promotion.DiscountRule
	110, // 7: apc.promotion.GetDiscountRulesResp.discount_rules:type_name -> apc.promotion.DiscountRuleRichInfo
	110, // 8: apc.promotion.GetDiscountRuleDetailResp.rule:type_name -> apc.promotion.DiscountRuleRichInfo
	96,  // 9: apc.promotion.BatchEditDiscountRulePriorityReq.items:type_name -> apc.promotion.BatchEditDiscountRulePriorityReq.Item
	111, // 10: apc.promotion.SearchProductDiscountReq.condition:type_name -> apc.product.SearchProductReq
	97,  // 11: apc.promotion.SearchProductDiscountResp.products:type_name -> apc.promotion.SearchProductDiscountResp.Item
	98,  // 12: apc.promotion.GetDiscountRulesByGroupResp.items:type_name -> apc.promotion.GetDiscountRulesByGroupResp.Item
	99,  // 13: apc.promotion.GetDiscountUploadHistoryResp.items:type_name -> apc.promotion.GetDiscountUploadHistoryResp.Item
	101, // 14: apc.promotion.GetDiscountRulesByProductResp.product_map:type_name -> apc.promotion.GetDiscountRulesByProductResp.ProductMapEntry
	110, // 15: apc.promotion.GetAllDiscountRuleDetailByProductResp.rules:type_name -> apc.promotion.DiscountRuleRichInfo
	110, // 16: apc.promotion.GetAllDiscountRuleDetailByProductResp.default_rule:type_name -> apc.promotion.DiscountRuleRichInfo
	112, // 17: apc.promotion.EditDefaultCashbackReq.default_rule:type_name -> apc.promotion.CashbackRule
	112, // 18: apc.promotion.AddCashbackRuleReq.rule:type_name -> apc.promotion.CashbackRule
	112, // 19: apc.promotion.EditCashbackRuleReq.rule:type_name -> apc.promotion.CashbackRule
	113, // 20: apc.promotion.GetCashbackRulesResp.cashback_rules:type_name -> apc.promotion.CashbackRuleRichInfo
	112, // 21: apc.promotion.PublishCashbackRuleReq.rule:type_name -> apc.promotion.CashbackRule
	113, // 22: apc.promotion.GetCashbackRuleDetailResp.rule:type_name -> apc.promotion.CashbackRuleRichInfo
	102, // 23: apc.promotion.BatchEditCashbackRulePriorityReq.items:type_name -> apc.promotion.BatchEditCashbackRulePriorityReq.Item
	111, // 24: apc.promotion.SearchProductCashbacksReq.condition:type_name -> apc.product.SearchProductReq
	103, // 25: apc.promotion.SearchProductCashbacksResp.products:type_name -> apc.promotion.SearchProductCashbacksResp.Item
	104, // 26: apc.promotion.GetCashbackRulesByGroupResp.items:type_name -> apc.promotion.GetCashbackRulesByGroupResp.Item
	106, // 27: apc.promotion.GetCashbackRulesByProductResp.product_map:type_name -> apc.promotion.GetCashbackRulesByProductResp.ProductMapEntry
	113, // 28: apc.promotion.GetAllCashbackRuleDetailByProductResp.rules:type_name -> apc.promotion.CashbackRuleRichInfo
	113, // 29: apc.promotion.GetAllCashbackRuleDetailByProductResp.default_rule:type_name -> apc.promotion.CashbackRuleRichInfo
	114, // 30: apc.promotion.AddBonusRuleReq.rule:type_name -> apc.promotion.BonusRule
	114, // 31: apc.promotion.EditBonusRuleReq.rule:type_name -> apc.promotion.BonusRule
	114, // 32: apc.promotion.PublishBonusRuleReq.rule:type_name -> apc.promotion.BonusRule
	115, // 33: apc.promotion.GetBonusRulesResp.items:type_name -> apc.promotion.BonusRuleRichInfo
	114, // 34: apc.promotion.EditDefaultBonusRuleReq.rule:type_name -> apc.promotion.BonusRule
	111, // 35: apc.promotion.GetProductAndBonusRuleReq.condition:type_name -> apc.product.SearchProductReq
	107, // 36: apc.promotion.GetProductAndBonusRuleResp.items:type_name -> apc.promotion.GetProductAndBonusRuleResp.Item
	116, // 37: apc.promotion.GetBonusProductsResp.product:type_name -> apc.product.Product
	117, // 38: apc.promotion.GetAffectedStoresAheadReq.dimensions:type_name -> apc.group.Dimension
	108, // 39: apc.promotion.GetGroupsResp.Item.group_info:type_name -> apc.group.Group
	118, // 40: apc.promotion.SearchProductDiscountResp.Item.product:type_name -> apc.product.ProductInfo
	109, // 41: apc.promotion.GetDiscountRulesByGroupResp.Item.rule:type_name -> apc.promotion.DiscountRule
	100, // 42: apc.promotion.GetDiscountRulesByProductResp.ProductMapEntry.value:type_name -> apc.promotion.GetDiscountRulesByProductResp.Item
	118, // 43: apc.promotion.SearchProductCashbacksResp.Item.product:type_name -> apc.product.ProductInfo
	119, // 44: apc.promotion.SearchProductCashbacksResp.Item.default_range:type_name -> apc.promotion.Range
	112, // 45: apc.promotion.GetCashbackRulesByGroupResp.Item.rule:type_name -> apc.promotion.CashbackRule
	105, // 46: apc.promotion.GetCashbackRulesByProductResp.ProductMapEntry.value:type_name -> apc.promotion.GetCashbackRulesByProductResp.Item
	118, // 47: apc.promotion.GetProductAndBonusRuleResp.Item.product:type_name -> apc.product.ProductInfo
	114, // 48: apc.promotion.GetProductAndBonusRuleResp.Item.default_rule:type_name -> apc.promotion.BonusRule
	1,   // 49: apc.promotion.AdminService.GetGroups:input_type -> apc.promotion.GetGroupsReq
	3,   // 50: apc.promotion.AdminService.GetGroupDetail:input_type -> apc.promotion.GetGroupDetailReq
	120, // 51: apc.promotion.AdminService.GetGroupLog:input_type -> apc.group.GetGroupLogsReq
	121, // 52: apc.promotion.AdminService.AddGroup:input_type -> apc.group.AddGroupReq
	122, // 53: apc.promotion.AdminService.EditGroup:input_type -> apc.group.EditGroupsReq
	87,  // 54: apc.promotion.AdminService.GetAffectedStores:input_type -> apc.promotion.GetAffectedStoresReq
	89,  // 55: apc.promotion.AdminService.GetAffectedStoresAhead:input_type -> apc.promotion.GetAffectedStoresAheadReq
	5,   // 56: apc.promotion.AdminService.EditDefaultDiscount:input_type -> apc.promotion.EditDefaultDiscountReq
	7,   // 57: apc.promotion.AdminService.BatchEditDefaultDiscount:input_type -> apc.promotion.BatchEditDefaultDiscountReq
	9,   // 58: apc.promotion.AdminService.ClearDefaultDiscount:input_type -> apc.promotion.ClearDefaultDiscountReq
	17,  // 59: apc.promotion.AdminService.GetDiscountRules:input_type -> apc.promotion.GetDiscountRulesReq
	19,  // 60: apc.promotion.AdminService.InactivateDiscountRule:input_type -> apc.promotion.InactivateDiscountRuleReq
	21,  // 61: apc.promotion.AdminService.PublishDiscountRule:input_type -> apc.promotion.PublishDiscountRuleReq
	11,  // 62: apc.promotion.AdminService.AddDiscountRule:input_type -> apc.promotion.AddDiscountRuleReq
	13,  // 63: apc.promotion.AdminService.BatchAddDiscountRule:input_type -> apc.promotion.BatchAddDiscountRuleReq
	15,  // 64: apc.promotion.AdminService.EditDiscountRule:input_type -> apc.promotion.EditDiscountRuleReq
	25,  // 65: apc.promotion.AdminService.BatchEditDiscountRulePriority:input_type -> apc.promotion.BatchEditDiscountRulePriorityReq
	23,  // 66: apc.promotion.AdminService.GetDiscountRuleDetail:input_type -> apc.promotion.GetDiscountRuleDetailReq
	27,  // 67: apc.promotion.AdminService.SearchProductDiscount:input_type -> apc.promotion.SearchProductDiscountReq
	29,  // 68: apc.promotion.AdminService.GetDiscountRulesByGroup:input_type -> apc.promotion.GetDiscountRulesByGroupReq
	31,  // 69: apc.promotion.AdminService.ExportDiscountRulesByGroup:input_type -> apc.promotion.ExportDiscountRulesByGroupReq
	33,  // 70: apc.promotion.AdminService.GetDiscountUploadHistory:input_type -> apc.promotion.GetDiscountUploadHistoryReq
	91,  // 71: apc.promotion.AdminService.ExportDiscountUploadFile:input_type -> apc.promotion.ExportDiscountUploadFileReq
	35,  // 72: apc.promotion.AdminService.GetDiscountRulesByProduct:input_type -> apc.promotion.GetDiscountRulesByProductReq
	37,  // 73: apc.promotion.AdminService.GetAllDiscountRuleDetailByProduct:input_type -> apc.promotion.GetAllDiscountRuleDetailByProductReq
	39,  // 74: apc.promotion.AdminService.EditDefaultCashback:input_type -> apc.promotion.EditDefaultCashbackReq
	41,  // 75: apc.promotion.AdminService.ClearDefaultCashback:input_type -> apc.promotion.ClearDefaultCashbackReq
	47,  // 76: apc.promotion.AdminService.GetCashbackRules:input_type -> apc.promotion.GetCashbackRulesReq
	49,  // 77: apc.promotion.AdminService.InactivateCashbackRule:input_type -> apc.promotion.InactivateCashbackRuleReq
	43,  // 78: apc.promotion.AdminService.AddCashbackRule:input_type -> apc.promotion.AddCashbackRuleReq
	45,  // 79: apc.promotion.AdminService.EditCashbackRule:input_type -> apc.promotion.EditCashbackRuleReq
	51,  // 80: apc.promotion.AdminService.PublishCashbackRule:input_type -> apc.promotion.PublishCashbackRuleReq
	55,  // 81: apc.promotion.AdminService.BatchEditCashbackRulePriority:input_type -> apc.promotion.BatchEditCashbackRulePriorityReq
	53,  // 82: apc.promotion.AdminService.GetCashbackRuleDetail:input_type -> apc.promotion.GetCashbackRuleDetailReq
	57,  // 83: apc.promotion.AdminService.SearchProductCashbacks:input_type -> apc.promotion.SearchProductCashbacksReq
	59,  // 84: apc.promotion.AdminService.GetCashbackRulesByGroup:input_type -> apc.promotion.GetCashbackRulesByGroupReq
	61,  // 85: apc.promotion.AdminService.ExportCashbackRulesByGroup:input_type -> apc.promotion.ExportCashbackRulesByGroupReq
	63,  // 86: apc.promotion.AdminService.GetCashbackRulesByProduct:input_type -> apc.promotion.GetCashbackRulesByProductReq
	65,  // 87: apc.promotion.AdminService.GetAllCashbackRuleDetailByProduct:input_type -> apc.promotion.GetAllCashbackRuleDetailByProductReq
	83,  // 88: apc.promotion.AdminService.GetProductAndBonusRule:input_type -> apc.promotion.GetProductAndBonusRuleReq
	79,  // 89: apc.promotion.AdminService.EditDefaultBonusRule:input_type -> apc.promotion.EditDefaultBonusRuleReq
	81,  // 90: apc.promotion.AdminService.ClearDefaultBonusRule:input_type -> apc.promotion.ClearDefaultBonusRuleReq
	77,  // 91: apc.promotion.AdminService.GetBonusRules:input_type -> apc.promotion.GetBonusRulesReq
	67,  // 92: apc.promotion.AdminService.AddBonusRule:input_type -> apc.promotion.AddBonusRuleReq
	69,  // 93: apc.promotion.AdminService.EditBonusRule:input_type -> apc.promotion.EditBonusRuleReq
	71,  // 94: apc.promotion.AdminService.PublishBonusRule:input_type -> apc.promotion.PublishBonusRuleReq
	73,  // 95: apc.promotion.AdminService.InvalidBonusRule:input_type -> apc.promotion.InvalidBonusRuleReq
	75,  // 96: apc.promotion.AdminService.BatchOrderBonusRule:input_type -> apc.promotion.BatchOrderBonusRuleReq
	85,  // 97: apc.promotion.AdminService.GetBonusProducts:input_type -> apc.promotion.GetBonusProductsReq
	2,   // 98: apc.promotion.AdminService.GetGroups:output_type -> apc.promotion.GetGroupsResp
	4,   // 99: apc.promotion.AdminService.GetGroupDetail:output_type -> apc.promotion.GetGroupDetailResp
	123, // 100: apc.promotion.AdminService.GetGroupLog:output_type -> apc.group.GetGroupLogsResp
	124, // 101: apc.promotion.AdminService.AddGroup:output_type -> apc.group.AddGroupResp
	125, // 102: apc.promotion.AdminService.EditGroup:output_type -> apc.group.EditGroupsResp
	88,  // 103: apc.promotion.AdminService.GetAffectedStores:output_type -> apc.promotion.GetAffectedStoresResp
	90,  // 104: apc.promotion.AdminService.GetAffectedStoresAhead:output_type -> apc.promotion.GetAffectedStoresAheadResp
	6,   // 105: apc.promotion.AdminService.EditDefaultDiscount:output_type -> apc.promotion.EditDefaultDiscountResp
	8,   // 106: apc.promotion.AdminService.BatchEditDefaultDiscount:output_type -> apc.promotion.BatchEditDefaultDiscountResp
	10,  // 107: apc.promotion.AdminService.ClearDefaultDiscount:output_type -> apc.promotion.ClearDefaultDiscountResp
	18,  // 108: apc.promotion.AdminService.GetDiscountRules:output_type -> apc.promotion.GetDiscountRulesResp
	20,  // 109: apc.promotion.AdminService.InactivateDiscountRule:output_type -> apc.promotion.InactivateDiscountRuleResp
	22,  // 110: apc.promotion.AdminService.PublishDiscountRule:output_type -> apc.promotion.PublishDiscountRuleResp
	12,  // 111: apc.promotion.AdminService.AddDiscountRule:output_type -> apc.promotion.AddDiscountRuleResp
	14,  // 112: apc.promotion.AdminService.BatchAddDiscountRule:output_type -> apc.promotion.BatchAddDiscountRuleResp
	16,  // 113: apc.promotion.AdminService.EditDiscountRule:output_type -> apc.promotion.EditDiscountRuleResp
	26,  // 114: apc.promotion.AdminService.BatchEditDiscountRulePriority:output_type -> apc.promotion.BatchEditDiscountRulePriorityResp
	24,  // 115: apc.promotion.AdminService.GetDiscountRuleDetail:output_type -> apc.promotion.GetDiscountRuleDetailResp
	28,  // 116: apc.promotion.AdminService.SearchProductDiscount:output_type -> apc.promotion.SearchProductDiscountResp
	30,  // 117: apc.promotion.AdminService.GetDiscountRulesByGroup:output_type -> apc.promotion.GetDiscountRulesByGroupResp
	32,  // 118: apc.promotion.AdminService.ExportDiscountRulesByGroup:output_type -> apc.promotion.ExportDiscountRulesByGroupResp
	34,  // 119: apc.promotion.AdminService.GetDiscountUploadHistory:output_type -> apc.promotion.GetDiscountUploadHistoryResp
	92,  // 120: apc.promotion.AdminService.ExportDiscountUploadFile:output_type -> apc.promotion.ExportDiscountUploadFileResp
	36,  // 121: apc.promotion.AdminService.GetDiscountRulesByProduct:output_type -> apc.promotion.GetDiscountRulesByProductResp
	38,  // 122: apc.promotion.AdminService.GetAllDiscountRuleDetailByProduct:output_type -> apc.promotion.GetAllDiscountRuleDetailByProductResp
	40,  // 123: apc.promotion.AdminService.EditDefaultCashback:output_type -> apc.promotion.EditDefaultCashbackResp
	42,  // 124: apc.promotion.AdminService.ClearDefaultCashback:output_type -> apc.promotion.ClearDefaultCashbackResp
	48,  // 125: apc.promotion.AdminService.GetCashbackRules:output_type -> apc.promotion.GetCashbackRulesResp
	50,  // 126: apc.promotion.AdminService.InactivateCashbackRule:output_type -> apc.promotion.InactivateCashbackRuleResp
	44,  // 127: apc.promotion.AdminService.AddCashbackRule:output_type -> apc.promotion.AddCashbackRuleResp
	46,  // 128: apc.promotion.AdminService.EditCashbackRule:output_type -> apc.promotion.EditCashbackRuleResp
	52,  // 129: apc.promotion.AdminService.PublishCashbackRule:output_type -> apc.promotion.PublishCashbackRuleResp
	56,  // 130: apc.promotion.AdminService.BatchEditCashbackRulePriority:output_type -> apc.promotion.BatchEditCashbackRulePriorityResp
	54,  // 131: apc.promotion.AdminService.GetCashbackRuleDetail:output_type -> apc.promotion.GetCashbackRuleDetailResp
	58,  // 132: apc.promotion.AdminService.SearchProductCashbacks:output_type -> apc.promotion.SearchProductCashbacksResp
	60,  // 133: apc.promotion.AdminService.GetCashbackRulesByGroup:output_type -> apc.promotion.GetCashbackRulesByGroupResp
	62,  // 134: apc.promotion.AdminService.ExportCashbackRulesByGroup:output_type -> apc.promotion.ExportCashbackRulesByGroupResp
	64,  // 135: apc.promotion.AdminService.GetCashbackRulesByProduct:output_type -> apc.promotion.GetCashbackRulesByProductResp
	66,  // 136: apc.promotion.AdminService.GetAllCashbackRuleDetailByProduct:output_type -> apc.promotion.GetAllCashbackRuleDetailByProductResp
	84,  // 137: apc.promotion.AdminService.GetProductAndBonusRule:output_type -> apc.promotion.GetProductAndBonusRuleResp
	80,  // 138: apc.promotion.AdminService.EditDefaultBonusRule:output_type -> apc.promotion.EditDefaultBonusRuleResp
	82,  // 139: apc.promotion.AdminService.ClearDefaultBonusRule:output_type -> apc.promotion.ClearDefaultBonusRuleResp
	78,  // 140: apc.promotion.AdminService.GetBonusRules:output_type -> apc.promotion.GetBonusRulesResp
	68,  // 141: apc.promotion.AdminService.AddBonusRule:output_type -> apc.promotion.AddBonusRuleResp
	70,  // 142: apc.promotion.AdminService.EditBonusRule:output_type -> apc.promotion.EditBonusRuleResp
	72,  // 143: apc.promotion.AdminService.PublishBonusRule:output_type -> apc.promotion.PublishBonusRuleResp
	74,  // 144: apc.promotion.AdminService.InvalidBonusRule:output_type -> apc.promotion.InvalidBonusRuleResp
	76,  // 145: apc.promotion.AdminService.BatchOrderBonusRule:output_type -> apc.promotion.BatchOrderBonusRuleResp
	86,  // 146: apc.promotion.AdminService.GetBonusProducts:output_type -> apc.promotion.GetBonusProductsResp
	98,  // [98:147] is the sub-list for method output_type
	49,  // [49:98] is the sub-list for method input_type
	49,  // [49:49] is the sub-list for extension type_name
	49,  // [49:49] is the sub-list for extension extendee
	0,   // [0:49] is the sub-list for field type_name
}

func init() { file_admin_promotion_proto_init() }
func file_admin_promotion_proto_init() {
	if File_admin_promotion_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_admin_promotion_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditDefaultDiscountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditDefaultDiscountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchEditDefaultDiscountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchEditDefaultDiscountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearDefaultDiscountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearDefaultDiscountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDiscountRuleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDiscountRuleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchAddDiscountRuleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchAddDiscountRuleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditDiscountRuleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditDiscountRuleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDiscountRulesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDiscountRulesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InactivateDiscountRuleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InactivateDiscountRuleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishDiscountRuleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishDiscountRuleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDiscountRuleDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDiscountRuleDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchEditDiscountRulePriorityReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchEditDiscountRulePriorityResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchProductDiscountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchProductDiscountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDiscountRulesByGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDiscountRulesByGroupResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportDiscountRulesByGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportDiscountRulesByGroupResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDiscountUploadHistoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDiscountUploadHistoryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDiscountRulesByProductReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDiscountRulesByProductResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllDiscountRuleDetailByProductReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllDiscountRuleDetailByProductResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditDefaultCashbackReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditDefaultCashbackResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearDefaultCashbackReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearDefaultCashbackResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCashbackRuleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCashbackRuleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditCashbackRuleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditCashbackRuleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCashbackRulesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCashbackRulesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InactivateCashbackRuleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InactivateCashbackRuleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishCashbackRuleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishCashbackRuleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCashbackRuleDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCashbackRuleDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchEditCashbackRulePriorityReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchEditCashbackRulePriorityResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchProductCashbacksReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchProductCashbacksResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCashbackRulesByGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCashbackRulesByGroupResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportCashbackRulesByGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportCashbackRulesByGroupResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCashbackRulesByProductReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCashbackRulesByProductResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllCashbackRuleDetailByProductReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllCashbackRuleDetailByProductResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBonusRuleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBonusRuleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditBonusRuleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditBonusRuleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishBonusRuleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishBonusRuleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvalidBonusRuleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvalidBonusRuleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchOrderBonusRuleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchOrderBonusRuleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBonusRulesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBonusRulesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditDefaultBonusRuleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditDefaultBonusRuleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearDefaultBonusRuleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearDefaultBonusRuleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductAndBonusRuleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductAndBonusRuleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBonusProductsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBonusProductsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAffectedStoresReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAffectedStoresResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAffectedStoresAheadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAffectedStoresAheadResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportDiscountUploadFileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportDiscountUploadFileResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupsResp_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchEditDefaultDiscountReq_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchAddDiscountRuleReq_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchEditDiscountRulePriorityReq_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchProductDiscountResp_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDiscountRulesByGroupResp_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDiscountUploadHistoryResp_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDiscountRulesByProductResp_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchEditCashbackRulePriorityReq_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchProductCashbacksResp_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCashbackRulesByGroupResp_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCashbackRulesByProductResp_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_promotion_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductAndBonusRuleResp_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_admin_promotion_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   107,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_admin_promotion_proto_goTypes,
		DependencyIndexes: file_admin_promotion_proto_depIdxs,
		EnumInfos:         file_admin_promotion_proto_enumTypes,
		MessageInfos:      file_admin_promotion_proto_msgTypes,
	}.Build()
	File_admin_promotion_proto = out.File
	file_admin_promotion_proto_rawDesc = nil
	file_admin_promotion_proto_goTypes = nil
	file_admin_promotion_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AdminServiceClient is the client API for AdminService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AdminServiceClient interface {
	//
	// commission group
	//
	// 批量获取促销规则组
	GetGroups(ctx context.Context, in *GetGroupsReq, opts ...grpc.CallOption) (*GetGroupsResp, error)
	// 获取促销规则组详情
	GetGroupDetail(ctx context.Context, in *GetGroupDetailReq, opts ...grpc.CallOption) (*GetGroupDetailResp, error)
	// 获取促销规则组操作日志
	GetGroupLog(ctx context.Context, in *backend.GetGroupLogsReq, opts ...grpc.CallOption) (*backend.GetGroupLogsResp, error)
	// 新增促销规则组
	AddGroup(ctx context.Context, in *backend.AddGroupReq, opts ...grpc.CallOption) (*backend.AddGroupResp, error)
	// 修改促销规则组
	EditGroup(ctx context.Context, in *backend.EditGroupsReq, opts ...grpc.CallOption) (*backend.EditGroupsResp, error)
	//获取规则组覆盖的店铺数量
	GetAffectedStores(ctx context.Context, in *GetAffectedStoresReq, opts ...grpc.CallOption) (*GetAffectedStoresResp, error)
	//获取规则组覆盖的店铺数量
	GetAffectedStoresAhead(ctx context.Context, in *GetAffectedStoresAheadReq, opts ...grpc.CallOption) (*GetAffectedStoresAheadResp, error)
	//
	// discount
	//
	// 修改默认discount配置
	EditDefaultDiscount(ctx context.Context, in *EditDefaultDiscountReq, opts ...grpc.CallOption) (*EditDefaultDiscountResp, error)
	// 批量修改默认discount配置
	BatchEditDefaultDiscount(ctx context.Context, in *BatchEditDefaultDiscountReq, opts ...grpc.CallOption) (*BatchEditDefaultDiscountResp, error)
	// 清除默认discount配置
	ClearDefaultDiscount(ctx context.Context, in *ClearDefaultDiscountReq, opts ...grpc.CallOption) (*ClearDefaultDiscountResp, error)
	// 批量获取dicount配置
	GetDiscountRules(ctx context.Context, in *GetDiscountRulesReq, opts ...grpc.CallOption) (*GetDiscountRulesResp, error)
	// discount配置失效
	InactivateDiscountRule(ctx context.Context, in *InactivateDiscountRuleReq, opts ...grpc.CallOption) (*InactivateDiscountRuleResp, error)
	// 使discount配置由editing变为生效
	PublishDiscountRule(ctx context.Context, in *PublishDiscountRuleReq, opts ...grpc.CallOption) (*PublishDiscountRuleResp, error)
	// 添加discount规则
	AddDiscountRule(ctx context.Context, in *AddDiscountRuleReq, opts ...grpc.CallOption) (*AddDiscountRuleResp, error)
	// 批量添加discount规则
	BatchAddDiscountRule(ctx context.Context, in *BatchAddDiscountRuleReq, opts ...grpc.CallOption) (*BatchAddDiscountRuleResp, error)
	// 修改discount规则
	EditDiscountRule(ctx context.Context, in *EditDiscountRuleReq, opts ...grpc.CallOption) (*EditDiscountRuleResp, error)
	// 批量修改discount优先级
	BatchEditDiscountRulePriority(ctx context.Context, in *BatchEditDiscountRulePriorityReq, opts ...grpc.CallOption) (*BatchEditDiscountRulePriorityResp, error)
	// 获取discount详情
	GetDiscountRuleDetail(ctx context.Context, in *GetDiscountRuleDetailReq, opts ...grpc.CallOption) (*GetDiscountRuleDetailResp, error)
	// 获取discount产品列表
	SearchProductDiscount(ctx context.Context, in *SearchProductDiscountReq, opts ...grpc.CallOption) (*SearchProductDiscountResp, error)
	// 根据促销规则组获取discount配置列表
	GetDiscountRulesByGroup(ctx context.Context, in *GetDiscountRulesByGroupReq, opts ...grpc.CallOption) (*GetDiscountRulesByGroupResp, error)
	// 根据促销规则组导出discount配置列表
	ExportDiscountRulesByGroup(ctx context.Context, in *ExportDiscountRulesByGroupReq, opts ...grpc.CallOption) (*ExportDiscountRulesByGroupResp, error)
	// 获取discount上传文件历史记录
	GetDiscountUploadHistory(ctx context.Context, in *GetDiscountUploadHistoryReq, opts ...grpc.CallOption) (*GetDiscountUploadHistoryResp, error)
	//导出discount上传文件
	ExportDiscountUploadFile(ctx context.Context, in *ExportDiscountUploadFileReq, opts ...grpc.CallOption) (*ExportDiscountUploadFileResp, error)
	// ========= product 那边需要的接口
	// 根据product信息获取discount
	GetDiscountRulesByProduct(ctx context.Context, in *GetDiscountRulesByProductReq, opts ...grpc.CallOption) (*GetDiscountRulesByProductResp, error)
	// 根据product信息获取discount详细列表
	GetAllDiscountRuleDetailByProduct(ctx context.Context, in *GetAllDiscountRuleDetailByProductReq, opts ...grpc.CallOption) (*GetAllDiscountRuleDetailByProductResp, error)
	//
	// cashback
	//
	// 修改默认cashback
	EditDefaultCashback(ctx context.Context, in *EditDefaultCashbackReq, opts ...grpc.CallOption) (*EditDefaultCashbackResp, error)
	// 清除默认cashback
	ClearDefaultCashback(ctx context.Context, in *ClearDefaultCashbackReq, opts ...grpc.CallOption) (*ClearDefaultCashbackResp, error)
	// 批量获取cashback
	GetCashbackRules(ctx context.Context, in *GetCashbackRulesReq, opts ...grpc.CallOption) (*GetCashbackRulesResp, error)
	// cashback失效
	InactivateCashbackRule(ctx context.Context, in *InactivateCashbackRuleReq, opts ...grpc.CallOption) (*InactivateCashbackRuleResp, error)
	// 新增cashback
	AddCashbackRule(ctx context.Context, in *AddCashbackRuleReq, opts ...grpc.CallOption) (*AddCashbackRuleResp, error)
	// 修改cashback
	EditCashbackRule(ctx context.Context, in *EditCashbackRuleReq, opts ...grpc.CallOption) (*EditCashbackRuleResp, error)
	// 发布cashback
	PublishCashbackRule(ctx context.Context, in *PublishCashbackRuleReq, opts ...grpc.CallOption) (*PublishCashbackRuleResp, error)
	// 批量修改cashback优先级
	BatchEditCashbackRulePriority(ctx context.Context, in *BatchEditCashbackRulePriorityReq, opts ...grpc.CallOption) (*BatchEditCashbackRulePriorityResp, error)
	// 获取cashback详情
	GetCashbackRuleDetail(ctx context.Context, in *GetCashbackRuleDetailReq, opts ...grpc.CallOption) (*GetCashbackRuleDetailResp, error)
	// 获取cashback产品列表
	SearchProductCashbacks(ctx context.Context, in *SearchProductCashbacksReq, opts ...grpc.CallOption) (*SearchProductCashbacksResp, error)
	// 根据促销规则组获取cashback列表
	GetCashbackRulesByGroup(ctx context.Context, in *GetCashbackRulesByGroupReq, opts ...grpc.CallOption) (*GetCashbackRulesByGroupResp, error)
	// 根据促销规则组导出cashback列表
	ExportCashbackRulesByGroup(ctx context.Context, in *ExportCashbackRulesByGroupReq, opts ...grpc.CallOption) (*ExportCashbackRulesByGroupResp, error)
	// ===== product 那边需要的接口
	// 根据product获取cashback
	GetCashbackRulesByProduct(ctx context.Context, in *GetCashbackRulesByProductReq, opts ...grpc.CallOption) (*GetCashbackRulesByProductResp, error)
	// 根据product获取cashback详情
	GetAllCashbackRuleDetailByProduct(ctx context.Context, in *GetAllCashbackRuleDetailByProductReq, opts ...grpc.CallOption) (*GetAllCashbackRuleDetailByProductResp, error)
	//
	// bonus
	//
	GetProductAndBonusRule(ctx context.Context, in *GetProductAndBonusRuleReq, opts ...grpc.CallOption) (*GetProductAndBonusRuleResp, error)
	EditDefaultBonusRule(ctx context.Context, in *EditDefaultBonusRuleReq, opts ...grpc.CallOption) (*EditDefaultBonusRuleResp, error)
	ClearDefaultBonusRule(ctx context.Context, in *ClearDefaultBonusRuleReq, opts ...grpc.CallOption) (*ClearDefaultBonusRuleResp, error)
	GetBonusRules(ctx context.Context, in *GetBonusRulesReq, opts ...grpc.CallOption) (*GetBonusRulesResp, error)
	AddBonusRule(ctx context.Context, in *AddBonusRuleReq, opts ...grpc.CallOption) (*AddBonusRuleResp, error)
	EditBonusRule(ctx context.Context, in *EditBonusRuleReq, opts ...grpc.CallOption) (*EditBonusRuleResp, error)
	PublishBonusRule(ctx context.Context, in *PublishBonusRuleReq, opts ...grpc.CallOption) (*PublishBonusRuleResp, error)
	InvalidBonusRule(ctx context.Context, in *InvalidBonusRuleReq, opts ...grpc.CallOption) (*InvalidBonusRuleResp, error)
	BatchOrderBonusRule(ctx context.Context, in *BatchOrderBonusRuleReq, opts ...grpc.CallOption) (*BatchOrderBonusRuleResp, error)
	GetBonusProducts(ctx context.Context, in *GetBonusProductsReq, opts ...grpc.CallOption) (*GetBonusProductsResp, error)
}

type adminServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAdminServiceClient(cc grpc.ClientConnInterface) AdminServiceClient {
	return &adminServiceClient{cc}
}

func (c *adminServiceClient) GetGroups(ctx context.Context, in *GetGroupsReq, opts ...grpc.CallOption) (*GetGroupsResp, error) {
	out := new(GetGroupsResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/GetGroups", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) GetGroupDetail(ctx context.Context, in *GetGroupDetailReq, opts ...grpc.CallOption) (*GetGroupDetailResp, error) {
	out := new(GetGroupDetailResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/GetGroupDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) GetGroupLog(ctx context.Context, in *backend.GetGroupLogsReq, opts ...grpc.CallOption) (*backend.GetGroupLogsResp, error) {
	out := new(backend.GetGroupLogsResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/GetGroupLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) AddGroup(ctx context.Context, in *backend.AddGroupReq, opts ...grpc.CallOption) (*backend.AddGroupResp, error) {
	out := new(backend.AddGroupResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/AddGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) EditGroup(ctx context.Context, in *backend.EditGroupsReq, opts ...grpc.CallOption) (*backend.EditGroupsResp, error) {
	out := new(backend.EditGroupsResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/EditGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) GetAffectedStores(ctx context.Context, in *GetAffectedStoresReq, opts ...grpc.CallOption) (*GetAffectedStoresResp, error) {
	out := new(GetAffectedStoresResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/GetAffectedStores", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) GetAffectedStoresAhead(ctx context.Context, in *GetAffectedStoresAheadReq, opts ...grpc.CallOption) (*GetAffectedStoresAheadResp, error) {
	out := new(GetAffectedStoresAheadResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/GetAffectedStoresAhead", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) EditDefaultDiscount(ctx context.Context, in *EditDefaultDiscountReq, opts ...grpc.CallOption) (*EditDefaultDiscountResp, error) {
	out := new(EditDefaultDiscountResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/EditDefaultDiscount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) BatchEditDefaultDiscount(ctx context.Context, in *BatchEditDefaultDiscountReq, opts ...grpc.CallOption) (*BatchEditDefaultDiscountResp, error) {
	out := new(BatchEditDefaultDiscountResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/BatchEditDefaultDiscount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) ClearDefaultDiscount(ctx context.Context, in *ClearDefaultDiscountReq, opts ...grpc.CallOption) (*ClearDefaultDiscountResp, error) {
	out := new(ClearDefaultDiscountResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/ClearDefaultDiscount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) GetDiscountRules(ctx context.Context, in *GetDiscountRulesReq, opts ...grpc.CallOption) (*GetDiscountRulesResp, error) {
	out := new(GetDiscountRulesResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/GetDiscountRules", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) InactivateDiscountRule(ctx context.Context, in *InactivateDiscountRuleReq, opts ...grpc.CallOption) (*InactivateDiscountRuleResp, error) {
	out := new(InactivateDiscountRuleResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/InactivateDiscountRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) PublishDiscountRule(ctx context.Context, in *PublishDiscountRuleReq, opts ...grpc.CallOption) (*PublishDiscountRuleResp, error) {
	out := new(PublishDiscountRuleResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/PublishDiscountRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) AddDiscountRule(ctx context.Context, in *AddDiscountRuleReq, opts ...grpc.CallOption) (*AddDiscountRuleResp, error) {
	out := new(AddDiscountRuleResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/AddDiscountRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) BatchAddDiscountRule(ctx context.Context, in *BatchAddDiscountRuleReq, opts ...grpc.CallOption) (*BatchAddDiscountRuleResp, error) {
	out := new(BatchAddDiscountRuleResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/BatchAddDiscountRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) EditDiscountRule(ctx context.Context, in *EditDiscountRuleReq, opts ...grpc.CallOption) (*EditDiscountRuleResp, error) {
	out := new(EditDiscountRuleResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/EditDiscountRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) BatchEditDiscountRulePriority(ctx context.Context, in *BatchEditDiscountRulePriorityReq, opts ...grpc.CallOption) (*BatchEditDiscountRulePriorityResp, error) {
	out := new(BatchEditDiscountRulePriorityResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/BatchEditDiscountRulePriority", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) GetDiscountRuleDetail(ctx context.Context, in *GetDiscountRuleDetailReq, opts ...grpc.CallOption) (*GetDiscountRuleDetailResp, error) {
	out := new(GetDiscountRuleDetailResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/GetDiscountRuleDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) SearchProductDiscount(ctx context.Context, in *SearchProductDiscountReq, opts ...grpc.CallOption) (*SearchProductDiscountResp, error) {
	out := new(SearchProductDiscountResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/SearchProductDiscount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) GetDiscountRulesByGroup(ctx context.Context, in *GetDiscountRulesByGroupReq, opts ...grpc.CallOption) (*GetDiscountRulesByGroupResp, error) {
	out := new(GetDiscountRulesByGroupResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/GetDiscountRulesByGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) ExportDiscountRulesByGroup(ctx context.Context, in *ExportDiscountRulesByGroupReq, opts ...grpc.CallOption) (*ExportDiscountRulesByGroupResp, error) {
	out := new(ExportDiscountRulesByGroupResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/ExportDiscountRulesByGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) GetDiscountUploadHistory(ctx context.Context, in *GetDiscountUploadHistoryReq, opts ...grpc.CallOption) (*GetDiscountUploadHistoryResp, error) {
	out := new(GetDiscountUploadHistoryResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/GetDiscountUploadHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) ExportDiscountUploadFile(ctx context.Context, in *ExportDiscountUploadFileReq, opts ...grpc.CallOption) (*ExportDiscountUploadFileResp, error) {
	out := new(ExportDiscountUploadFileResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/ExportDiscountUploadFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) GetDiscountRulesByProduct(ctx context.Context, in *GetDiscountRulesByProductReq, opts ...grpc.CallOption) (*GetDiscountRulesByProductResp, error) {
	out := new(GetDiscountRulesByProductResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/GetDiscountRulesByProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) GetAllDiscountRuleDetailByProduct(ctx context.Context, in *GetAllDiscountRuleDetailByProductReq, opts ...grpc.CallOption) (*GetAllDiscountRuleDetailByProductResp, error) {
	out := new(GetAllDiscountRuleDetailByProductResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/GetAllDiscountRuleDetailByProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) EditDefaultCashback(ctx context.Context, in *EditDefaultCashbackReq, opts ...grpc.CallOption) (*EditDefaultCashbackResp, error) {
	out := new(EditDefaultCashbackResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/EditDefaultCashback", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) ClearDefaultCashback(ctx context.Context, in *ClearDefaultCashbackReq, opts ...grpc.CallOption) (*ClearDefaultCashbackResp, error) {
	out := new(ClearDefaultCashbackResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/ClearDefaultCashback", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) GetCashbackRules(ctx context.Context, in *GetCashbackRulesReq, opts ...grpc.CallOption) (*GetCashbackRulesResp, error) {
	out := new(GetCashbackRulesResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/GetCashbackRules", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) InactivateCashbackRule(ctx context.Context, in *InactivateCashbackRuleReq, opts ...grpc.CallOption) (*InactivateCashbackRuleResp, error) {
	out := new(InactivateCashbackRuleResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/InactivateCashbackRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) AddCashbackRule(ctx context.Context, in *AddCashbackRuleReq, opts ...grpc.CallOption) (*AddCashbackRuleResp, error) {
	out := new(AddCashbackRuleResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/AddCashbackRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) EditCashbackRule(ctx context.Context, in *EditCashbackRuleReq, opts ...grpc.CallOption) (*EditCashbackRuleResp, error) {
	out := new(EditCashbackRuleResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/EditCashbackRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) PublishCashbackRule(ctx context.Context, in *PublishCashbackRuleReq, opts ...grpc.CallOption) (*PublishCashbackRuleResp, error) {
	out := new(PublishCashbackRuleResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/PublishCashbackRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) BatchEditCashbackRulePriority(ctx context.Context, in *BatchEditCashbackRulePriorityReq, opts ...grpc.CallOption) (*BatchEditCashbackRulePriorityResp, error) {
	out := new(BatchEditCashbackRulePriorityResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/BatchEditCashbackRulePriority", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) GetCashbackRuleDetail(ctx context.Context, in *GetCashbackRuleDetailReq, opts ...grpc.CallOption) (*GetCashbackRuleDetailResp, error) {
	out := new(GetCashbackRuleDetailResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/GetCashbackRuleDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) SearchProductCashbacks(ctx context.Context, in *SearchProductCashbacksReq, opts ...grpc.CallOption) (*SearchProductCashbacksResp, error) {
	out := new(SearchProductCashbacksResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/SearchProductCashbacks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) GetCashbackRulesByGroup(ctx context.Context, in *GetCashbackRulesByGroupReq, opts ...grpc.CallOption) (*GetCashbackRulesByGroupResp, error) {
	out := new(GetCashbackRulesByGroupResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/GetCashbackRulesByGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) ExportCashbackRulesByGroup(ctx context.Context, in *ExportCashbackRulesByGroupReq, opts ...grpc.CallOption) (*ExportCashbackRulesByGroupResp, error) {
	out := new(ExportCashbackRulesByGroupResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/ExportCashbackRulesByGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) GetCashbackRulesByProduct(ctx context.Context, in *GetCashbackRulesByProductReq, opts ...grpc.CallOption) (*GetCashbackRulesByProductResp, error) {
	out := new(GetCashbackRulesByProductResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/GetCashbackRulesByProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) GetAllCashbackRuleDetailByProduct(ctx context.Context, in *GetAllCashbackRuleDetailByProductReq, opts ...grpc.CallOption) (*GetAllCashbackRuleDetailByProductResp, error) {
	out := new(GetAllCashbackRuleDetailByProductResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/GetAllCashbackRuleDetailByProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) GetProductAndBonusRule(ctx context.Context, in *GetProductAndBonusRuleReq, opts ...grpc.CallOption) (*GetProductAndBonusRuleResp, error) {
	out := new(GetProductAndBonusRuleResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/GetProductAndBonusRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) EditDefaultBonusRule(ctx context.Context, in *EditDefaultBonusRuleReq, opts ...grpc.CallOption) (*EditDefaultBonusRuleResp, error) {
	out := new(EditDefaultBonusRuleResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/EditDefaultBonusRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) ClearDefaultBonusRule(ctx context.Context, in *ClearDefaultBonusRuleReq, opts ...grpc.CallOption) (*ClearDefaultBonusRuleResp, error) {
	out := new(ClearDefaultBonusRuleResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/ClearDefaultBonusRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) GetBonusRules(ctx context.Context, in *GetBonusRulesReq, opts ...grpc.CallOption) (*GetBonusRulesResp, error) {
	out := new(GetBonusRulesResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/GetBonusRules", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) AddBonusRule(ctx context.Context, in *AddBonusRuleReq, opts ...grpc.CallOption) (*AddBonusRuleResp, error) {
	out := new(AddBonusRuleResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/AddBonusRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) EditBonusRule(ctx context.Context, in *EditBonusRuleReq, opts ...grpc.CallOption) (*EditBonusRuleResp, error) {
	out := new(EditBonusRuleResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/EditBonusRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) PublishBonusRule(ctx context.Context, in *PublishBonusRuleReq, opts ...grpc.CallOption) (*PublishBonusRuleResp, error) {
	out := new(PublishBonusRuleResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/PublishBonusRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) InvalidBonusRule(ctx context.Context, in *InvalidBonusRuleReq, opts ...grpc.CallOption) (*InvalidBonusRuleResp, error) {
	out := new(InvalidBonusRuleResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/InvalidBonusRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) BatchOrderBonusRule(ctx context.Context, in *BatchOrderBonusRuleReq, opts ...grpc.CallOption) (*BatchOrderBonusRuleResp, error) {
	out := new(BatchOrderBonusRuleResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/BatchOrderBonusRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) GetBonusProducts(ctx context.Context, in *GetBonusProductsReq, opts ...grpc.CallOption) (*GetBonusProductsResp, error) {
	out := new(GetBonusProductsResp)
	err := c.cc.Invoke(ctx, "/apc.promotion.AdminService/GetBonusProducts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdminServiceServer is the server API for AdminService service.
type AdminServiceServer interface {
	//
	// commission group
	//
	// 批量获取促销规则组
	GetGroups(context.Context, *GetGroupsReq) (*GetGroupsResp, error)
	// 获取促销规则组详情
	GetGroupDetail(context.Context, *GetGroupDetailReq) (*GetGroupDetailResp, error)
	// 获取促销规则组操作日志
	GetGroupLog(context.Context, *backend.GetGroupLogsReq) (*backend.GetGroupLogsResp, error)
	// 新增促销规则组
	AddGroup(context.Context, *backend.AddGroupReq) (*backend.AddGroupResp, error)
	// 修改促销规则组
	EditGroup(context.Context, *backend.EditGroupsReq) (*backend.EditGroupsResp, error)
	//获取规则组覆盖的店铺数量
	GetAffectedStores(context.Context, *GetAffectedStoresReq) (*GetAffectedStoresResp, error)
	//获取规则组覆盖的店铺数量
	GetAffectedStoresAhead(context.Context, *GetAffectedStoresAheadReq) (*GetAffectedStoresAheadResp, error)
	//
	// discount
	//
	// 修改默认discount配置
	EditDefaultDiscount(context.Context, *EditDefaultDiscountReq) (*EditDefaultDiscountResp, error)
	// 批量修改默认discount配置
	BatchEditDefaultDiscount(context.Context, *BatchEditDefaultDiscountReq) (*BatchEditDefaultDiscountResp, error)
	// 清除默认discount配置
	ClearDefaultDiscount(context.Context, *ClearDefaultDiscountReq) (*ClearDefaultDiscountResp, error)
	// 批量获取dicount配置
	GetDiscountRules(context.Context, *GetDiscountRulesReq) (*GetDiscountRulesResp, error)
	// discount配置失效
	InactivateDiscountRule(context.Context, *InactivateDiscountRuleReq) (*InactivateDiscountRuleResp, error)
	// 使discount配置由editing变为生效
	PublishDiscountRule(context.Context, *PublishDiscountRuleReq) (*PublishDiscountRuleResp, error)
	// 添加discount规则
	AddDiscountRule(context.Context, *AddDiscountRuleReq) (*AddDiscountRuleResp, error)
	// 批量添加discount规则
	BatchAddDiscountRule(context.Context, *BatchAddDiscountRuleReq) (*BatchAddDiscountRuleResp, error)
	// 修改discount规则
	EditDiscountRule(context.Context, *EditDiscountRuleReq) (*EditDiscountRuleResp, error)
	// 批量修改discount优先级
	BatchEditDiscountRulePriority(context.Context, *BatchEditDiscountRulePriorityReq) (*BatchEditDiscountRulePriorityResp, error)
	// 获取discount详情
	GetDiscountRuleDetail(context.Context, *GetDiscountRuleDetailReq) (*GetDiscountRuleDetailResp, error)
	// 获取discount产品列表
	SearchProductDiscount(context.Context, *SearchProductDiscountReq) (*SearchProductDiscountResp, error)
	// 根据促销规则组获取discount配置列表
	GetDiscountRulesByGroup(context.Context, *GetDiscountRulesByGroupReq) (*GetDiscountRulesByGroupResp, error)
	// 根据促销规则组导出discount配置列表
	ExportDiscountRulesByGroup(context.Context, *ExportDiscountRulesByGroupReq) (*ExportDiscountRulesByGroupResp, error)
	// 获取discount上传文件历史记录
	GetDiscountUploadHistory(context.Context, *GetDiscountUploadHistoryReq) (*GetDiscountUploadHistoryResp, error)
	//导出discount上传文件
	ExportDiscountUploadFile(context.Context, *ExportDiscountUploadFileReq) (*ExportDiscountUploadFileResp, error)
	// ========= product 那边需要的接口
	// 根据product信息获取discount
	GetDiscountRulesByProduct(context.Context, *GetDiscountRulesByProductReq) (*GetDiscountRulesByProductResp, error)
	// 根据product信息获取discount详细列表
	GetAllDiscountRuleDetailByProduct(context.Context, *GetAllDiscountRuleDetailByProductReq) (*GetAllDiscountRuleDetailByProductResp, error)
	//
	// cashback
	//
	// 修改默认cashback
	EditDefaultCashback(context.Context, *EditDefaultCashbackReq) (*EditDefaultCashbackResp, error)
	// 清除默认cashback
	ClearDefaultCashback(context.Context, *ClearDefaultCashbackReq) (*ClearDefaultCashbackResp, error)
	// 批量获取cashback
	GetCashbackRules(context.Context, *GetCashbackRulesReq) (*GetCashbackRulesResp, error)
	// cashback失效
	InactivateCashbackRule(context.Context, *InactivateCashbackRuleReq) (*InactivateCashbackRuleResp, error)
	// 新增cashback
	AddCashbackRule(context.Context, *AddCashbackRuleReq) (*AddCashbackRuleResp, error)
	// 修改cashback
	EditCashbackRule(context.Context, *EditCashbackRuleReq) (*EditCashbackRuleResp, error)
	// 发布cashback
	PublishCashbackRule(context.Context, *PublishCashbackRuleReq) (*PublishCashbackRuleResp, error)
	// 批量修改cashback优先级
	BatchEditCashbackRulePriority(context.Context, *BatchEditCashbackRulePriorityReq) (*BatchEditCashbackRulePriorityResp, error)
	// 获取cashback详情
	GetCashbackRuleDetail(context.Context, *GetCashbackRuleDetailReq) (*GetCashbackRuleDetailResp, error)
	// 获取cashback产品列表
	SearchProductCashbacks(context.Context, *SearchProductCashbacksReq) (*SearchProductCashbacksResp, error)
	// 根据促销规则组获取cashback列表
	GetCashbackRulesByGroup(context.Context, *GetCashbackRulesByGroupReq) (*GetCashbackRulesByGroupResp, error)
	// 根据促销规则组导出cashback列表
	ExportCashbackRulesByGroup(context.Context, *ExportCashbackRulesByGroupReq) (*ExportCashbackRulesByGroupResp, error)
	// ===== product 那边需要的接口
	// 根据product获取cashback
	GetCashbackRulesByProduct(context.Context, *GetCashbackRulesByProductReq) (*GetCashbackRulesByProductResp, error)
	// 根据product获取cashback详情
	GetAllCashbackRuleDetailByProduct(context.Context, *GetAllCashbackRuleDetailByProductReq) (*GetAllCashbackRuleDetailByProductResp, error)
	//
	// bonus
	//
	GetProductAndBonusRule(context.Context, *GetProductAndBonusRuleReq) (*GetProductAndBonusRuleResp, error)
	EditDefaultBonusRule(context.Context, *EditDefaultBonusRuleReq) (*EditDefaultBonusRuleResp, error)
	ClearDefaultBonusRule(context.Context, *ClearDefaultBonusRuleReq) (*ClearDefaultBonusRuleResp, error)
	GetBonusRules(context.Context, *GetBonusRulesReq) (*GetBonusRulesResp, error)
	AddBonusRule(context.Context, *AddBonusRuleReq) (*AddBonusRuleResp, error)
	EditBonusRule(context.Context, *EditBonusRuleReq) (*EditBonusRuleResp, error)
	PublishBonusRule(context.Context, *PublishBonusRuleReq) (*PublishBonusRuleResp, error)
	InvalidBonusRule(context.Context, *InvalidBonusRuleReq) (*InvalidBonusRuleResp, error)
	BatchOrderBonusRule(context.Context, *BatchOrderBonusRuleReq) (*BatchOrderBonusRuleResp, error)
	GetBonusProducts(context.Context, *GetBonusProductsReq) (*GetBonusProductsResp, error)
}

// UnimplementedAdminServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAdminServiceServer struct {
}

func (*UnimplementedAdminServiceServer) GetGroups(context.Context, *GetGroupsReq) (*GetGroupsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGroups not implemented")
}
func (*UnimplementedAdminServiceServer) GetGroupDetail(context.Context, *GetGroupDetailReq) (*GetGroupDetailResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGroupDetail not implemented")
}
func (*UnimplementedAdminServiceServer) GetGroupLog(context.Context, *backend.GetGroupLogsReq) (*backend.GetGroupLogsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGroupLog not implemented")
}
func (*UnimplementedAdminServiceServer) AddGroup(context.Context, *backend.AddGroupReq) (*backend.AddGroupResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddGroup not implemented")
}
func (*UnimplementedAdminServiceServer) EditGroup(context.Context, *backend.EditGroupsReq) (*backend.EditGroupsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditGroup not implemented")
}
func (*UnimplementedAdminServiceServer) GetAffectedStores(context.Context, *GetAffectedStoresReq) (*GetAffectedStoresResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAffectedStores not implemented")
}
func (*UnimplementedAdminServiceServer) GetAffectedStoresAhead(context.Context, *GetAffectedStoresAheadReq) (*GetAffectedStoresAheadResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAffectedStoresAhead not implemented")
}
func (*UnimplementedAdminServiceServer) EditDefaultDiscount(context.Context, *EditDefaultDiscountReq) (*EditDefaultDiscountResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditDefaultDiscount not implemented")
}
func (*UnimplementedAdminServiceServer) BatchEditDefaultDiscount(context.Context, *BatchEditDefaultDiscountReq) (*BatchEditDefaultDiscountResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BatchEditDefaultDiscount not implemented")
}
func (*UnimplementedAdminServiceServer) ClearDefaultDiscount(context.Context, *ClearDefaultDiscountReq) (*ClearDefaultDiscountResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClearDefaultDiscount not implemented")
}
func (*UnimplementedAdminServiceServer) GetDiscountRules(context.Context, *GetDiscountRulesReq) (*GetDiscountRulesResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDiscountRules not implemented")
}
func (*UnimplementedAdminServiceServer) InactivateDiscountRule(context.Context, *InactivateDiscountRuleReq) (*InactivateDiscountRuleResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InactivateDiscountRule not implemented")
}
func (*UnimplementedAdminServiceServer) PublishDiscountRule(context.Context, *PublishDiscountRuleReq) (*PublishDiscountRuleResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PublishDiscountRule not implemented")
}
func (*UnimplementedAdminServiceServer) AddDiscountRule(context.Context, *AddDiscountRuleReq) (*AddDiscountRuleResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddDiscountRule not implemented")
}
func (*UnimplementedAdminServiceServer) BatchAddDiscountRule(context.Context, *BatchAddDiscountRuleReq) (*BatchAddDiscountRuleResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BatchAddDiscountRule not implemented")
}
func (*UnimplementedAdminServiceServer) EditDiscountRule(context.Context, *EditDiscountRuleReq) (*EditDiscountRuleResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditDiscountRule not implemented")
}
func (*UnimplementedAdminServiceServer) BatchEditDiscountRulePriority(context.Context, *BatchEditDiscountRulePriorityReq) (*BatchEditDiscountRulePriorityResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BatchEditDiscountRulePriority not implemented")
}
func (*UnimplementedAdminServiceServer) GetDiscountRuleDetail(context.Context, *GetDiscountRuleDetailReq) (*GetDiscountRuleDetailResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDiscountRuleDetail not implemented")
}
func (*UnimplementedAdminServiceServer) SearchProductDiscount(context.Context, *SearchProductDiscountReq) (*SearchProductDiscountResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchProductDiscount not implemented")
}
func (*UnimplementedAdminServiceServer) GetDiscountRulesByGroup(context.Context, *GetDiscountRulesByGroupReq) (*GetDiscountRulesByGroupResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDiscountRulesByGroup not implemented")
}
func (*UnimplementedAdminServiceServer) ExportDiscountRulesByGroup(context.Context, *ExportDiscountRulesByGroupReq) (*ExportDiscountRulesByGroupResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExportDiscountRulesByGroup not implemented")
}
func (*UnimplementedAdminServiceServer) GetDiscountUploadHistory(context.Context, *GetDiscountUploadHistoryReq) (*GetDiscountUploadHistoryResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDiscountUploadHistory not implemented")
}
func (*UnimplementedAdminServiceServer) ExportDiscountUploadFile(context.Context, *ExportDiscountUploadFileReq) (*ExportDiscountUploadFileResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExportDiscountUploadFile not implemented")
}
func (*UnimplementedAdminServiceServer) GetDiscountRulesByProduct(context.Context, *GetDiscountRulesByProductReq) (*GetDiscountRulesByProductResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDiscountRulesByProduct not implemented")
}
func (*UnimplementedAdminServiceServer) GetAllDiscountRuleDetailByProduct(context.Context, *GetAllDiscountRuleDetailByProductReq) (*GetAllDiscountRuleDetailByProductResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllDiscountRuleDetailByProduct not implemented")
}
func (*UnimplementedAdminServiceServer) EditDefaultCashback(context.Context, *EditDefaultCashbackReq) (*EditDefaultCashbackResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditDefaultCashback not implemented")
}
func (*UnimplementedAdminServiceServer) ClearDefaultCashback(context.Context, *ClearDefaultCashbackReq) (*ClearDefaultCashbackResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClearDefaultCashback not implemented")
}
func (*UnimplementedAdminServiceServer) GetCashbackRules(context.Context, *GetCashbackRulesReq) (*GetCashbackRulesResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCashbackRules not implemented")
}
func (*UnimplementedAdminServiceServer) InactivateCashbackRule(context.Context, *InactivateCashbackRuleReq) (*InactivateCashbackRuleResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InactivateCashbackRule not implemented")
}
func (*UnimplementedAdminServiceServer) AddCashbackRule(context.Context, *AddCashbackRuleReq) (*AddCashbackRuleResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddCashbackRule not implemented")
}
func (*UnimplementedAdminServiceServer) EditCashbackRule(context.Context, *EditCashbackRuleReq) (*EditCashbackRuleResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditCashbackRule not implemented")
}
func (*UnimplementedAdminServiceServer) PublishCashbackRule(context.Context, *PublishCashbackRuleReq) (*PublishCashbackRuleResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PublishCashbackRule not implemented")
}
func (*UnimplementedAdminServiceServer) BatchEditCashbackRulePriority(context.Context, *BatchEditCashbackRulePriorityReq) (*BatchEditCashbackRulePriorityResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BatchEditCashbackRulePriority not implemented")
}
func (*UnimplementedAdminServiceServer) GetCashbackRuleDetail(context.Context, *GetCashbackRuleDetailReq) (*GetCashbackRuleDetailResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCashbackRuleDetail not implemented")
}
func (*UnimplementedAdminServiceServer) SearchProductCashbacks(context.Context, *SearchProductCashbacksReq) (*SearchProductCashbacksResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchProductCashbacks not implemented")
}
func (*UnimplementedAdminServiceServer) GetCashbackRulesByGroup(context.Context, *GetCashbackRulesByGroupReq) (*GetCashbackRulesByGroupResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCashbackRulesByGroup not implemented")
}
func (*UnimplementedAdminServiceServer) ExportCashbackRulesByGroup(context.Context, *ExportCashbackRulesByGroupReq) (*ExportCashbackRulesByGroupResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExportCashbackRulesByGroup not implemented")
}
func (*UnimplementedAdminServiceServer) GetCashbackRulesByProduct(context.Context, *GetCashbackRulesByProductReq) (*GetCashbackRulesByProductResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCashbackRulesByProduct not implemented")
}
func (*UnimplementedAdminServiceServer) GetAllCashbackRuleDetailByProduct(context.Context, *GetAllCashbackRuleDetailByProductReq) (*GetAllCashbackRuleDetailByProductResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllCashbackRuleDetailByProduct not implemented")
}
func (*UnimplementedAdminServiceServer) GetProductAndBonusRule(context.Context, *GetProductAndBonusRuleReq) (*GetProductAndBonusRuleResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProductAndBonusRule not implemented")
}
func (*UnimplementedAdminServiceServer) EditDefaultBonusRule(context.Context, *EditDefaultBonusRuleReq) (*EditDefaultBonusRuleResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditDefaultBonusRule not implemented")
}
func (*UnimplementedAdminServiceServer) ClearDefaultBonusRule(context.Context, *ClearDefaultBonusRuleReq) (*ClearDefaultBonusRuleResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClearDefaultBonusRule not implemented")
}
func (*UnimplementedAdminServiceServer) GetBonusRules(context.Context, *GetBonusRulesReq) (*GetBonusRulesResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBonusRules not implemented")
}
func (*UnimplementedAdminServiceServer) AddBonusRule(context.Context, *AddBonusRuleReq) (*AddBonusRuleResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddBonusRule not implemented")
}
func (*UnimplementedAdminServiceServer) EditBonusRule(context.Context, *EditBonusRuleReq) (*EditBonusRuleResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditBonusRule not implemented")
}
func (*UnimplementedAdminServiceServer) PublishBonusRule(context.Context, *PublishBonusRuleReq) (*PublishBonusRuleResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PublishBonusRule not implemented")
}
func (*UnimplementedAdminServiceServer) InvalidBonusRule(context.Context, *InvalidBonusRuleReq) (*InvalidBonusRuleResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InvalidBonusRule not implemented")
}
func (*UnimplementedAdminServiceServer) BatchOrderBonusRule(context.Context, *BatchOrderBonusRuleReq) (*BatchOrderBonusRuleResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BatchOrderBonusRule not implemented")
}
func (*UnimplementedAdminServiceServer) GetBonusProducts(context.Context, *GetBonusProductsReq) (*GetBonusProductsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBonusProducts not implemented")
}

func RegisterAdminServiceServer(s *grpc.Server, srv AdminServiceServer) {
	s.RegisterService(&_AdminService_serviceDesc, srv)
}

func _AdminService_GetGroups_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGroupsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).GetGroups(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/GetGroups",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).GetGroups(ctx, req.(*GetGroupsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_GetGroupDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGroupDetailReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).GetGroupDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/GetGroupDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).GetGroupDetail(ctx, req.(*GetGroupDetailReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_GetGroupLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(backend.GetGroupLogsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).GetGroupLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/GetGroupLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).GetGroupLog(ctx, req.(*backend.GetGroupLogsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_AddGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(backend.AddGroupReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).AddGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/AddGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).AddGroup(ctx, req.(*backend.AddGroupReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_EditGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(backend.EditGroupsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).EditGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/EditGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).EditGroup(ctx, req.(*backend.EditGroupsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_GetAffectedStores_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAffectedStoresReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).GetAffectedStores(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/GetAffectedStores",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).GetAffectedStores(ctx, req.(*GetAffectedStoresReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_GetAffectedStoresAhead_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAffectedStoresAheadReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).GetAffectedStoresAhead(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/GetAffectedStoresAhead",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).GetAffectedStoresAhead(ctx, req.(*GetAffectedStoresAheadReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_EditDefaultDiscount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditDefaultDiscountReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).EditDefaultDiscount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/EditDefaultDiscount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).EditDefaultDiscount(ctx, req.(*EditDefaultDiscountReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_BatchEditDefaultDiscount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchEditDefaultDiscountReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).BatchEditDefaultDiscount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/BatchEditDefaultDiscount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).BatchEditDefaultDiscount(ctx, req.(*BatchEditDefaultDiscountReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_ClearDefaultDiscount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClearDefaultDiscountReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).ClearDefaultDiscount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/ClearDefaultDiscount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).ClearDefaultDiscount(ctx, req.(*ClearDefaultDiscountReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_GetDiscountRules_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDiscountRulesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).GetDiscountRules(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/GetDiscountRules",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).GetDiscountRules(ctx, req.(*GetDiscountRulesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_InactivateDiscountRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InactivateDiscountRuleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).InactivateDiscountRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/InactivateDiscountRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).InactivateDiscountRule(ctx, req.(*InactivateDiscountRuleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_PublishDiscountRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishDiscountRuleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).PublishDiscountRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/PublishDiscountRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).PublishDiscountRule(ctx, req.(*PublishDiscountRuleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_AddDiscountRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddDiscountRuleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).AddDiscountRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/AddDiscountRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).AddDiscountRule(ctx, req.(*AddDiscountRuleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_BatchAddDiscountRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchAddDiscountRuleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).BatchAddDiscountRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/BatchAddDiscountRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).BatchAddDiscountRule(ctx, req.(*BatchAddDiscountRuleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_EditDiscountRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditDiscountRuleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).EditDiscountRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/EditDiscountRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).EditDiscountRule(ctx, req.(*EditDiscountRuleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_BatchEditDiscountRulePriority_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchEditDiscountRulePriorityReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).BatchEditDiscountRulePriority(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/BatchEditDiscountRulePriority",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).BatchEditDiscountRulePriority(ctx, req.(*BatchEditDiscountRulePriorityReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_GetDiscountRuleDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDiscountRuleDetailReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).GetDiscountRuleDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/GetDiscountRuleDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).GetDiscountRuleDetail(ctx, req.(*GetDiscountRuleDetailReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_SearchProductDiscount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchProductDiscountReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).SearchProductDiscount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/SearchProductDiscount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).SearchProductDiscount(ctx, req.(*SearchProductDiscountReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_GetDiscountRulesByGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDiscountRulesByGroupReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).GetDiscountRulesByGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/GetDiscountRulesByGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).GetDiscountRulesByGroup(ctx, req.(*GetDiscountRulesByGroupReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_ExportDiscountRulesByGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExportDiscountRulesByGroupReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).ExportDiscountRulesByGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/ExportDiscountRulesByGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).ExportDiscountRulesByGroup(ctx, req.(*ExportDiscountRulesByGroupReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_GetDiscountUploadHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDiscountUploadHistoryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).GetDiscountUploadHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/GetDiscountUploadHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).GetDiscountUploadHistory(ctx, req.(*GetDiscountUploadHistoryReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_ExportDiscountUploadFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExportDiscountUploadFileReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).ExportDiscountUploadFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/ExportDiscountUploadFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).ExportDiscountUploadFile(ctx, req.(*ExportDiscountUploadFileReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_GetDiscountRulesByProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDiscountRulesByProductReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).GetDiscountRulesByProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/GetDiscountRulesByProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).GetDiscountRulesByProduct(ctx, req.(*GetDiscountRulesByProductReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_GetAllDiscountRuleDetailByProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllDiscountRuleDetailByProductReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).GetAllDiscountRuleDetailByProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/GetAllDiscountRuleDetailByProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).GetAllDiscountRuleDetailByProduct(ctx, req.(*GetAllDiscountRuleDetailByProductReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_EditDefaultCashback_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditDefaultCashbackReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).EditDefaultCashback(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/EditDefaultCashback",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).EditDefaultCashback(ctx, req.(*EditDefaultCashbackReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_ClearDefaultCashback_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClearDefaultCashbackReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).ClearDefaultCashback(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/ClearDefaultCashback",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).ClearDefaultCashback(ctx, req.(*ClearDefaultCashbackReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_GetCashbackRules_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCashbackRulesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).GetCashbackRules(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/GetCashbackRules",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).GetCashbackRules(ctx, req.(*GetCashbackRulesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_InactivateCashbackRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InactivateCashbackRuleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).InactivateCashbackRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/InactivateCashbackRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).InactivateCashbackRule(ctx, req.(*InactivateCashbackRuleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_AddCashbackRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddCashbackRuleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).AddCashbackRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/AddCashbackRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).AddCashbackRule(ctx, req.(*AddCashbackRuleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_EditCashbackRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditCashbackRuleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).EditCashbackRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/EditCashbackRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).EditCashbackRule(ctx, req.(*EditCashbackRuleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_PublishCashbackRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishCashbackRuleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).PublishCashbackRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/PublishCashbackRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).PublishCashbackRule(ctx, req.(*PublishCashbackRuleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_BatchEditCashbackRulePriority_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchEditCashbackRulePriorityReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).BatchEditCashbackRulePriority(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/BatchEditCashbackRulePriority",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).BatchEditCashbackRulePriority(ctx, req.(*BatchEditCashbackRulePriorityReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_GetCashbackRuleDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCashbackRuleDetailReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).GetCashbackRuleDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/GetCashbackRuleDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).GetCashbackRuleDetail(ctx, req.(*GetCashbackRuleDetailReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_SearchProductCashbacks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchProductCashbacksReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).SearchProductCashbacks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/SearchProductCashbacks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).SearchProductCashbacks(ctx, req.(*SearchProductCashbacksReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_GetCashbackRulesByGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCashbackRulesByGroupReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).GetCashbackRulesByGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/GetCashbackRulesByGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).GetCashbackRulesByGroup(ctx, req.(*GetCashbackRulesByGroupReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_ExportCashbackRulesByGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExportCashbackRulesByGroupReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).ExportCashbackRulesByGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/ExportCashbackRulesByGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).ExportCashbackRulesByGroup(ctx, req.(*ExportCashbackRulesByGroupReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_GetCashbackRulesByProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCashbackRulesByProductReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).GetCashbackRulesByProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/GetCashbackRulesByProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).GetCashbackRulesByProduct(ctx, req.(*GetCashbackRulesByProductReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_GetAllCashbackRuleDetailByProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllCashbackRuleDetailByProductReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).GetAllCashbackRuleDetailByProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/GetAllCashbackRuleDetailByProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).GetAllCashbackRuleDetailByProduct(ctx, req.(*GetAllCashbackRuleDetailByProductReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_GetProductAndBonusRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProductAndBonusRuleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).GetProductAndBonusRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/GetProductAndBonusRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).GetProductAndBonusRule(ctx, req.(*GetProductAndBonusRuleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_EditDefaultBonusRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditDefaultBonusRuleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).EditDefaultBonusRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/EditDefaultBonusRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).EditDefaultBonusRule(ctx, req.(*EditDefaultBonusRuleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_ClearDefaultBonusRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClearDefaultBonusRuleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).ClearDefaultBonusRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/ClearDefaultBonusRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).ClearDefaultBonusRule(ctx, req.(*ClearDefaultBonusRuleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_GetBonusRules_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBonusRulesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).GetBonusRules(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/GetBonusRules",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).GetBonusRules(ctx, req.(*GetBonusRulesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_AddBonusRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddBonusRuleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).AddBonusRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/AddBonusRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).AddBonusRule(ctx, req.(*AddBonusRuleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_EditBonusRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditBonusRuleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).EditBonusRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/EditBonusRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).EditBonusRule(ctx, req.(*EditBonusRuleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_PublishBonusRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishBonusRuleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).PublishBonusRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/PublishBonusRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).PublishBonusRule(ctx, req.(*PublishBonusRuleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_InvalidBonusRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InvalidBonusRuleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).InvalidBonusRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/InvalidBonusRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).InvalidBonusRule(ctx, req.(*InvalidBonusRuleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_BatchOrderBonusRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchOrderBonusRuleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).BatchOrderBonusRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/BatchOrderBonusRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).BatchOrderBonusRule(ctx, req.(*BatchOrderBonusRuleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_GetBonusProducts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBonusProductsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).GetBonusProducts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apc.promotion.AdminService/GetBonusProducts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).GetBonusProducts(ctx, req.(*GetBonusProductsReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _AdminService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "apc.promotion.AdminService",
	HandlerType: (*AdminServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetGroups",
			Handler:    _AdminService_GetGroups_Handler,
		},
		{
			MethodName: "GetGroupDetail",
			Handler:    _AdminService_GetGroupDetail_Handler,
		},
		{
			MethodName: "GetGroupLog",
			Handler:    _AdminService_GetGroupLog_Handler,
		},
		{
			MethodName: "AddGroup",
			Handler:    _AdminService_AddGroup_Handler,
		},
		{
			MethodName: "EditGroup",
			Handler:    _AdminService_EditGroup_Handler,
		},
		{
			MethodName: "GetAffectedStores",
			Handler:    _AdminService_GetAffectedStores_Handler,
		},
		{
			MethodName: "GetAffectedStoresAhead",
			Handler:    _AdminService_GetAffectedStoresAhead_Handler,
		},
		{
			MethodName: "EditDefaultDiscount",
			Handler:    _AdminService_EditDefaultDiscount_Handler,
		},
		{
			MethodName: "BatchEditDefaultDiscount",
			Handler:    _AdminService_BatchEditDefaultDiscount_Handler,
		},
		{
			MethodName: "ClearDefaultDiscount",
			Handler:    _AdminService_ClearDefaultDiscount_Handler,
		},
		{
			MethodName: "GetDiscountRules",
			Handler:    _AdminService_GetDiscountRules_Handler,
		},
		{
			MethodName: "InactivateDiscountRule",
			Handler:    _AdminService_InactivateDiscountRule_Handler,
		},
		{
			MethodName: "PublishDiscountRule",
			Handler:    _AdminService_PublishDiscountRule_Handler,
		},
		{
			MethodName: "AddDiscountRule",
			Handler:    _AdminService_AddDiscountRule_Handler,
		},
		{
			MethodName: "BatchAddDiscountRule",
			Handler:    _AdminService_BatchAddDiscountRule_Handler,
		},
		{
			MethodName: "EditDiscountRule",
			Handler:    _AdminService_EditDiscountRule_Handler,
		},
		{
			MethodName: "BatchEditDiscountRulePriority",
			Handler:    _AdminService_BatchEditDiscountRulePriority_Handler,
		},
		{
			MethodName: "GetDiscountRuleDetail",
			Handler:    _AdminService_GetDiscountRuleDetail_Handler,
		},
		{
			MethodName: "SearchProductDiscount",
			Handler:    _AdminService_SearchProductDiscount_Handler,
		},
		{
			MethodName: "GetDiscountRulesByGroup",
			Handler:    _AdminService_GetDiscountRulesByGroup_Handler,
		},
		{
			MethodName: "ExportDiscountRulesByGroup",
			Handler:    _AdminService_ExportDiscountRulesByGroup_Handler,
		},
		{
			MethodName: "GetDiscountUploadHistory",
			Handler:    _AdminService_GetDiscountUploadHistory_Handler,
		},
		{
			MethodName: "ExportDiscountUploadFile",
			Handler:    _AdminService_ExportDiscountUploadFile_Handler,
		},
		{
			MethodName: "GetDiscountRulesByProduct",
			Handler:    _AdminService_GetDiscountRulesByProduct_Handler,
		},
		{
			MethodName: "GetAllDiscountRuleDetailByProduct",
			Handler:    _AdminService_GetAllDiscountRuleDetailByProduct_Handler,
		},
		{
			MethodName: "EditDefaultCashback",
			Handler:    _AdminService_EditDefaultCashback_Handler,
		},
		{
			MethodName: "ClearDefaultCashback",
			Handler:    _AdminService_ClearDefaultCashback_Handler,
		},
		{
			MethodName: "GetCashbackRules",
			Handler:    _AdminService_GetCashbackRules_Handler,
		},
		{
			MethodName: "InactivateCashbackRule",
			Handler:    _AdminService_InactivateCashbackRule_Handler,
		},
		{
			MethodName: "AddCashbackRule",
			Handler:    _AdminService_AddCashbackRule_Handler,
		},
		{
			MethodName: "EditCashbackRule",
			Handler:    _AdminService_EditCashbackRule_Handler,
		},
		{
			MethodName: "PublishCashbackRule",
			Handler:    _AdminService_PublishCashbackRule_Handler,
		},
		{
			MethodName: "BatchEditCashbackRulePriority",
			Handler:    _AdminService_BatchEditCashbackRulePriority_Handler,
		},
		{
			MethodName: "GetCashbackRuleDetail",
			Handler:    _AdminService_GetCashbackRuleDetail_Handler,
		},
		{
			MethodName: "SearchProductCashbacks",
			Handler:    _AdminService_SearchProductCashbacks_Handler,
		},
		{
			MethodName: "GetCashbackRulesByGroup",
			Handler:    _AdminService_GetCashbackRulesByGroup_Handler,
		},
		{
			MethodName: "ExportCashbackRulesByGroup",
			Handler:    _AdminService_ExportCashbackRulesByGroup_Handler,
		},
		{
			MethodName: "GetCashbackRulesByProduct",
			Handler:    _AdminService_GetCashbackRulesByProduct_Handler,
		},
		{
			MethodName: "GetAllCashbackRuleDetailByProduct",
			Handler:    _AdminService_GetAllCashbackRuleDetailByProduct_Handler,
		},
		{
			MethodName: "GetProductAndBonusRule",
			Handler:    _AdminService_GetProductAndBonusRule_Handler,
		},
		{
			MethodName: "EditDefaultBonusRule",
			Handler:    _AdminService_EditDefaultBonusRule_Handler,
		},
		{
			MethodName: "ClearDefaultBonusRule",
			Handler:    _AdminService_ClearDefaultBonusRule_Handler,
		},
		{
			MethodName: "GetBonusRules",
			Handler:    _AdminService_GetBonusRules_Handler,
		},
		{
			MethodName: "AddBonusRule",
			Handler:    _AdminService_AddBonusRule_Handler,
		},
		{
			MethodName: "EditBonusRule",
			Handler:    _AdminService_EditBonusRule_Handler,
		},
		{
			MethodName: "PublishBonusRule",
			Handler:    _AdminService_PublishBonusRule_Handler,
		},
		{
			MethodName: "InvalidBonusRule",
			Handler:    _AdminService_InvalidBonusRule_Handler,
		},
		{
			MethodName: "BatchOrderBonusRule",
			Handler:    _AdminService_BatchOrderBonusRule_Handler,
		},
		{
			MethodName: "GetBonusProducts",
			Handler:    _AdminService_GetBonusProducts_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "admin/promotion.proto",
}
