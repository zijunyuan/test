//
//@Time : 2020-02-25 17:05
//@Author : siminliao

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.3
// source: common/promotion.proto

package common

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type UserRange int32

const (
	UserRange_USER_RANGE_NONE UserRange = 0
	UserRange_USER_RANGE_ALL  UserRange = 1
	UserRange_USER_RANGE_PART UserRange = 2
)

// Enum value maps for UserRange.
var (
	UserRange_name = map[int32]string{
		0: "USER_RANGE_NONE",
		1: "USER_RANGE_ALL",
		2: "USER_RANGE_PART",
	}
	UserRange_value = map[string]int32{
		"USER_RANGE_NONE": 0,
		"USER_RANGE_ALL":  1,
		"USER_RANGE_PART": 2,
	}
)

func (x UserRange) Enum() *UserRange {
	p := new(UserRange)
	*p = x
	return p
}

func (x UserRange) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserRange) Descriptor() protoreflect.EnumDescriptor {
	return file_common_promotion_proto_enumTypes[0].Descriptor()
}

func (UserRange) Type() protoreflect.EnumType {
	return &file_common_promotion_proto_enumTypes[0]
}

func (x UserRange) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserRange.Descriptor instead.
func (UserRange) EnumDescriptor() ([]byte, []int) {
	return file_common_promotion_proto_rawDescGZIP(), []int{0}
}

type TimeOrder int32

const (
	TimeOrder_TIME_ORDER_NONE TimeOrder = 0
	TimeOrder_TIME_ORDER_ASC  TimeOrder = 1
	TimeOrder_TIME_ORDER_DESC TimeOrder = 2
)

// Enum value maps for TimeOrder.
var (
	TimeOrder_name = map[int32]string{
		0: "TIME_ORDER_NONE",
		1: "TIME_ORDER_ASC",
		2: "TIME_ORDER_DESC",
	}
	TimeOrder_value = map[string]int32{
		"TIME_ORDER_NONE": 0,
		"TIME_ORDER_ASC":  1,
		"TIME_ORDER_DESC": 2,
	}
)

func (x TimeOrder) Enum() *TimeOrder {
	p := new(TimeOrder)
	*p = x
	return p
}

func (x TimeOrder) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimeOrder) Descriptor() protoreflect.EnumDescriptor {
	return file_common_promotion_proto_enumTypes[1].Descriptor()
}

func (TimeOrder) Type() protoreflect.EnumType {
	return &file_common_promotion_proto_enumTypes[1]
}

func (x TimeOrder) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimeOrder.Descriptor instead.
func (TimeOrder) EnumDescriptor() ([]byte, []int) {
	return file_common_promotion_proto_rawDescGZIP(), []int{1}
}

type DiscountRule_Status int32

const (
	DiscountRule_S_NONE      DiscountRule_Status = 0
	DiscountRule_S_ACTIVE    DiscountRule_Status = 1
	DiscountRule_S_WAITING   DiscountRule_Status = 2
	DiscountRule_S_EXPIRED   DiscountRule_Status = 3
	DiscountRule_S_INACTIVED DiscountRule_Status = 4
	DiscountRule_S_EDITING   DiscountRule_Status = 5
)

// Enum value maps for DiscountRule_Status.
var (
	DiscountRule_Status_name = map[int32]string{
		0: "S_NONE",
		1: "S_ACTIVE",
		2: "S_WAITING",
		3: "S_EXPIRED",
		4: "S_INACTIVED",
		5: "S_EDITING",
	}
	DiscountRule_Status_value = map[string]int32{
		"S_NONE":      0,
		"S_ACTIVE":    1,
		"S_WAITING":   2,
		"S_EXPIRED":   3,
		"S_INACTIVED": 4,
		"S_EDITING":   5,
	}
)

func (x DiscountRule_Status) Enum() *DiscountRule_Status {
	p := new(DiscountRule_Status)
	*p = x
	return p
}

func (x DiscountRule_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DiscountRule_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_common_promotion_proto_enumTypes[2].Descriptor()
}

func (DiscountRule_Status) Type() protoreflect.EnumType {
	return &file_common_promotion_proto_enumTypes[2]
}

func (x DiscountRule_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DiscountRule_Status.Descriptor instead.
func (DiscountRule_Status) EnumDescriptor() ([]byte, []int) {
	return file_common_promotion_proto_rawDescGZIP(), []int{0, 0}
}

type CashbackRule_Mode int32

const (
	CashbackRule_M_NONE       CashbackRule_Mode = 0
	CashbackRule_M_FIXED      CashbackRule_Mode = 1
	CashbackRule_M_PERCENTAGE CashbackRule_Mode = 2
	CashbackRule_M_RANGE      CashbackRule_Mode = 3
)

// Enum value maps for CashbackRule_Mode.
var (
	CashbackRule_Mode_name = map[int32]string{
		0: "M_NONE",
		1: "M_FIXED",
		2: "M_PERCENTAGE",
		3: "M_RANGE",
	}
	CashbackRule_Mode_value = map[string]int32{
		"M_NONE":       0,
		"M_FIXED":      1,
		"M_PERCENTAGE": 2,
		"M_RANGE":      3,
	}
)

func (x CashbackRule_Mode) Enum() *CashbackRule_Mode {
	p := new(CashbackRule_Mode)
	*p = x
	return p
}

func (x CashbackRule_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CashbackRule_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_common_promotion_proto_enumTypes[3].Descriptor()
}

func (CashbackRule_Mode) Type() protoreflect.EnumType {
	return &file_common_promotion_proto_enumTypes[3]
}

func (x CashbackRule_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CashbackRule_Mode.Descriptor instead.
func (CashbackRule_Mode) EnumDescriptor() ([]byte, []int) {
	return file_common_promotion_proto_rawDescGZIP(), []int{4, 0}
}

type BonusRule_Mode int32

const (
	BonusRule_MODE_NONE       BonusRule_Mode = 0
	BonusRule_MODE_PERCENTAGE BonusRule_Mode = 1
	BonusRule_MODE_PRODUCT    BonusRule_Mode = 2
)

// Enum value maps for BonusRule_Mode.
var (
	BonusRule_Mode_name = map[int32]string{
		0: "MODE_NONE",
		1: "MODE_PERCENTAGE",
		2: "MODE_PRODUCT",
	}
	BonusRule_Mode_value = map[string]int32{
		"MODE_NONE":       0,
		"MODE_PERCENTAGE": 1,
		"MODE_PRODUCT":    2,
	}
)

func (x BonusRule_Mode) Enum() *BonusRule_Mode {
	p := new(BonusRule_Mode)
	*p = x
	return p
}

func (x BonusRule_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BonusRule_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_common_promotion_proto_enumTypes[4].Descriptor()
}

func (BonusRule_Mode) Type() protoreflect.EnumType {
	return &file_common_promotion_proto_enumTypes[4]
}

func (x BonusRule_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BonusRule_Mode.Descriptor instead.
func (BonusRule_Mode) EnumDescriptor() ([]byte, []int) {
	return file_common_promotion_proto_rawDescGZIP(), []int{5, 0}
}

type DiscountRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiscountId    uint32   `protobuf:"varint,1,opt,name=discount_id,json=discountId,proto3" json:"discount_id,omitempty"`
	ProductId     uint32   `protobuf:"varint,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	DiscountPrice int64    `protobuf:"varint,3,opt,name=discount_price,json=discountPrice,proto3" json:"discount_price,omitempty"`
	ValidFrom     uint32   `protobuf:"varint,4,opt,name=valid_from,json=validFrom,proto3" json:"valid_from,omitempty"`
	ValidTo       uint32   `protobuf:"varint,5,opt,name=valid_to,json=validTo,proto3" json:"valid_to,omitempty"`
	Status        uint32   `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"` // Status
	Priority      uint32   `protobuf:"varint,7,opt,name=priority,proto3" json:"priority,omitempty"`
	GroupIds      []uint32 `protobuf:"varint,8,rep,packed,name=group_ids,json=groupIds,proto3" json:"group_ids,omitempty"`
	DefaultRule   bool     `protobuf:"varint,9,opt,name=default_rule,json=defaultRule,proto3" json:"default_rule,omitempty"`
}

func (x *DiscountRule) Reset() {
	*x = DiscountRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_promotion_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscountRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscountRule) ProtoMessage() {}

func (x *DiscountRule) ProtoReflect() protoreflect.Message {
	mi := &file_common_promotion_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscountRule.ProtoReflect.Descriptor instead.
func (*DiscountRule) Descriptor() ([]byte, []int) {
	return file_common_promotion_proto_rawDescGZIP(), []int{0}
}

func (x *DiscountRule) GetDiscountId() uint32 {
	if x != nil {
		return x.DiscountId
	}
	return 0
}

func (x *DiscountRule) GetProductId() uint32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *DiscountRule) GetDiscountPrice() int64 {
	if x != nil {
		return x.DiscountPrice
	}
	return 0
}

func (x *DiscountRule) GetValidFrom() uint32 {
	if x != nil {
		return x.ValidFrom
	}
	return 0
}

func (x *DiscountRule) GetValidTo() uint32 {
	if x != nil {
		return x.ValidTo
	}
	return 0
}

func (x *DiscountRule) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DiscountRule) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *DiscountRule) GetGroupIds() []uint32 {
	if x != nil {
		return x.GroupIds
	}
	return nil
}

func (x *DiscountRule) GetDefaultRule() bool {
	if x != nil {
		return x.DefaultRule
	}
	return false
}

type RuleExtraInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTime uint32                     `protobuf:"varint,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime uint32                     `protobuf:"varint,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	Groups     []*RuleExtraInfo_GroupInfo `protobuf:"bytes,21,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *RuleExtraInfo) Reset() {
	*x = RuleExtraInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_promotion_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleExtraInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleExtraInfo) ProtoMessage() {}

func (x *RuleExtraInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_promotion_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleExtraInfo.ProtoReflect.Descriptor instead.
func (*RuleExtraInfo) Descriptor() ([]byte, []int) {
	return file_common_promotion_proto_rawDescGZIP(), []int{1}
}

func (x *RuleExtraInfo) GetCreateTime() uint32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *RuleExtraInfo) GetUpdateTime() uint32 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *RuleExtraInfo) GetGroups() []*RuleExtraInfo_GroupInfo {
	if x != nil {
		return x.Groups
	}
	return nil
}

type GroupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Version uint32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *GroupInfo) Reset() {
	*x = GroupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_promotion_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInfo) ProtoMessage() {}

func (x *GroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_promotion_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInfo.ProtoReflect.Descriptor instead.
func (*GroupInfo) Descriptor() ([]byte, []int) {
	return file_common_promotion_proto_rawDescGZIP(), []int{2}
}

func (x *GroupInfo) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GroupInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GroupInfo) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type Range struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LimitMin int64 `protobuf:"varint,1,opt,name=limit_min,json=limitMin,proto3" json:"limit_min,omitempty"`
	LimitMax int64 `protobuf:"varint,2,opt,name=limit_max,json=limitMax,proto3" json:"limit_max,omitempty"`
	Amount   int64 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *Range) Reset() {
	*x = Range{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_promotion_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Range) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Range) ProtoMessage() {}

func (x *Range) ProtoReflect() protoreflect.Message {
	mi := &file_common_promotion_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Range.ProtoReflect.Descriptor instead.
func (*Range) Descriptor() ([]byte, []int) {
	return file_common_promotion_proto_rawDescGZIP(), []int{3}
}

func (x *Range) GetLimitMin() int64 {
	if x != nil {
		return x.LimitMin
	}
	return 0
}

func (x *Range) GetLimitMax() int64 {
	if x != nil {
		return x.LimitMax
	}
	return 0
}

func (x *Range) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type CashbackRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CashbackId    uint32   `protobuf:"varint,1,opt,name=cashback_id,json=cashbackId,proto3" json:"cashback_id,omitempty"`
	ProductId     uint32   `protobuf:"varint,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Mod           int32    `protobuf:"varint,3,opt,name=mod,proto3" json:"mod,omitempty"` // 见Mode定义
	Percentage    uint32   `protobuf:"varint,4,opt,name=percentage,proto3" json:"percentage,omitempty"`
	MaxCashback   int64    `protobuf:"varint,5,opt,name=max_cashback,json=maxCashback,proto3" json:"max_cashback,omitempty"`
	MinCashback   int64    `protobuf:"varint,6,opt,name=min_cashback,json=minCashback,proto3" json:"min_cashback,omitempty"`
	FixedAmount   int64    `protobuf:"varint,7,opt,name=fixed_amount,json=fixedAmount,proto3" json:"fixed_amount,omitempty"`
	Status        int32    `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"` // 见RuleStatus定义
	ValidFrom     uint32   `protobuf:"varint,9,opt,name=valid_from,json=validFrom,proto3" json:"valid_from,omitempty"`
	ValidTo       uint32   `protobuf:"varint,10,opt,name=valid_to,json=validTo,proto3" json:"valid_to,omitempty"`
	Priority      uint32   `protobuf:"varint,11,opt,name=priority,proto3" json:"priority,omitempty"`
	GroupIds      []uint32 `protobuf:"varint,12,rep,packed,name=group_ids,json=groupIds,proto3" json:"group_ids,omitempty"`
	DefaultRule   bool     `protobuf:"varint,13,opt,name=default_rule,json=defaultRule,proto3" json:"default_rule,omitempty"`      // 是否是default rule
	PercentageStr string   `protobuf:"bytes,14,opt,name=percentage_str,json=percentageStr,proto3" json:"percentage_str,omitempty"` // 返现百分比，支持小数
	Ranges        []*Range `protobuf:"bytes,15,rep,name=ranges,proto3" json:"ranges,omitempty"`                                    //range列表
}

func (x *CashbackRule) Reset() {
	*x = CashbackRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_promotion_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CashbackRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashbackRule) ProtoMessage() {}

func (x *CashbackRule) ProtoReflect() protoreflect.Message {
	mi := &file_common_promotion_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashbackRule.ProtoReflect.Descriptor instead.
func (*CashbackRule) Descriptor() ([]byte, []int) {
	return file_common_promotion_proto_rawDescGZIP(), []int{4}
}

func (x *CashbackRule) GetCashbackId() uint32 {
	if x != nil {
		return x.CashbackId
	}
	return 0
}

func (x *CashbackRule) GetProductId() uint32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *CashbackRule) GetMod() int32 {
	if x != nil {
		return x.Mod
	}
	return 0
}

func (x *CashbackRule) GetPercentage() uint32 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

func (x *CashbackRule) GetMaxCashback() int64 {
	if x != nil {
		return x.MaxCashback
	}
	return 0
}

func (x *CashbackRule) GetMinCashback() int64 {
	if x != nil {
		return x.MinCashback
	}
	return 0
}

func (x *CashbackRule) GetFixedAmount() int64 {
	if x != nil {
		return x.FixedAmount
	}
	return 0
}

func (x *CashbackRule) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CashbackRule) GetValidFrom() uint32 {
	if x != nil {
		return x.ValidFrom
	}
	return 0
}

func (x *CashbackRule) GetValidTo() uint32 {
	if x != nil {
		return x.ValidTo
	}
	return 0
}

func (x *CashbackRule) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *CashbackRule) GetGroupIds() []uint32 {
	if x != nil {
		return x.GroupIds
	}
	return nil
}

func (x *CashbackRule) GetDefaultRule() bool {
	if x != nil {
		return x.DefaultRule
	}
	return false
}

func (x *CashbackRule) GetPercentageStr() string {
	if x != nil {
		return x.PercentageStr
	}
	return ""
}

func (x *CashbackRule) GetRanges() []*Range {
	if x != nil {
		return x.Ranges
	}
	return nil
}

type BonusRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BonusId                  uint32   `protobuf:"varint,1,opt,name=bonus_id,json=bonusId,proto3" json:"bonus_id,omitempty"`
	ProductId                uint32   `protobuf:"varint,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Mode                     int32    `protobuf:"varint,3,opt,name=mode,proto3" json:"mode,omitempty"`   //see mode enum
	Bonus                    uint64   `protobuf:"varint,4,opt,name=bonus,proto3" json:"bonus,omitempty"` //if mode = 1 then percentage else bonus_product_id
	Status                   int32    `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	Priority                 uint32   `protobuf:"varint,6,opt,name=priority,proto3" json:"priority,omitempty"`
	Range                    int32    `protobuf:"varint,7,opt,name=range,proto3" json:"range,omitempty"`
	ValidFrom                uint32   `protobuf:"varint,8,opt,name=valid_from,json=validFrom,proto3" json:"valid_from,omitempty"`
	ValidFromStr             string   `protobuf:"bytes,9,opt,name=valid_from_str,json=validFromStr,proto3" json:"valid_from_str,omitempty"`
	ValidTo                  uint32   `protobuf:"varint,10,opt,name=valid_to,json=validTo,proto3" json:"valid_to,omitempty"`
	ValidToStr               string   `protobuf:"bytes,11,opt,name=valid_to_str,json=validToStr,proto3" json:"valid_to_str,omitempty"`
	GroupIds                 []uint32 `protobuf:"varint,12,rep,packed,name=group_ids,json=groupIds,proto3" json:"group_ids,omitempty"`
	BonusProductName         string   `protobuf:"bytes,13,opt,name=bonus_product_name,json=bonusProductName,proto3" json:"bonus_product_name,omitempty"`
	BonusProductDenomination uint64   `protobuf:"varint,14,opt,name=bonus_product_denomination,json=bonusProductDenomination,proto3" json:"bonus_product_denomination,omitempty"`
}

func (x *BonusRule) Reset() {
	*x = BonusRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_promotion_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BonusRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BonusRule) ProtoMessage() {}

func (x *BonusRule) ProtoReflect() protoreflect.Message {
	mi := &file_common_promotion_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BonusRule.ProtoReflect.Descriptor instead.
func (*BonusRule) Descriptor() ([]byte, []int) {
	return file_common_promotion_proto_rawDescGZIP(), []int{5}
}

func (x *BonusRule) GetBonusId() uint32 {
	if x != nil {
		return x.BonusId
	}
	return 0
}

func (x *BonusRule) GetProductId() uint32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *BonusRule) GetMode() int32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *BonusRule) GetBonus() uint64 {
	if x != nil {
		return x.Bonus
	}
	return 0
}

func (x *BonusRule) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *BonusRule) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *BonusRule) GetRange() int32 {
	if x != nil {
		return x.Range
	}
	return 0
}

func (x *BonusRule) GetValidFrom() uint32 {
	if x != nil {
		return x.ValidFrom
	}
	return 0
}

func (x *BonusRule) GetValidFromStr() string {
	if x != nil {
		return x.ValidFromStr
	}
	return ""
}

func (x *BonusRule) GetValidTo() uint32 {
	if x != nil {
		return x.ValidTo
	}
	return 0
}

func (x *BonusRule) GetValidToStr() string {
	if x != nil {
		return x.ValidToStr
	}
	return ""
}

func (x *BonusRule) GetGroupIds() []uint32 {
	if x != nil {
		return x.GroupIds
	}
	return nil
}

func (x *BonusRule) GetBonusProductName() string {
	if x != nil {
		return x.BonusProductName
	}
	return ""
}

func (x *BonusRule) GetBonusProductDenomination() uint64 {
	if x != nil {
		return x.BonusProductDenomination
	}
	return 0
}

type BonusRuleRichInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bonus  *BonusRule   `protobuf:"bytes,1,opt,name=bonus,proto3" json:"bonus,omitempty"`
	Groups []*GroupInfo `protobuf:"bytes,2,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *BonusRuleRichInfo) Reset() {
	*x = BonusRuleRichInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_promotion_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BonusRuleRichInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BonusRuleRichInfo) ProtoMessage() {}

func (x *BonusRuleRichInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_promotion_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BonusRuleRichInfo.ProtoReflect.Descriptor instead.
func (*BonusRuleRichInfo) Descriptor() ([]byte, []int) {
	return file_common_promotion_proto_rawDescGZIP(), []int{6}
}

func (x *BonusRuleRichInfo) GetBonus() *BonusRule {
	if x != nil {
		return x.Bonus
	}
	return nil
}

func (x *BonusRuleRichInfo) GetGroups() []*GroupInfo {
	if x != nil {
		return x.Groups
	}
	return nil
}

type CashbackRuleRichInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base  *CashbackRule  `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Extra *RuleExtraInfo `protobuf:"bytes,2,opt,name=extra,proto3" json:"extra,omitempty"`
}

func (x *CashbackRuleRichInfo) Reset() {
	*x = CashbackRuleRichInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_promotion_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CashbackRuleRichInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashbackRuleRichInfo) ProtoMessage() {}

func (x *CashbackRuleRichInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_promotion_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashbackRuleRichInfo.ProtoReflect.Descriptor instead.
func (*CashbackRuleRichInfo) Descriptor() ([]byte, []int) {
	return file_common_promotion_proto_rawDescGZIP(), []int{7}
}

func (x *CashbackRuleRichInfo) GetBase() *CashbackRule {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *CashbackRuleRichInfo) GetExtra() *RuleExtraInfo {
	if x != nil {
		return x.Extra
	}
	return nil
}

type DiscountRuleRichInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base  *DiscountRule  `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Extra *RuleExtraInfo `protobuf:"bytes,2,opt,name=extra,proto3" json:"extra,omitempty"`
}

func (x *DiscountRuleRichInfo) Reset() {
	*x = DiscountRuleRichInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_promotion_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscountRuleRichInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscountRuleRichInfo) ProtoMessage() {}

func (x *DiscountRuleRichInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_promotion_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscountRuleRichInfo.ProtoReflect.Descriptor instead.
func (*DiscountRuleRichInfo) Descriptor() ([]byte, []int) {
	return file_common_promotion_proto_rawDescGZIP(), []int{8}
}

func (x *DiscountRuleRichInfo) GetBase() *DiscountRule {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *DiscountRuleRichInfo) GetExtra() *RuleExtraInfo {
	if x != nil {
		return x.Extra
	}
	return nil
}

type RuleExtraInfo_GroupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *RuleExtraInfo_GroupInfo) Reset() {
	*x = RuleExtraInfo_GroupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_promotion_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleExtraInfo_GroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleExtraInfo_GroupInfo) ProtoMessage() {}

func (x *RuleExtraInfo_GroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_promotion_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleExtraInfo_GroupInfo.ProtoReflect.Descriptor instead.
func (*RuleExtraInfo_GroupInfo) Descriptor() ([]byte, []int) {
	return file_common_promotion_proto_rawDescGZIP(), []int{1, 0}
}

func (x *RuleExtraInfo_GroupInfo) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RuleExtraInfo_GroupInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_common_promotion_proto protoreflect.FileDescriptor

var file_common_promotion_proto_rawDesc = []byte{
	0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x85, 0x03, 0x0a, 0x0c, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x19,
	0x0a, 0x08, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a,
	0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x22, 0x60, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x5f, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x02,
	0x12, 0x0d, 0x0a, 0x09, 0x53, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x03, 0x12,
	0x0f, 0x0a, 0x0b, 0x53, 0x5f, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x44, 0x10, 0x04,
	0x12, 0x0d, 0x0a, 0x09, 0x53, 0x5f, 0x45, 0x44, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x22,
	0xc2, 0x01, 0x0a, 0x0d, 0x52, 0x75, 0x6c, 0x65, 0x45, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x15, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x45, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x1a, 0x2f, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x49, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x59, 0x0a, 0x05, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x4d, 0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x6d,
	0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x4d,
	0x61, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xac, 0x04, 0x0a, 0x0c, 0x43,
	0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d, 0x6f, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b,
	0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63, 0x6b,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x43, 0x61, 0x73, 0x68, 0x62,
	0x61, 0x63, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x69, 0x78, 0x65, 0x64,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x19, 0x0a,
	0x08, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x74, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x72, 0x75, 0x6c,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x52, 0x75, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x53, 0x74, 0x72, 0x12, 0x2c, 0x0a, 0x06, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70,
	0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x06, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x22, 0x3e, 0x0a, 0x04, 0x4d, 0x6f, 0x64,
	0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x4d, 0x5f, 0x46, 0x49, 0x58, 0x45, 0x44, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x5f,
	0x50, 0x45, 0x52, 0x43, 0x45, 0x4e, 0x54, 0x41, 0x47, 0x45, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07,
	0x4d, 0x5f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x03, 0x22, 0x82, 0x04, 0x0a, 0x09, 0x42, 0x6f,
	0x6e, 0x75, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x6e, 0x75, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x6f, 0x6e, 0x75, 0x73,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x46, 0x72, 0x6f, 0x6d, 0x12, 0x24, 0x0a, 0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x74, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x5f, 0x74, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x54, 0x6f, 0x12, 0x20, 0x0a, 0x0c, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x74,
	0x6f, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x54, 0x6f, 0x53, 0x74, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x5f, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x1a, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x18, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x3c, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x4d, 0x4f, 0x44, 0x45,
	0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x4f, 0x44, 0x45, 0x5f,
	0x50, 0x45, 0x52, 0x43, 0x45, 0x4e, 0x54, 0x41, 0x47, 0x45, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c,
	0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x10, 0x02, 0x22, 0x75,
	0x0a, 0x11, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x69, 0x63, 0x68, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x0a, 0x05, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x05, 0x62, 0x6f,
	0x6e, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x7b, 0x0a, 0x14, 0x43, 0x61, 0x73, 0x68, 0x62, 0x61, 0x63,
	0x6b, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x69, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2f, 0x0a,
	0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70,
	0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x73, 0x68,
	0x62, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x32,
	0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x61, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x75,
	0x6c, 0x65, 0x45, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x22, 0x7b, 0x0a, 0x14, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75,
	0x6c, 0x65, 0x52, 0x69, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2f, 0x0a, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x63,
	0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2a,
	0x49, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x13, 0x0a, 0x0f,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f,
	0x41, 0x4c, 0x4c, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x52, 0x41,
	0x4e, 0x47, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x10, 0x02, 0x2a, 0x49, 0x0a, 0x09, 0x54, 0x69,
	0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x49, 0x4d, 0x45, 0x5f,
	0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e,
	0x54, 0x49, 0x4d, 0x45, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x41, 0x53, 0x43, 0x10, 0x01,
	0x12, 0x13, 0x0a, 0x0f, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x44,
	0x45, 0x53, 0x43, 0x10, 0x02, 0x42, 0x87, 0x01, 0x5a, 0x79, 0x67, 0x69, 0x74, 0x2e, 0x67, 0x61,
	0x72, 0x65, 0x6e, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x65, 0x65, 0x2f,
	0x6c, 0x6f, 0x61, 0x6e, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x61, 0x69, 0x72,
	0x70, 0x61, 0x79, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x61, 0x69, 0x72, 0x70,
	0x61, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x63, 0x5f, 0x72,
	0x65, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x61, 0x70, 0x63, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x33, 0x2e,
	0x70, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0xa2, 0x02, 0x09, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_promotion_proto_rawDescOnce sync.Once
	file_common_promotion_proto_rawDescData = file_common_promotion_proto_rawDesc
)

func file_common_promotion_proto_rawDescGZIP() []byte {
	file_common_promotion_proto_rawDescOnce.Do(func() {
		file_common_promotion_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_promotion_proto_rawDescData)
	})
	return file_common_promotion_proto_rawDescData
}

var file_common_promotion_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_common_promotion_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_common_promotion_proto_goTypes = []interface{}{
	(UserRange)(0),                  // 0: apc.promotion.UserRange
	(TimeOrder)(0),                  // 1: apc.promotion.TimeOrder
	(DiscountRule_Status)(0),        // 2: apc.promotion.DiscountRule.Status
	(CashbackRule_Mode)(0),          // 3: apc.promotion.CashbackRule.Mode
	(BonusRule_Mode)(0),             // 4: apc.promotion.BonusRule.Mode
	(*DiscountRule)(nil),            // 5: apc.promotion.DiscountRule
	(*RuleExtraInfo)(nil),           // 6: apc.promotion.RuleExtraInfo
	(*GroupInfo)(nil),               // 7: apc.promotion.GroupInfo
	(*Range)(nil),                   // 8: apc.promotion.Range
	(*CashbackRule)(nil),            // 9: apc.promotion.CashbackRule
	(*BonusRule)(nil),               // 10: apc.promotion.BonusRule
	(*BonusRuleRichInfo)(nil),       // 11: apc.promotion.BonusRuleRichInfo
	(*CashbackRuleRichInfo)(nil),    // 12: apc.promotion.CashbackRuleRichInfo
	(*DiscountRuleRichInfo)(nil),    // 13: apc.promotion.DiscountRuleRichInfo
	(*RuleExtraInfo_GroupInfo)(nil), // 14: apc.promotion.RuleExtraInfo.GroupInfo
}
var file_common_promotion_proto_depIdxs = []int32{
	14, // 0: apc.promotion.RuleExtraInfo.groups:type_name -> apc.promotion.RuleExtraInfo.GroupInfo
	8,  // 1: apc.promotion.CashbackRule.ranges:type_name -> apc.promotion.Range
	10, // 2: apc.promotion.BonusRuleRichInfo.bonus:type_name -> apc.promotion.BonusRule
	7,  // 3: apc.promotion.BonusRuleRichInfo.groups:type_name -> apc.promotion.GroupInfo
	9,  // 4: apc.promotion.CashbackRuleRichInfo.base:type_name -> apc.promotion.CashbackRule
	6,  // 5: apc.promotion.CashbackRuleRichInfo.extra:type_name -> apc.promotion.RuleExtraInfo
	5,  // 6: apc.promotion.DiscountRuleRichInfo.base:type_name -> apc.promotion.DiscountRule
	6,  // 7: apc.promotion.DiscountRuleRichInfo.extra:type_name -> apc.promotion.RuleExtraInfo
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_common_promotion_proto_init() }
func file_common_promotion_proto_init() {
	if File_common_promotion_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_common_promotion_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscountRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_promotion_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleExtraInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_promotion_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_promotion_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Range); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_promotion_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CashbackRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_promotion_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BonusRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_promotion_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BonusRuleRichInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_promotion_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CashbackRuleRichInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_promotion_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscountRuleRichInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_promotion_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleExtraInfo_GroupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_promotion_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_promotion_proto_goTypes,
		DependencyIndexes: file_common_promotion_proto_depIdxs,
		EnumInfos:         file_common_promotion_proto_enumTypes,
		MessageInfos:      file_common_promotion_proto_msgTypes,
	}.Build()
	File_common_promotion_proto = out.File
	file_common_promotion_proto_rawDesc = nil
	file_common_promotion_proto_goTypes = nil
	file_common_promotion_proto_depIdxs = nil
}
