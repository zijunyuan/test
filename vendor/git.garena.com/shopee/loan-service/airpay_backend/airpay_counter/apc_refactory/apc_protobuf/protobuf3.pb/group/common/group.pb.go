//
//@Time : 2020-02-25 17:05
//@Author : siminliao

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: common/group.proto

package common

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type DimensionType int32

const (
	DimensionType_DT_NONE                DimensionType = 0
	DimensionType_DT_CHAIN_STORE_ID      DimensionType = 1
	DimensionType_DT_MERCHANT_ID         DimensionType = 2
	DimensionType_DT_MERCHANT_PROVINCE   DimensionType = 3
	DimensionType_DT_MERCHANT_DISTRICT   DimensionType = 4
	DimensionType_DT_STORE_ID            DimensionType = 5
	DimensionType_DT_STORE_BUSINESS_TYPE DimensionType = 6
	DimensionType_DT_STORE_PROVINCE      DimensionType = 7
	DimensionType_DT_STORE_DISTRICT      DimensionType = 8
	DimensionType_DT_STAFF_ID            DimensionType = 9
	DimensionType_DT_USER_PLATFORM       DimensionType = 10
	DimensionType_DT_USER_APP_VERSION    DimensionType = 11
	DimensionType_DT_USER_ID             DimensionType = 12 // 对应的是印尼mitra生成的user_id
	DimensionType_DT_STORE_TYPE          DimensionType = 13
	DimensionType_DT_MERCHANT_TYPE       DimensionType = 14
	DimensionType_DT_MERCHANT_VAT_STATUS DimensionType = 15 //for th
	DimensionType_DT_MERCHANT_WHT_STATUS DimensionType = 16 //for th
)

// Enum value maps for DimensionType.
var (
	DimensionType_name = map[int32]string{
		0:  "DT_NONE",
		1:  "DT_CHAIN_STORE_ID",
		2:  "DT_MERCHANT_ID",
		3:  "DT_MERCHANT_PROVINCE",
		4:  "DT_MERCHANT_DISTRICT",
		5:  "DT_STORE_ID",
		6:  "DT_STORE_BUSINESS_TYPE",
		7:  "DT_STORE_PROVINCE",
		8:  "DT_STORE_DISTRICT",
		9:  "DT_STAFF_ID",
		10: "DT_USER_PLATFORM",
		11: "DT_USER_APP_VERSION",
		12: "DT_USER_ID",
		13: "DT_STORE_TYPE",
		14: "DT_MERCHANT_TYPE",
		15: "DT_MERCHANT_VAT_STATUS",
		16: "DT_MERCHANT_WHT_STATUS",
	}
	DimensionType_value = map[string]int32{
		"DT_NONE":                0,
		"DT_CHAIN_STORE_ID":      1,
		"DT_MERCHANT_ID":         2,
		"DT_MERCHANT_PROVINCE":   3,
		"DT_MERCHANT_DISTRICT":   4,
		"DT_STORE_ID":            5,
		"DT_STORE_BUSINESS_TYPE": 6,
		"DT_STORE_PROVINCE":      7,
		"DT_STORE_DISTRICT":      8,
		"DT_STAFF_ID":            9,
		"DT_USER_PLATFORM":       10,
		"DT_USER_APP_VERSION":    11,
		"DT_USER_ID":             12,
		"DT_STORE_TYPE":          13,
		"DT_MERCHANT_TYPE":       14,
		"DT_MERCHANT_VAT_STATUS": 15,
		"DT_MERCHANT_WHT_STATUS": 16,
	}
)

func (x DimensionType) Enum() *DimensionType {
	p := new(DimensionType)
	*p = x
	return p
}

func (x DimensionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DimensionType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_group_proto_enumTypes[0].Descriptor()
}

func (DimensionType) Type() protoreflect.EnumType {
	return &file_common_group_proto_enumTypes[0]
}

func (x DimensionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DimensionType.Descriptor instead.
func (DimensionType) EnumDescriptor() ([]byte, []int) {
	return file_common_group_proto_rawDescGZIP(), []int{0}
}

type Group_Type int32

const (
	Group_T_NONE       Group_Type = 0
	Group_T_Commission Group_Type = 1
	Group_T_Block      Group_Type = 2
)

// Enum value maps for Group_Type.
var (
	Group_Type_name = map[int32]string{
		0: "T_NONE",
		1: "T_Commission",
		2: "T_Block",
	}
	Group_Type_value = map[string]int32{
		"T_NONE":       0,
		"T_Commission": 1,
		"T_Block":      2,
	}
)

func (x Group_Type) Enum() *Group_Type {
	p := new(Group_Type)
	*p = x
	return p
}

func (x Group_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Group_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_common_group_proto_enumTypes[1].Descriptor()
}

func (Group_Type) Type() protoreflect.EnumType {
	return &file_common_group_proto_enumTypes[1]
}

func (x Group_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Group_Type.Descriptor instead.
func (Group_Type) EnumDescriptor() ([]byte, []int) {
	return file_common_group_proto_rawDescGZIP(), []int{0, 0}
}

type Dimension_Calculator int32

const (
	Dimension_C_NONE   Dimension_Calculator = 0
	Dimension_C_IN     Dimension_Calculator = 1
	Dimension_C_NOT_IN Dimension_Calculator = 2
)

// Enum value maps for Dimension_Calculator.
var (
	Dimension_Calculator_name = map[int32]string{
		0: "C_NONE",
		1: "C_IN",
		2: "C_NOT_IN",
	}
	Dimension_Calculator_value = map[string]int32{
		"C_NONE":   0,
		"C_IN":     1,
		"C_NOT_IN": 2,
	}
)

func (x Dimension_Calculator) Enum() *Dimension_Calculator {
	p := new(Dimension_Calculator)
	*p = x
	return p
}

func (x Dimension_Calculator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Dimension_Calculator) Descriptor() protoreflect.EnumDescriptor {
	return file_common_group_proto_enumTypes[2].Descriptor()
}

func (Dimension_Calculator) Type() protoreflect.EnumType {
	return &file_common_group_proto_enumTypes[2]
}

func (x Dimension_Calculator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Dimension_Calculator.Descriptor instead.
func (Dimension_Calculator) EnumDescriptor() ([]byte, []int) {
	return file_common_group_proto_rawDescGZIP(), []int{1, 0}
}

type GroupLog_OperateType int32

const (
	GroupLog_O_NONE GroupLog_OperateType = 0
	GroupLog_O_ADD  GroupLog_OperateType = 1
	GroupLog_O_EDIT GroupLog_OperateType = 2
)

// Enum value maps for GroupLog_OperateType.
var (
	GroupLog_OperateType_name = map[int32]string{
		0: "O_NONE",
		1: "O_ADD",
		2: "O_EDIT",
	}
	GroupLog_OperateType_value = map[string]int32{
		"O_NONE": 0,
		"O_ADD":  1,
		"O_EDIT": 2,
	}
)

func (x GroupLog_OperateType) Enum() *GroupLog_OperateType {
	p := new(GroupLog_OperateType)
	*p = x
	return p
}

func (x GroupLog_OperateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GroupLog_OperateType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_group_proto_enumTypes[3].Descriptor()
}

func (GroupLog_OperateType) Type() protoreflect.EnumType {
	return &file_common_group_proto_enumTypes[3]
}

func (x GroupLog_OperateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GroupLog_OperateType.Descriptor instead.
func (GroupLog_OperateType) EnumDescriptor() ([]byte, []int) {
	return file_common_group_proto_rawDescGZIP(), []int{2, 0}
}

type Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint32       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description  string       `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Creator      string       `protobuf:"bytes,4,opt,name=creator,proto3" json:"creator,omitempty"`
	CreateTime   uint32       `protobuf:"varint,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime   uint32       `protobuf:"varint,6,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	Type         int32        `protobuf:"varint,7,opt,name=type,proto3" json:"type,omitempty"` // 见Type定义
	Version      uint32       `protobuf:"varint,8,opt,name=version,proto3" json:"version,omitempty"`
	LastOperator string       `protobuf:"bytes,9,opt,name=last_operator,json=lastOperator,proto3" json:"last_operator,omitempty"` // 最后更新人
	Dimensions   []*Dimension `protobuf:"bytes,10,rep,name=dimensions,proto3" json:"dimensions,omitempty"`
}

func (x *Group) Reset() {
	*x = Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_group_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_common_group_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_common_group_proto_rawDescGZIP(), []int{0}
}

func (x *Group) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Group) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Group) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Group) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *Group) GetCreateTime() uint32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Group) GetUpdateTime() uint32 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *Group) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Group) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Group) GetLastOperator() string {
	if x != nil {
		return x.LastOperator
	}
	return ""
}

func (x *Group) GetDimensions() []*Dimension {
	if x != nil {
		return x.Dimensions
	}
	return nil
}

type Dimension struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       uint32   `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`             // 业务自定义维度 见DimensionType
	Calculator int32    `protobuf:"varint,2,opt,name=calculator,proto3" json:"calculator,omitempty"` // 操作符: Calculator
	Values     []string `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *Dimension) Reset() {
	*x = Dimension{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_group_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dimension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dimension) ProtoMessage() {}

func (x *Dimension) ProtoReflect() protoreflect.Message {
	mi := &file_common_group_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dimension.ProtoReflect.Descriptor instead.
func (*Dimension) Descriptor() ([]byte, []int) {
	return file_common_group_proto_rawDescGZIP(), []int{1}
}

func (x *Dimension) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Dimension) GetCalculator() int32 {
	if x != nil {
		return x.Calculator
	}
	return 0
}

func (x *Dimension) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type GroupLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version     uint32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	GroupId     uint32 `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Operator    string `protobuf:"bytes,3,opt,name=operator,proto3" json:"operator,omitempty"`
	OpType      int32  `protobuf:"varint,4,opt,name=op_type,json=opType,proto3" json:"op_type,omitempty"` // OperateType
	CreateTime  uint32 `protobuf:"varint,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	OldSnapshot string `protobuf:"bytes,6,opt,name=old_snapshot,json=oldSnapshot,proto3" json:"old_snapshot,omitempty"` // 老规则快照
	NewSnapshot string `protobuf:"bytes,7,opt,name=new_snapshot,json=newSnapshot,proto3" json:"new_snapshot,omitempty"` // 新规则快照
	Remark      string `protobuf:"bytes,8,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *GroupLog) Reset() {
	*x = GroupLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_group_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupLog) ProtoMessage() {}

func (x *GroupLog) ProtoReflect() protoreflect.Message {
	mi := &file_common_group_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupLog.ProtoReflect.Descriptor instead.
func (*GroupLog) Descriptor() ([]byte, []int) {
	return file_common_group_proto_rawDescGZIP(), []int{2}
}

func (x *GroupLog) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GroupLog) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *GroupLog) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *GroupLog) GetOpType() int32 {
	if x != nil {
		return x.OpType
	}
	return 0
}

func (x *GroupLog) GetCreateTime() uint32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *GroupLog) GetOldSnapshot() string {
	if x != nil {
		return x.OldSnapshot
	}
	return ""
}

func (x *GroupLog) GetNewSnapshot() string {
	if x != nil {
		return x.NewSnapshot
	}
	return ""
}

func (x *GroupLog) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

var File_common_group_proto protoreflect.FileDescriptor

var file_common_group_proto_rawDesc = []byte{
	0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x61, 0x70, 0x63, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22,
	0xe5, 0x02, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x34,
	0x0a, 0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x63, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x44,
	0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x31, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06,
	0x54, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x5f, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x5f,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x10, 0x02, 0x22, 0x89, 0x01, 0x0a, 0x09, 0x44, 0x69, 0x6d, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63,
	0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x22, 0x30, 0x0a, 0x0a, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x0a, 0x0a, 0x06, 0x43, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x43,
	0x5f, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x49,
	0x4e, 0x10, 0x02, 0x22, 0xa5, 0x02, 0x0a, 0x08, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x6f, 0x67,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6f,
	0x6c, 0x64, 0x5f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6f, 0x6c, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x5f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x30, 0x0a, 0x0b, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x5f, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x5f, 0x41, 0x44, 0x44, 0x10, 0x01, 0x12,
	0x0a, 0x0a, 0x06, 0x4f, 0x5f, 0x45, 0x44, 0x49, 0x54, 0x10, 0x02, 0x2a, 0x87, 0x03, 0x0a, 0x0d,
	0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x44, 0x54, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x54,
	0x5f, 0x43, 0x48, 0x41, 0x49, 0x4e, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x49, 0x44, 0x10,
	0x01, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x54, 0x5f, 0x4d, 0x45, 0x52, 0x43, 0x48, 0x41, 0x4e, 0x54,
	0x5f, 0x49, 0x44, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x44, 0x54, 0x5f, 0x4d, 0x45, 0x52, 0x43,
	0x48, 0x41, 0x4e, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x4e, 0x43, 0x45, 0x10, 0x03, 0x12,
	0x18, 0x0a, 0x14, 0x44, 0x54, 0x5f, 0x4d, 0x45, 0x52, 0x43, 0x48, 0x41, 0x4e, 0x54, 0x5f, 0x44,
	0x49, 0x53, 0x54, 0x52, 0x49, 0x43, 0x54, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x54, 0x5f,
	0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x49, 0x44, 0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16, 0x44, 0x54,
	0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x42, 0x55, 0x53, 0x49, 0x4e, 0x45, 0x53, 0x53, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x10, 0x06, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x54, 0x5f, 0x53, 0x54, 0x4f,
	0x52, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x4e, 0x43, 0x45, 0x10, 0x07, 0x12, 0x15, 0x0a,
	0x11, 0x44, 0x54, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x44, 0x49, 0x53, 0x54, 0x52, 0x49,
	0x43, 0x54, 0x10, 0x08, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x46, 0x46,
	0x5f, 0x49, 0x44, 0x10, 0x09, 0x12, 0x14, 0x0a, 0x10, 0x44, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x10, 0x0a, 0x12, 0x17, 0x0a, 0x13, 0x44,
	0x54, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x41, 0x50, 0x50, 0x5f, 0x56, 0x45, 0x52, 0x53, 0x49,
	0x4f, 0x4e, 0x10, 0x0b, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x49, 0x44, 0x10, 0x0c, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x54, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x0d, 0x12, 0x14, 0x0a, 0x10, 0x44, 0x54, 0x5f, 0x4d, 0x45,
	0x52, 0x43, 0x48, 0x41, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x0e, 0x12, 0x1a, 0x0a,
	0x16, 0x44, 0x54, 0x5f, 0x4d, 0x45, 0x52, 0x43, 0x48, 0x41, 0x4e, 0x54, 0x5f, 0x56, 0x41, 0x54,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x0f, 0x12, 0x1a, 0x0a, 0x16, 0x44, 0x54, 0x5f,
	0x4d, 0x45, 0x52, 0x43, 0x48, 0x41, 0x4e, 0x54, 0x5f, 0x57, 0x48, 0x54, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x10, 0x10, 0x42, 0x7f, 0x5a, 0x75, 0x67, 0x69, 0x74, 0x2e, 0x67, 0x61, 0x72,
	0x65, 0x6e, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x65, 0x65, 0x2f, 0x6c,
	0x6f, 0x61, 0x6e, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x61, 0x69, 0x72, 0x70,
	0x61, 0x79, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x61, 0x69, 0x72, 0x70, 0x61,
	0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x63, 0x5f, 0x72, 0x65,
	0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x61, 0x70, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x33, 0x2e, 0x70,
	0x62, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0xa2, 0x02,
	0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_group_proto_rawDescOnce sync.Once
	file_common_group_proto_rawDescData = file_common_group_proto_rawDesc
)

func file_common_group_proto_rawDescGZIP() []byte {
	file_common_group_proto_rawDescOnce.Do(func() {
		file_common_group_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_group_proto_rawDescData)
	})
	return file_common_group_proto_rawDescData
}

var file_common_group_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_common_group_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_common_group_proto_goTypes = []interface{}{
	(DimensionType)(0),        // 0: apc.group.DimensionType
	(Group_Type)(0),           // 1: apc.group.Group.Type
	(Dimension_Calculator)(0), // 2: apc.group.Dimension.Calculator
	(GroupLog_OperateType)(0), // 3: apc.group.GroupLog.OperateType
	(*Group)(nil),             // 4: apc.group.Group
	(*Dimension)(nil),         // 5: apc.group.Dimension
	(*GroupLog)(nil),          // 6: apc.group.GroupLog
}
var file_common_group_proto_depIdxs = []int32{
	5, // 0: apc.group.Group.dimensions:type_name -> apc.group.Dimension
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_common_group_proto_init() }
func file_common_group_proto_init() {
	if File_common_group_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_common_group_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_group_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dimension); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_group_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_group_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_group_proto_goTypes,
		DependencyIndexes: file_common_group_proto_depIdxs,
		EnumInfos:         file_common_group_proto_enumTypes,
		MessageInfos:      file_common_group_proto_msgTypes,
	}.Build()
	File_common_group_proto = out.File
	file_common_group_proto_rawDesc = nil
	file_common_group_proto_goTypes = nil
	file_common_group_proto_depIdxs = nil
}
